```{r}
#| warning: false
#| message: false
#| error: false
library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(plotly)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(DT)
library(stringr)
library(scales)
library(ggthemes)
```

# Introduction

This is a book created from markdown and executable code.

See @knuth84 for additional discussion of literate programming.

```{r}
1 + 1
```

![](intro/power_automate_projeto_2022.jpg)

Criar pastas mensais

ocultar pastas de acordo com as atividades do mês

gerar mensalmente a lista de tarefas para a equipe

criar variáveis de controle (RCL, despesa total, receita total, total de RP, despesas e receitas previdenciárias...)

Exportar TG/e-mail/share point

Vincular pastas/arquivos

gerar RREO em Foco

melhorar planilhas

1.  celulas nomeadas

2.  nomenclatura

3.  batimento

4.  siafi x TG (balancete)

5.  base de dados com série histórica

6.  mês/ano

7.  Notas explicativas

8.  leis e legislação (atualizar automaticamente)

Automatizar RREO imprensa

Automatizar RREO Internet

Regra de cálculo x SICONFI

SQL x TG

Monitorar cadastro de fontes, uos, órgãos, contas contábeis...

```{r}
dados_despesa <- read_excel("auto_despesa.xlsx", 
    col_types = c("text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "numeric", "numeric", "numeric", 
        "numeric", "numeric")) %>% clean_names()




dados_receita <- read_excel("auto_receita.xlsx") %>% clean_names()
```

```{r}
atributos_atuais <- read_excel("filtros.xlsx", sheet = "metodologia")

atributos_atuais <- atributos_atuais %>% unique()

datatable(atributos_atuais %>% group_by(atributos) %>% summarise(tabelas_associadas = n()) %>% arrange(desc(tabelas_associadas)))
```

```{r}
datatable(atributos_atuais %>% group_by( demonstrativo) %>% summarise(quantidade_atributos = n())%>% arrange(desc(quantidade_atributos))  )
```

```{r}
datatable(atributos_atuais %>% group_by(atributo_clean) %>%  count())  
```

```{r}
unicos_despesa <- map(dados_despesa, unique)

unicos_despesa <- map_df(unicos_despesa, length)

unicos_despesa <- pivot_longer(unicos_despesa, cols = everything())


unicos_receita <- map(dados_receita, unique)

unicos_receita <- map_df(unicos_receita, length)

unicos_receita <- pivot_longer(unicos_receita, cols = everything())

unico <- rbind(unicos_despesa, unicos_receita)



colnames(unico)[1] ="atributo_clean"


colnames(unicos_despesa)[1] ="atributo_clean"

colnames(unicos_receita)[1] ="atributo_clean"



```

```{r}

atributos_atuais_totais <- left_join(atributos_atuais, unico)

atributos_atuais_receita <- left_join(atributos_atuais, unicos_receita)

atributos_atuais_despesa <- left_join(atributos_atuais, unicos_despesa)


```

```{r}
datatable(atributos_atuais_receita %>% filter(dimensao %in% c("receita")) %>% group_by(dimensao, atributo_clean) %>% summarise(value = max(value)))
```

```{r}
datatable(atributos_atuais_despesa %>% filter(dimensao %in% c("despesa", "despesa_receita"), is.na(value)) %>% group_by(demonstrativo, dimensao, atributo_clean) %>% summarise(value = max(value)))
```

```{r}
datatable(atributos_atuais_totais %>% filter( is.na(value), dimensao != "receita") %>% group_by(demonstrativo, dimensao, atributo_clean) %>% summarise(value = max(value)))
```
