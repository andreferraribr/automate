---
title: "üìä RREO & RGF - Relat√≥rios Fiscais"
subtitle: "Sistema Unificado de Relat√≥rios Fiscais do Governo Federal"
author: "Governo Federal"
date: today
execute:
  warning: false
  message: false
  cache: true
format:
  html:
    theme: cosmo
    toc: true
    toc-depth: 3
    number-sections: true
    code-fold: true
    code-summary: "Mostrar c√≥digo"
    fig-width: 10
    fig-height: 6
---

# üìö Carregamento de Bibliotecas e Configura√ß√µes {#sec-setup}

```{r setup}
#| include: false

# Bibliotecas principais
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(janitor)
library(purrr)
library(forcats)
library(DT)
library(knitr)
library(kableExtra)
library(readr)
library(scales)
library(lubridate)

# Configura√ß√µes globais
options(OutDec = ".")
options(scipen = 999)

# Configura√ß√µes DT
options(DT.options = 
  list(
    pageLength = 20,
    lengthMenu = c(5, 10, 25, 50, 100),
    language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json')
  )
)

# Operadores customizados
`%notin%` <- Negate(`%in%`)
`%||%` <- function(x, y) if(is.null(x) || length(x) == 0 || is.na(x)) y else x

print("‚úÖ Bibliotecas carregadas com sucesso!")
```

## üîß Vari√°veis Globais

```{r variaveis_globais}
# Filtro principal do m√™s
mes_filtro <- "202509"

mes_pasta <- str_c("data/",mes_filtro,"/")

print(paste("üìÖ M√™s de refer√™ncia definido:", mes_filtro))
```

# üì• Importa√ß√£o dos Dados {#sec-dados}

## üí∞ Dados de Despesa

Criar vari√°veis:

tipo_modalidade

refinanciamento

transferencia

```{r dados_despesa}
#| echo: true
#| eval: true



# RGF Anexo 1
rgf_a01 <- read_excel(str_c(mes_pasta, "rgf_a01.xlsx"), skip = 5) %>%
  clean_names() %>%
  mutate(
    mes_lancamento = as.numeric(mes_lancamento),
    data_lancamento = ceiling_date(ymd(paste0(mes_lancamento, "01")), "month") - days(1)
  )




# RGF Anexo 3
rgf_a03 <- read_excel(str_c(mes_pasta, "rgf_a03.xlsx"), skip = 5) %>%
  clean_names() %>%
  mutate(
    mes_lancamento = as.numeric(mes_lancamento),
    data_lancamento = ceiling_date(ymd(paste0(mes_lancamento, "01")), "month") - days(1)
  )

# RGF Anexo 4
rgf_a04_receitas <- read_excel(str_c(mes_pasta, "rgf_a04_receitas.xlsx"), skip = 5) %>%
  clean_names() %>%
  mutate(
    mes_lancamento = as.numeric(mes_lancamento),
    data_lancamento = ceiling_date(ymd(paste0(mes_lancamento, "01")), "month") - days(1)
  )

# RGF Anexo 4
rgf_a04_despesas <- read_excel(str_c(mes_pasta, "rgf_a04_despesas.xlsx"), skip = 5) %>%
  clean_names() %>%
  mutate(
    mes_lancamento = as.numeric(mes_lancamento),
    data_lancamento = ceiling_date(ymd(paste0(mes_lancamento, "01")), "month") - days(1)
  )
```

## üè¶ Dados Cont√°beis e Espec√≠ficos

```{r dados_contabeis}
#| echo: true
#| eval: true



# Function to read and process each file
read_and_process <- function(file) {
  dados <- read_excel(str_c(mes_pasta, file), skip = 5) %>%
    clean_names() %>%
    mutate(
      ug = "demais",
      movim_liquido_r_conta_contabil = as.numeric(movim_liquido_r_conta_contabil),
      mes_lancamento = as.numeric(mes_lancamento),
      data_lancamento = ceiling_date(ymd(paste0(mes_lancamento, "01")), "month") - days(1)
    )
  return(dados)
}

# Create individual data frames for each Excel file
rgf_a02_precatorios <- read_and_process("rgf_a02_precatorios.xlsx")
rgf_a02_rp_exceto_170600 <- read_and_process("rgf_a02_rp_exceto_170600.xlsx")
rgf_a02_rp_todas_ugs <- read_and_process("rgf_a02_rp_todas_ugs.xlsx")
rgf_a02_ug_170512 <- read_and_process("rgf_a02_ug_170512.xlsx")
rgf_a02_creditos_bancarios <- read_and_process("rgf_a02_creditos_bancarios.xlsx")
rgf_a02_entidade <- read_and_process("rgf_a02_entidade.xlsx")
rgf_a02_balancete <- read_and_process("rgf_a02_balancete.xlsx")

# Linha 02
rgf_a02_aplicacao_titulos_publicos <- read_and_process("rgf_a02_aplicacao_titulos_publicos.xlsx")

# Linhas 07 e 12
rgf_a02_balancete <- read_and_process("rgf_a02_balancete.xlsx")

# Linha 13
rgf_a02_balancete_fat <- read_and_process("rgf_a02_balancete_fat.xlsx")

# Linha 14
rgf_a02_balancete_fundos_111215100 <- read_and_process("rgf_a02_balancete_fundos_111215100.xlsx")

# Linhas 15 e 16
rgf_a02_balancete_fundos <- read_and_process("rgf_a02_balancete_fundos.xlsx")


rgf_a02_balancete_deducoes_depositos_a_vista <-  read_and_process("rgf_a02_balancete_deducoes_depositos_a_vista.xlsx")








```

```{r}
# Buscar todos os arquivos de despesa
arq_rgf_a05 <- list.files(path = mes_pasta, pattern = 'rgf_a05', full.names = TRUE)
dados_rgf_a05 <- map_df(arq_rgf_a05, ~ read_excel(.x, skip = 5, col_types = "text")) %>%
  clean_names()  %>%
  mutate(
    # Converter colunas num√©ricas espec√≠ficas do DCL 2a
    movim_liquido_r_conta_contabil = as.numeric(movim_liquido_r_conta_contabil),
    mes_lancamento = as.numeric(mes_lancamento),
    # Convers√£o de data
    data_lancamento = ceiling_date(ymd(paste0(mes_lancamento, "01")), "month") - days(1)
  )
```

# Fun√ß√µes {#sec-funcoes-aux}

## Aplicar Crit√©rios

```{r}
aplicar_criterios <- function(df, criterios, group_vars = NULL) {
  
  # Detectar automaticamente a m√©trica
  metrica <- names(df)[grepl("^(saldo|movim)", names(df), ignore.case = TRUE)][1]
  
  # Capturar o nome do dataframe passado como argumento
  df_completo <- paste(deparse(substitute(df)), collapse = " ")
  
  # Separar nome da df de eventuais filtros
  if (grepl("%>%", df_completo)) {
    # Se h√° pipe, extrair apenas o nome da df original
    df_nome <- trimws(strsplit(df_completo, "%>%")[[1]][1])
    df_filtros <- paste(strsplit(df_completo, "%>%")[[1]][-1], collapse = " %>% ")
    df_filtros <- trimws(df_filtros)
  } else {
    # Se n√£o h√° pipe, usar o nome completo
    df_nome <- df_completo
    df_filtros <- NA
  }
  
  # Capturar o nome da vari√°vel criterios passada como argumento
  criterios_nome <- deparse(substitute(criterios))
  
  # Definir vari√°veis de agrupamento
  # Se group_vars n√£o foi fornecido, usar apenas mes_lancamento
  if (is.null(group_vars)) {
    group_vars <- "mes_lancamento"
  } else {
    # Garantir que mes_lancamento esteja sempre inclu√≠do
    if (!"mes_lancamento" %in% group_vars) {
      group_vars <- c("mes_lancamento", group_vars)
    }
  }
  
  # Verificar se as colunas de agrupamento existem na df
  group_vars <- group_vars[group_vars %in% names(df)]
  
  # Desmembrar o nome da vari√°vel criterios usando "_" como separador
  partes <- strsplit(criterios_nome, "_")[[1]]
  
  # Remover "criterios" se estiver presente
  if (partes[1] == "criterios") {
    partes <- partes[-1]
  }
  
  relatorio <- if (length(partes) >= 1) partes[1] else NA
  anexo_codigo <- if (length(partes) >= 2) partes[2] else NA
  anexo_nome <- if (length(partes) >= 3) partes[3] else NA
  detalhe <- if (length(partes) >= 4) paste(partes[4:length(partes)], collapse = "_") else NA
  
  # Aplicar crit√©rios - apenas filtros normais
  resultado <- map_df(names(criterios), function(categoria) {
    crit <- criterios[[categoria]]
    
    # Pular f√≥rmulas matem√°ticas - ser√£o tratadas em calcular_operacoes
    if (grepl("\\{[^}]+\\}", crit$criterio)) {
      return(data.frame())
    }
    
    # Extrair informa√ß√£o de print do nome da categoria
    if (grepl("_s$", categoria)) {
      print_flag <- "s"
      categoria_limpa <- str_replace(categoria, "_s$", "")
    } else if (grepl("_n$", categoria)) {
      print_flag <- "n"
      categoria_limpa <- str_replace(categoria, "_n$", "")
    } else {
      print_flag <- "s"  # default
      categoria_limpa <- categoria
    }
    
    # Avaliar condi√ß√£o
    condicao_expr <- eval(parse(text = crit$criterio), envir = df)
    
    # Aplicar filtro e agrupar
    if (length(group_vars) > 0) {
      df %>%
        filter(condicao_expr) %>%
        group_by(across(all_of(group_vars))) %>%
        summarise(
          valor = sum(.data[[metrica]], na.rm = TRUE),
          .groups = "drop"
        ) %>%
        mutate(
          categoria = categoria_limpa,
          metrica = metrica,
          dataframe_nome = df_nome,
          dataframe_filtros = df_filtros,
          relatorio = relatorio,
          anexo_codigo = anexo_codigo,
          anexo_nome = anexo_nome,
          detalhe = detalhe,
          print = print_flag,
          filtro = crit$criterio
        ) %>%
        separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE) %>%
        select(mes_lancamento, everything())
    } else {
      # Se n√£o h√° vari√°veis de agrupamento, retornar apenas o total
      df %>%
        filter(condicao_expr) %>%
        summarise(
          valor = sum(.data[[metrica]], na.rm = TRUE)
        ) %>%
        mutate(
          mes_lancamento = NA,
          categoria = categoria_limpa,
          metrica = metrica,
          dataframe_nome = df_nome,
          dataframe_filtros = df_filtros,
          relatorio = relatorio,
          anexo_codigo = anexo_codigo,
          anexo_nome = anexo_nome,
          detalhe = detalhe,
          print = print_flag,
          filtro = crit$criterio
        ) %>%
        separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE) %>%
        select(mes_lancamento, everything())
    }
  })
  
  # Criar o nome da nova dataframe com prefixo df_
  novo_nome <- paste0("df_", criterios_nome)
  
  # Atribuir o resultado √† nova dataframe no ambiente global
  assign(novo_nome, resultado, envir = .GlobalEnv)
  
  # Retornar o resultado tamb√©m
  return(resultado)
}
```

```         
```

# üìã Anexo 1 (Despesa com Pessoal)

```{r}
#| code-fold: true
#| eval: true
criterios_rgf_A01_pessoal_rgf <- list(
  
  # PESSOAL TOTAL
  `01  Pessoal Total` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' | (grupo_despesa_codigo_grupo == '3' & elemento_despesa_codigo == '34')"
  ),
  
  # VENCIMENTOS, VANTAGENS E OUTRAS DESPESAS VARI√ÅVEIS
  `02  Vencimentos, Vantagens e Outras Despesas Vari√°veis` = list(
    criterio = "
    grupo_despesa_codigo_grupo == '1' &
    !elemento_despesa_codigo %in% c('01', '03', '34') &
    
    # EXCLUS√ÉO: Filtro Obriga√ß√µes Patronais vg2024
    !(
      (substr(natureza_despesa_detalhada_codigo, 1, 1) == '3' &
       grupo_despesa_codigo_grupo == '1' &
       elemento_despesa_codigo == '92' &
       ((modalidade_aplicacao_codigo == '90' & natureza_despesa_detalhada_codigo %in% c('31909213', '31909207')) |
        (modalidade_aplicacao_codigo == '91' & natureza_despesa_detalhada_codigo == '31919213'))) |
      elemento_despesa_codigo %in% c('13', '07')
    ) &
    
    # EXCLUS√ÉO: Filtro Pessoal ATIVO - Benef√≠cios Previdenci√°rios v2024
    !(
      (substr(natureza_despesa_detalhada_codigo, 1, 1) == '3' &
       grupo_despesa_codigo_grupo == '1' &
       elemento_despesa_codigo == '92' &
       natureza_despesa_detalhada_codigo == '31909205' &
       modalidade_aplicacao_codigo %in% c('90', '91')) |
      str_detect(natureza_despesa_detalhada_codigo, '0599')
    ) &
    
    # EXCLUS√ÉO: Filtro - Anexo 1 - Termos de Outros Inativos vg2024 (COM WORD BOUNDARIES)
    !str_detect(natureza_despesa_detalhada_nome, '\\\\bAPOSENT|\\\\bINAT|\\\\bREFORMA|\\\\bPENS|LEI 7\\\\.963/1989') &
    
    # EXCLUS√ÉO: Filtro Pessoal INATIVO - Benef√≠cios Previdenci√°rios vg2024
    !(
      grupo_despesa_codigo_grupo == '1' &
      elemento_despesa_codigo == '05' &
      (str_detect(natureza_despesa_detalhada_codigo, '0505') | 
       str_detect(natureza_despesa_detalhada_codigo, '0506') |
       str_detect(natureza_despesa_detalhada_codigo, '0507') |
       str_detect(natureza_despesa_detalhada_codigo, '0508')) &
      elemento_despesa_codigo %in% c('05', '08', '09', '17', '91', '92', '94')
    )
    "
  ),
  
  # OBRIGA√á√ïES PATRONAIS
  `03  Obriga√ß√µes Patronais` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & elemento_despesa_codigo %in% c('13', '07') | natureza_despesa_detalhada_codigo %in% c('31909213', '31919213', '31909207')"
  ),
  
  # BENEF√çCIOS PREVIDENCI√ÅRIOS ATIVO
  `04  Benef√≠cios Previdenci√°rios ATIVO` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & str_detect(natureza_despesa_detalhada_codigo, '0599') | natureza_despesa_detalhada_codigo %in% c('31909205', '31919205')"
  ),
  
  # APOSENTADORIAS, RESERVA E REFORMAS
  `05  Aposentadorias, Reserva e Reformas` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & elemento_despesa_codigo == '01' | natureza_despesa_detalhada_codigo %in% c('31901702', '31909109', '31909112', '31909115', '31909118', '31909123', '31909124', '31909128', '31909129', '31909201', '31909403', '31909404', '31909413', '31909414')"
  ),
  
  # PENS√ïES
  `06  Pens√µes` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & (elemento_despesa_codigo == '03' | natureza_despesa_detalhada_codigo %in% c('31909110', '31909113', '31909116', '31909119', '31909131', '31909136', '31909137', '31909130', '31909203', '31909220', '31909221', '31909406', '31909413'))"
  ),
  
  # OUTRAS DESPESAS COM INATIVOS
  `07  Outras Despesas com Inativos` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & elemento_despesa_codigo %in% c('05', '08', '09', '17', '31', '32') & str_detect(natureza_despesa_detalhada_nome, 'APOSENT|INAT|REFORMA|PEN|LEI 7\\\\.963/1989') & !(str_detect(natureza_despesa_detalhada_codigo, '0599') & natureza_despesa_detalhada_codigo %in% c('31909205', '31919205')) & !(str_detect(natureza_despesa_detalhada_codigo, '0505') | str_detect(natureza_despesa_detalhada_codigo, '0506') | str_detect(natureza_despesa_detalhada_codigo, '0507') | str_detect(natureza_despesa_detalhada_codigo, '0508'))"
  ),
  
  # BENEF√çCIOS PREVIDENCI√ÅRIOS INATIVO  
  `08  Benef√≠cios Previdenci√°rios INATIVO` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & (elemento_despesa_codigo == '05' | (str_detect(natureza_despesa_detalhada_codigo, '0505') | str_detect(natureza_despesa_detalhada_codigo, '0506') | str_detect(natureza_despesa_detalhada_codigo, '0507') | str_detect(natureza_despesa_detalhada_codigo, '0508')))"
  ),
  
  # OUTRAS DESPESAS DE PESSOAL DECORRENTES DE CONTRATOS DE TERCEIRIZA√á√ÉO
  `09  Outras Despesas de Pessoal - Terceiriza√ß√£o` = list(
    criterio = "grupo_despesa_codigo_grupo %in% c('1', '3') & elemento_despesa_codigo == '34'"
  ),
  
  # DECORRENTES DE DECIS√ÉO JUDICIAL
  `10  Decorrentes de Decis√£o Judicial` = list(
    criterio = "
    grupo_despesa_codigo_grupo == '1' &
    elemento_despesa_codigo == '91' &
    !(
      fonte_recursos_codigo %in% c('023', '024', '055', '056') &
      str_detect(natureza_despesa_detalhada_nome, 'APOSENT|INAT|REFORMA|PEN|LEI 7\\\\.963/1989')
    )
    "
  ),
  
  # INATIVOS E PENSIONISTAS COM RECURSOS VINCULADOS
  `11  Inativos e Pensionistas com Recursos Vinculados` = list(
    criterio = "
    grupo_despesa_codigo_grupo == '1' &
    fonte_recursos_codigo %in% c('023', '024', '055', '056') &
    (
      elemento_despesa_codigo %in% c('01', '03') |
      (
        elemento_despesa_codigo %in% c('05', '08', '09', '17', '91', '92', '94') &
        str_detect(natureza_despesa_detalhada_nome, 'APOSENT|INAT|REFORMA|PEN|LEI 7\\\\.963/1989')
      )
    )
    "
  ),
  
  # INDENIZA√á√ïES POR DEMISS√ÉO E INCENTIVOS √Ä DEMISS√ÉO VOLUNT√ÅRIA
  `12  Indeniza√ß√µes por Demiss√£o e Incentivos` = list(
    criterio = "
    grupo_despesa_codigo_grupo == '1' &
    elemento_despesa_codigo == '94' &
    !(
      fonte_recursos_codigo %in% c('023', '024', '055', '056') &
      str_detect(natureza_despesa_detalhada_nome, 'APOSENT|INAT|REFORMA|PEN|LEI 7\\\\.963/1989')
    )
    "
  ),
  
  # DESPESAS DE EXERC√çCIOS ANTERIORES
  `13  Despesas de Exerc√≠cios Anteriores` = list(
    criterio = "
    grupo_despesa_codigo_grupo == '1' &
    elemento_despesa_codigo == '92' &
    !(
      fonte_recursos_codigo %in% c('023', '024', '055', '056') &
      str_detect(natureza_despesa_detalhada_nome, 'APOSENT|INAT|REFORMA|PEN|LEI 7\\\\.963/1989')
    )
    "
  ),
  
  # FILTROS ESPEC√çFICOS APLICADOS
  
  # Filtro Amap√°
  `14  FILTRO_AMAPA` = list(
    criterio = "unidade_orcamentaria_codigo == '73113' & plano_orcamentario_codigo_po == '0004' & acao_governo_codigo %in% c('0179', '0181', '214H')"
  ),
  
  # Filtro Elementos de Despesa de Outros Inativos
  `15  FILTRO_ELEMENTOS_OUTROS_INATIVOS` = list(
    criterio = "elemento_despesa_codigo %in% c('05', '08', '09', '17', '31', '32', '34')"
  ),
  
  # Filtro Fontes dos Recursos Vinculados
  `16  FILTRO_FONTES_RECURSOS_VINCULADOS` = list(
    criterio = "fonte_recursos_codigo %in% c('023', '024', '055', '056')"
  ),
  
  # Filtro GDF
  `17  FILTRO_GDF` = list(
    criterio = "unidade_orcamentaria_codigo == '73901'"
  ),
  
  # Filtro Roraima
  `18  FILTRO_RORAIMA` = list(
    criterio = "unidade_orcamentaria_codigo == '73113' & plano_orcamentario_codigo_po == '0003' & acao_governo_codigo %in% c('0179', '0181', '214H')"
  ),
  
  # Filtro Termos de Outros Inativos
  `19  FILTRO_TERMOS_OUTROS_INATIVOS` = list(
    criterio = "str_detect(natureza_despesa_detalhada_nome, 'APOSENT') | str_detect(natureza_despesa_detalhada_nome, 'INAT') | str_detect(natureza_despesa_detalhada_nome, 'REFORMA') | str_detect(natureza_despesa_detalhada_nome, 'PEN') | str_detect(natureza_despesa_detalhada_nome, 'LEI 7\\\\.963/1989')"
  ),
  
  # Filtro Obriga√ß√µes Patronais
  `20  FILTRO_OBRIGACOES_PATRONAIS` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & elemento_despesa_codigo %in% c('13', '07') | natureza_despesa_detalhada_codigo %in% c('31909213', '31919213', '31909207')"
  ),
  
  # Filtro Pessoal ATIVO - Benef√≠cios Previdenci√°rios
  `21  FILTRO_PESSOAL_ATIVO_BENEFICIOS` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & str_detect(natureza_despesa_detalhada_codigo, '0599') & natureza_despesa_detalhada_codigo %in% c('31909205', '31919205')"
  ),
  
  # Filtro Pessoal INATIVO - Benef√≠cios Previdenci√°rios
  `22  FILTRO_PESSOAL_INATIVO_BENEFICIOS` = list(
    criterio = "grupo_despesa_codigo_grupo == '1' & elemento_despesa_codigo == '05' & (str_detect(natureza_despesa_detalhada_codigo, '0505') | str_detect(natureza_despesa_detalhada_codigo, '0506') | str_detect(natureza_despesa_detalhada_codigo, '0507') | str_detect(natureza_despesa_detalhada_codigo, '0508'))"
  )
)
```

```{r}
#| code-fold: true
#| eval: true
# ===============================================================================
# MUTATE RGF ANEXO 1 - CATEGORIZA√á√ÉO POR REGI√ÉO/PODER
# ===============================================================================

# Adicionar coluna de categoriza√ß√£o baseada nos grupos personalizados
rgf_a01 <- rgf_a01 %>%
  mutate(
    categoria_pessoal = case_when(
      
      # DESPESAS RESSALVADAS (aplicar primeiro - mais espec√≠fico)
      natureza_despesa_detalhada_codigo %in% c(
        "31900503", "31900504", "31900505", "31900506", 
        "31900507", "31900508", "31900501", "31900502"
      ) ~ "ressalvadas",
      
      # PODER EXECUTIVO FEDERAL (aplicar filtros espec√≠ficos depois)
      unidade_orcamentaria_codigo == "73113" & 
      plano_orcamentario_codigo_po == "0004" &
      acao_governo_codigo %in% c("0179", "0181", "214H") ~ "AP",
      
      unidade_orcamentaria_codigo == "73113" & 
      plano_orcamentario_codigo_po == "0003" & 
      acao_governo_codigo %in% c("0179", "0181", "214H") ~ "RR",
      
      unidade_orcamentaria_codigo == "73901" ~ "DF",
      
      uo_poder == "0" &
      !uo_orgao_maximo_codigo %in% c("34000","59000") ~ "executivo",
        
      
      # PODER EXECUTIVO FEDERAL (restante - ap√≥s aplicar filtros espec√≠ficos)
      # Assumindo que existe campo de poder ou similar
      TRUE ~ "demais"
    )
  )
```

```{r}
rgf_a01 %>%
            filter(
              grupo_despesa_codigo_grupo == '1' &
                !elemento_despesa_codigo %in% c('01', '03', '34') &
                !(elemento_despesa_codigo %in% c('13', '07') &
                    natureza_despesa_detalhada_codigo %in% c('31909213', '31909207')) &
                !(str_detect(natureza_despesa_detalhada_codigo, '0599') &
                    natureza_despesa_detalhada_codigo %in% c('31909205', '31919205')) &
                !str_detect(natureza_despesa_detalhada_nome, 'APOSENT|INAT|REFORMA|PEN|LEI 7.963/1989') & !elemento_despesa_codigo %in% c('05', '08', '09', '17', '31', '32') &
                !(str_detect(natureza_despesa_detalhada_codigo, '0505') | str_detect(natureza_despesa_detalhada_codigo, '0506') | str_detect(natureza_despesa_detalhada_codigo, '0507') | str_detect(natureza_despesa_detalhada_codigo, '0508'))) %>% group_by( categoria_pessoal) %>% summarise(movim_liquido_r_item_informacao = sum(movim_liquido_r_item_informacao))
```

DESCOBERTA IMPORTANTE: O c√≥digo de classifica√ß√£o de falsos positivos estava ERRADO! As PENS√ïES verdadeiras (R\$ 56,46B) foram classificadas como falso positivo porque o padr√£o \\bPENS n√£o est√° capturando corretamente. Situa√ß√£o real:

PEN captura 56 naturezas totalizando R\$ 194,21B Dessas, \~R\$ 137,75B s√£o PENS√ïES VERDADEIRAS E \~R\$ 56,46B s√£o compensa√ß√µes/depend√™ncias/penosas (falsos positivos)

Principais problemas identificados:

REFORMA - R\$ 1,19M em "REFORMA AGR√ÅRIA" (falso positivo confirmado) PEN - R\$ 3,84B em "COMPENSA√á√ïES" (falso positivo confirmado) PEN - R\$ 137,75B em PENS√ïES (s√£o VERDADEIROS, n√£o falsos!)

An√°lise do print do TG: O Tesouro Gerencial usa o operador "Cont√©m" que √© equivalente ao nosso padr√£o sem word boundaries, confirmando que eles t√™m o mesmo

```{r}
#| code-fold: true
#| eval: true


pessoal <- aplicar_criterios(rgf_a01, criterios_rgf_A01_pessoal_rgf, 
                  group_vars = c("categoria_pessoal"))


datatable(pessoal %>% filter(ordem < 14, categoria_pessoal != "demais") %>% group_by(ordem, nome, categoria_pessoal) %>% summarise(valor = sum(valor)) %>% pivot_wider(names_from = categoria_pessoal, values_from = valor) ) %>% formatRound(
    c("AP", "DF", "RR", "executivo") ,
    digits = 2, 
    mark = ".", 
    dec.mark = ","
  )
```

# üìã Anexo 2 (D√≠vida Consolidada L√≠quida)

```{r}
#| code-fold: true
#| eval: true
# ===============================================================================
# CRIT√âRIOS RGF ANEXO 02 - DCL (VERS√ÉO FINAL CORRIGIDA)
# LISTAS ORGANIZADAS POR BASE DE DADOS
# ===============================================================================

# ===============================================================================
# BASE: rgf_a02precatorios
# Filtros TG: Or√ßamento Fiscal,  Contas espec√≠ficas
# CORRE√á√ÉO: A√ß√£o 0Z01 APENAS se UO = 71103
# ===============================================================================
criterios_rgf_A02_dcl_precatorios <- list(
  
  `08 - PRECAT√ìRIOS POSTERIORES A 05/05/2000` = list(
    criterio = "
    acao_governo_codigo %in% c('0005', '00U9', '00UP', '0EC8', '0EC7', '00WU') |
    (unidade_orcamentaria_codigo == '71103' & acao_governo_codigo == '0Z01')
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_rp_exceto_170600
# Filtros TG: Contas espec√≠ficas,  UG != 170600, A√ß√£o != 0005
# ===============================================================================
criterios_rgf_A02_dcl_rp_exceto_170600 <- list(
  
  `25 - RESTOS A PAGAR PROCESSADOS - PARTE 1` = list(
    criterio = "
    TRUE
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_rp_todas_ugs
# Filtros TG: Contas espec√≠ficas,  A√ß√£o != 0005
# ===============================================================================
criterios_rgf_A02_dcl_rp_todas_ugs <- list(
  
  `25 - RESTOS A PAGAR PROCESSADOS - PARTE 2` = list(
    criterio = "
    TRUE
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_ug_170512
# Filtros TG: Or√ßamento Fiscal,  UG = 170512
# ===============================================================================
criterios_rgf_A02_dcl_ug_170512 <- list(
  
  `09 - D√çVIDA ASSUMIDA PELA UNI√ÉO` = list(
    criterio = "
    conta_contabil_numero %in% c('218912600', '228911600', '227310401') &
    isf_lancamento == 'P' &
    conta_corrente != 'PF1705118'
    "
  ),
  
  `17 - D√çVIDAS RENEGOCIADAS - DEDU√á√ÉO` = list(
    criterio = "
    conta_contabil_numero %in% c('121110301', '112410100', '121110318', '112410600', 
                                '121140301', '121150301', '112440100', '112450100', 
                                '121140318', '121150318', '112440600', '112450600', 
                                '112410401', '112450401', '112440401', '121249818', 
                                '113814200', '113844200', '113854200') &
    (entidade_c_cor_numero %in% c('PF1705320', 'PF1705524', 'PF1705528', 'PF1705546', 
                                 'PF1705547', 'PF1705548', 'PF1705406', 'PF1705525', 
                                 'PF1705529', 'PF1705544', 'PF1705545') |
     grepl('9\\\\.496/97', entidade_c_cor_nome) |
     grepl('2\\\\.185/2001', entidade_c_cor_nome))
    "
  ),
  
  `18 - CR√âDITOS LEI 8.727/93 - DEDU√á√ÉO` = list(
    criterio = "
    conta_contabil_numero %in% c('121110301', '112410100', '121110318', '112410600', 
                                '121140301', '121150301', '112440100', '112450100', 
                                '121140318', '121150318', '112440600', '112450600', 
                                '112410401', '121219818', '112450401', '112440401', 
                                '121249818', '113814200', '113844200', '113854200') &
    (entidade_c_cor_numero %in% c('PF1705109', 'PF1705536', 'TN0000016', 'TN0000017') |
     grepl('8\\\\.727/93', entidade_c_cor_nome))
    "
  ),
  
  `19 - D√çVIDA EXTERNA RENEGOCIADA - DEDU√á√ÉO` = list(
    criterio = "
    conta_contabil_numero %in% c('121110301', '112410100', '121110318', '112410600', 
                                '121140301', '121150301', '112440100', '112450100', 
                                '121140318', '121150318', '112440600', '112450600', 
                                '112410401', '121219818', '112450401', '112440401', 
                                '121249818', '113844200', '113814200', '113854200', 
                                '121259818') &
    (entidade_c_cor_numero %in% c('PF1705104', 'PF1705114', 'PF1705117', 'PF1705521', 
                                 'PF1705534', 'PF1705116', 'PF1705531', 'PF1705532', 
                                 'PF1705113', 'PF1701536', 'PF1705520', 'PF1705533', 
                                 'PF1705464', 'PF1705534', 'PF1705119', 'PF1705384') |
     grepl('DMLP', entidade_c_cor_nome) |
     grepl('FRANCA|FRAN√áA', entidade_c_cor_nome) |
     grepl('EXTER', entidade_c_cor_nome) |
     grepl('MF 030', entidade_c_cor_nome) |
     grepl('BIB', entidade_c_cor_nome))
    "
  ),
  
  `20 - DEMAIS D√çVIDAS RENEGOCIADAS - DEDU√á√ÉO` = list(
    criterio = "
    conta_contabil_numero %in% c('121110301', '112410100', '121110318', '112410600', 
                                '121140301', '121150301', '112440100', '112450100', 
                                '121140318', '121150318', '112440600', '112450600', 
                                '112410401', '112450401', '112440401', '121249818', 
                                '113844200', '113814200', '113854200', '121259818')
    "
  ),
  
  `21 - AJUSTES PARA PERDAS (POSITIVO)` = list(
    criterio = "
    conta_contabil_numero %in% c('112940401', '112950401', '113940101', '112910401', 
                                '113950101', '121119902', '121149904', '121159904', 
                                '121119904', '121249903', '121259903')
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_creditos_bancarios
# Filtros TG: Or√ßamento Fiscal,  UG IN (170705, 170526, 170700)
# ===============================================================================
criterios_rgf_A02_dcl_creditos_bancarios <- list(
  
  `22 - OUTROS CR√âDITOS BANC√ÅRIOS - DEDU√á√ÉO` = list(
    criterio = "
    conta_contabil_numero %in% c('112410301', '112410303', '112440301', '112450301', 
                                '112440303', '112450303', '112410100', '121110301', 
                                '121110314', '121110308', '121140301', '121150301', 
                                '121140308', '121150308', '112411300', '121110316', 
                                '121110320', '112410302', '112410304', '112410201', 
                                '112410203', '112410403', '121110312')
    "
  ),
  
  `23 - OUTROS CR√âDITOS BANC√ÅRIOS - AJUSTES (POSITIVO)` = list(
    criterio = "
    conta_contabil_numero %in% c('112910401', '121119904', '121119907', '112910403')
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_entidade
# Filtros TG: Or√ßamento Fiscal,  Contas espec√≠ficas
# ===============================================================================
criterios_rgf_A02_dcl_entidade <- list(
  
  `01 - D√çVIDA MOBILI√ÅRIA TN INTERNA - PARTE 1` = list(
    criterio = "
    entidade_c_cor_numero %in% c('DP1000001', 'DP1400001', 'DP1500001', 'DP1700001', 
                                'DP1800001', 'DP2000001', 'DP2300007', 'DP2400001', 
                                'DP2600001', 'DP2800001', 'DP3000001', 'DP3400001', 
                                'DP5000001', 'DP5500001', 'DP5800001', 'DP6100001', 
                                'DP6200001', 'DP6300001', 'DP6600001', 'DP7000001', 
                                'DP8000001', 'DP9000001', 'DP1200001')
    "
  ),
  
  `01 - D√çVIDA MOBILI√ÅRIA TN INTERNA - PARTE 2` = list(
    criterio = "
    entidade_c_cor_numero == 'DP9102001'
    "
  ),
  
  `03 - D√çVIDA MOBILI√ÅRIA DO TN (EM BCB)` = list(
    criterio = "
    entidade_c_cor_numero %in% c('DP1500010', 'DP1700010', 'DP1800010', 'DP2300010', 
                                'DP5500010', 'DP7000010', 'DP9000010', 'DP3201450')
    "
  ),
  
  `04 - D√çVIDA SECURITIZADA - PARTE 1` = list(
    criterio = "
    entidade_c_cor_numero %in% c('DP3100001', 'DP3200001', 'DP3200002', 'DP3201031', 
                                'DP3201032', 'DP3201059', 'DP3201077', 'DP3201078', 
                                'DP3201080', 'DP3201081', 'DP3201145', 'DP3201202', 
                                'DP3201222', 'DP3201228', 'DP3201233', 'DP3201250', 
                                'DP3201256', 'DP3201257', 'DP3201258', 'DP3201259', 
                                'DP3201260', 'DP3201262', 'DP3201271', 'DP3201272', 
                                'DP3201275', 'DP3201276', 'DP3201277', 'DP3201280', 
                                'DP3201281', 'DP3201296', 'DP3201299', 'DP3201362', 
                                'DP3201368', 'DP3201378', 'DP3201390')
    "
  ),
  
  `04 - D√çVIDA SECURITIZADA - PARTE 2` = list(
    criterio = "
    conta_contabil_numero %in% c('212110202', '222110102')
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_aplicacao_titulos_publicos
# Filtros TG: Or√ßamento Fiscal,  √ìrg√£o UGE != 25901,
#             Tipo Admin IN (3,4,5,6,8), Conta come√ßa com 1111150
# ===============================================================================
criterios_rgf_A02_dcl_aplicacao_titulos_publicos <- list(
  
  `02 - APLICA√á√ÉO EM T√çTULOS P√öBLICOS` = list(
    criterio = "
    !conta_contabil_numero %in% c('111115005', '111115011', '111115012')
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_balancete
# Filtros TG: Or√ßamento Fiscal, M√™s AGO/2025
# ===============================================================================
criterios_rgf_A02_dcl_balancete <- list(
  
  `05 - D√çVIDA MOBILI√ÅRIA EXTERNA` = list(
    criterio = "
    conta_contabil_numero %in% c('899913903', '899913904')
    "
  ),
  
  `06 - OPERA√á√ïES DE EQUALIZA√á√ÉO CAMBIAL` = list(
    criterio = "
    conta_contabil_numero %in% c('218912902', '218942902', '218952902', '218912901')
    "
  ),
  
  `07 - DEMAIS D√çVIDAS CONTRATUAIS` = list(
    criterio = "
    isf_lancamento == 'P' &
    conta_contabil_numero %in% c(
      '222210200', '212210300', '222110200', '212110301', '212110303', '212510103',
      '212140303', '212150303', '212540103', '212550103', '212140301', '212150301',
      '217310301', '217310602', '217350402', '227310301', '212110700', '212210601',
      '212310201', '212310202', '212410201', '222310101', '222310102', '222410101',
      '217710101', '227710101', '227310401'
    )
    "
  ),
`10 - PASSIVOS POR INSUFICI√äNCIA DE RECURSOS` = list(
  criterio = "
  conta_contabil_numero %in% c('213110400', '211110101', '214419800', '223110100', 
                               '211210100', '213140400', '213150400', 
                               '214119900', '211459800', '211419800') &
  isf_lancamento == 'P'
  "
),
  
  `11 - DEP√ìSITOS DO TN (EM BCB) - DEDU√á√ÉO` = list(
    criterio = "
    startsWith(conta_contabil_numero, '1111102') |
    startsWith(conta_contabil_numero, '1111103') |
    startsWith(conta_contabil_numero, '1111104')
    "
  ),
  
  `12 - DEP√ìSITOS √Ä VISTA - DEDU√á√ÉO - PARTE 2` = list(
    criterio = "
    startsWith(conta_contabil_numero, '1112102') |
    startsWith(conta_contabil_numero, '1112103') |
    startsWith(conta_contabil_numero, '1112150') |
    startsWith(conta_contabil_numero, '1112152')
    "
  ),
  
  `24 - RESULTADO POSITIVO TN/BCB - DEDU√á√ÉO` = list(
    criterio = "
    conta_contabil_numero %in% c('113813001', '113813002')
    "
  ),
  
  `26 - D√çVIDA MOBILI√ÅRIA TN INTERNA (INTRA) - DEDU√á√ÉO` = list(
    criterio = "
    conta_contabil_numero == '222120101'
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_balancete_fat
# Filtros TG: Or√ßamento Fiscal,  UG = 380916
# ===============================================================================
criterios_rgf_A02_dcl_balancete_fat <- list(
  
  `13 - DISPONIBILIDADE FAT - DEDU√á√ÉO` = list(
    criterio = "
    startsWith(conta_contabil_numero, '1111119') |
    startsWith(conta_contabil_numero, '1124103') |
    startsWith(conta_contabil_numero, '1135407') |
    startsWith(conta_contabil_numero, '1135113') |
    startsWith(conta_contabil_numero, '1135115') |
    startsWith(conta_contabil_numero, '1124101') |
    startsWith(conta_contabil_numero, '1135111') |
    startsWith(conta_contabil_numero, '1135107') |
    startsWith(conta_contabil_numero, '11121') |
    startsWith(conta_contabil_numero, '1135114') |
    startsWith(conta_contabil_numero, '1135112') |
    startsWith(conta_contabil_numero, '1135116') |
    startsWith(conta_contabil_numero, '1211503') |
    startsWith(conta_contabil_numero, '1211403') |
    startsWith(conta_contabil_numero, '1211103') |
    startsWith(conta_contabil_numero, '1135507') |
    startsWith(conta_contabil_numero, '1212105') |
    conta_contabil_numero %in% c('111115009', '111115011', '111115014', 
                                 '111115015', '111115016', '111115006')
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_balancete_deducoes_depositos_a_vista
# Filtros TG: Or√ßamento Fiscal,  √ìrg√£o != 25901, UG != 380916
# Contas: 1111119* (demais contas banc√°rias)
# ===============================================================================
criterios_rgf_A02_dcl_balancete_deducoes_depositos_a_vista <- list(
  
  `12 - DEP√ìSITOS √Ä VISTA - DEDU√á√ÉO - PARTE 1` = list(
    criterio = "
    startsWith(conta_contabil_numero, '1111119')
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_balancete_fundos_111215100
# Filtros TG: Or√ßamento Fiscal,  √ìrg√£o != 25915,37904, Conta = 111215100
# ===============================================================================
criterios_rgf_A02_dcl_balancete_fundos_111215100 <- list(
  
  `14 - APLICA√á√ïES EM FUNDOS DIVERSOS 1 - DEDU√á√ÉO` = list(
    criterio = "
    TRUE
    "
  )
)

# ===============================================================================
# BASE: rgf_a02_balancete_fundos
# Filtros TG: Or√ßamento Fiscal,  √ìrg√£o != 25915,37904, Tipo Admin = 7
# ===============================================================================
criterios_rgf_A02_dcl_balancete_fundos <- list(
  
  `15 - APLICA√á√ïES EM FUNDOS DIVERSOS 2 - DEDU√á√ÉO` = list(
    criterio = "
    startsWith(conta_contabil_numero, '23')
    "
  ),
  
  `16 - APLICA√á√ïES EM FUNDOS DIVERSOS 3 - DEDU√á√ÉO` = list(
    criterio = "
    startsWith(conta_contabil_numero, '1111102') |
    startsWith(conta_contabil_numero, '1111103') |
    startsWith(conta_contabil_numero, '1111104') |
    startsWith(conta_contabil_numero, '1111119') |
    conta_contabil_numero %in% c('111210200', '111210300', '111215000', '111215200') |
    c_con_subgrupo_3_nome %in% c('INVESTIMENTOS', 'IMOBILIZADO', 'INTANGIVEL', 'DIFERIDO')
    "
  )
)
```

```{r}
#| code-fold: true
#| eval: true
# ===============================================================================
# PROCESSAMENTO DOS CRIT√âRIOS DCL
# ===============================================================================

# ===============================================================================
# 1. rgf_a02_precatorios
# ===============================================================================
df_criterios_rgf_A02_dcl_precatorios <- aplicar_criterios(
  df = rgf_a02_precatorios,
  criterios = criterios_rgf_A02_dcl_precatorios
)

# ===============================================================================
# 2. rgf_a02_rp_exceto_170600
# ===============================================================================
df_criterios_rgf_A02_dcl_rp_exceto_170600 <- aplicar_criterios(
  df = rgf_a02_rp_exceto_170600,
  criterios = criterios_rgf_A02_dcl_rp_exceto_170600
)

# ===============================================================================
# 3. rgf_a02_rp_todas_ugs
# ===============================================================================
df_criterios_rgf_A02_dcl_rp_todas_ugs <- aplicar_criterios(
  df = rgf_a02_rp_todas_ugs,
  criterios = criterios_rgf_A02_dcl_rp_todas_ugs
)

# ===============================================================================
# 4. rgf_a02_ug_170512
# ===============================================================================
df_criterios_rgf_A02_dcl_ug_170512 <- aplicar_criterios(
  df = rgf_a02_ug_170512,
  criterios = criterios_rgf_A02_dcl_ug_170512
)

# ===============================================================================
# 5. rgf_a02_creditos_bancarios
# ===============================================================================
df_criterios_rgf_A02_dcl_creditos_bancarios <- aplicar_criterios(
  df = rgf_a02_creditos_bancarios,
  criterios = criterios_rgf_A02_dcl_creditos_bancarios
)

# ===============================================================================
# 6. rgf_a02_entidade
# ===============================================================================
df_criterios_rgf_A02_dcl_entidade <- aplicar_criterios(
  df = rgf_a02_entidade,
  criterios = criterios_rgf_A02_dcl_entidade
)

# ===============================================================================
# 7. rgf_a02_balancete
# ===============================================================================
df_criterios_rgf_A02_dcl_balancete <- aplicar_criterios(
  df = rgf_a02_balancete,
  criterios = criterios_rgf_A02_dcl_balancete
)

# ===============================================================================
# 8. rgf_a02_aplicacao_titulos_publicos
# ===============================================================================
df_criterios_rgf_A02_dcl_aplicacao_titulos_publicos <- aplicar_criterios(
  df = rgf_a02_aplicacao_titulos_publicos,
  criterios = criterios_rgf_A02_dcl_aplicacao_titulos_publicos
)

# ===============================================================================
# 9. rgf_a02_balancete_fat
# ===============================================================================
df_criterios_rgf_A02_dcl_balancete_fat <- aplicar_criterios(
  df = rgf_a02_balancete_fat,
  criterios = criterios_rgf_A02_dcl_balancete_fat
)

# ===============================================================================
# 10. rgf_a02_balancete_fundos_111215100
# ===============================================================================
df_criterios_rgf_A02_dcl_balancete_fundos_111215100 <- aplicar_criterios(
  df = rgf_a02_balancete_fundos_111215100,
  criterios = criterios_rgf_A02_dcl_balancete_fundos_111215100
)

# ===============================================================================
# 11. rgf_a02_balancete_fundos
# ===============================================================================
df_criterios_rgf_A02_dcl_balancete_fundos <- aplicar_criterios(
  df = rgf_a02_balancete_fundos,
  criterios = criterios_rgf_A02_dcl_balancete_fundos
)

# ===============================================================================
# 12. rgf_a02_balancete_deducoes_depositos_a_vista
# ===============================================================================
df_criterios_rgf_A02_dcl_balancete_deducoes_depositos_a_vista <- aplicar_criterios(
  df = rgf_a02_balancete_deducoes_depositos_a_vista,
  criterios = criterios_rgf_A02_dcl_balancete_deducoes_depositos_a_vista
)

# ===============================================================================
# 13. CONSOLIDAR rgf_a02_rp (Linha 25 - partes 1 e 2)
# ===============================================================================
df_criterios_rgf_A02_dcl_rp <- bind_rows(
  df_criterios_rgf_A02_dcl_rp_exceto_170600,
  df_criterios_rgf_A02_dcl_rp_todas_ugs
) %>%
  mutate(
    nome = str_replace(nome, " - PARTE [12]$", "")
  ) %>%
  group_by(mes_lancamento, dataframe_nome, dataframe_filtros, relatorio, 
           anexo_codigo, anexo_nome, detalhe, print, filtro, metrica, 
           ordem, nome) %>%
  summarise(valor = sum(valor, na.rm = TRUE), .groups = "drop")

# ===============================================================================
# 14. CONSOLIDAR Linha 12 - Dep√≥sitos √† Vista (partes 1 e 2)
# ===============================================================================
df_criterios_rgf_A02_dcl_depositos_vista <- bind_rows(
  df_criterios_rgf_A02_dcl_balancete_deducoes_depositos_a_vista,
  df_criterios_rgf_A02_dcl_balancete %>% 
    filter(str_detect(nome, "^12 -"))
) %>%
  mutate(
    nome = str_replace(nome, " - PARTE [12]$", "")
  ) %>%
  group_by(mes_lancamento, dataframe_nome, dataframe_filtros, relatorio, 
           anexo_codigo, anexo_nome, detalhe, print, filtro, metrica, 
           ordem, nome) %>%
  summarise(valor = sum(valor, na.rm = TRUE), .groups = "drop")

# ===============================================================================
# 15. CONSOLIDAR TODOS OS RESULTADOS
# ===============================================================================
df_rgf_A02_dcl_consolidado <- bind_rows(
  df_criterios_rgf_A02_dcl_precatorios,
  df_criterios_rgf_A02_dcl_rp,
  df_criterios_rgf_A02_dcl_ug_170512,
  df_criterios_rgf_A02_dcl_creditos_bancarios,
  df_criterios_rgf_A02_dcl_entidade,
  df_criterios_rgf_A02_dcl_balancete %>% 
    filter(!str_detect(nome, "^12 -")),  # Excluir linha 12 parte 2 do balancete
  df_criterios_rgf_A02_dcl_aplicacao_titulos_publicos,
  df_criterios_rgf_A02_dcl_balancete_fat,
  df_criterios_rgf_A02_dcl_balancete_fundos_111215100,
  df_criterios_rgf_A02_dcl_balancete_fundos,
  df_criterios_rgf_A02_dcl_depositos_vista  # Usar consolidado da linha 12
) %>%
  arrange(mes_lancamento, ordem)

# ===============================================================================
# 14. RESUMO POR BASE
# ===============================================================================
resumo <- df_rgf_A02_dcl_consolidado %>%
  group_by(dataframe_nome) %>%
  summarise(
    linhas = n_distinct(ordem),
    total_registros = n(),
    valor_total = sum(abs(valor), na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(dataframe_nome)

# ===============================================================================
# 15. LINHAS PROCESSADAS
# ===============================================================================
linhas_processadas <- df_rgf_A02_dcl_consolidado %>%
  distinct(ordem, nome) %>%
  arrange(ordem)

# ===============================================================================
# 16. VALORES POR LINHA
# ===============================================================================
valores_linhas <- df_rgf_A02_dcl_consolidado %>%
  group_by(ordem, nome) %>%
  summarise(
    valor_total = sum(valor, na.rm = TRUE),
    valor_absoluto = sum(abs(valor), na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(ordem)

# ===============================================================================
# 17. VERIFICA√á√ÉO DE QUALIDADE
# ===============================================================================
valores_check <- df_rgf_A02_dcl_consolidado %>%
  summarise(
    registros_total = n(),
    registros_com_valor_na = sum(is.na(valor)),
    registros_com_valor_zero = sum(valor == 0, na.rm = TRUE),
    registros_com_valor_positivo = sum(valor > 0, na.rm = TRUE),
    registros_com_valor_negativo = sum(valor < 0, na.rm = TRUE)
  )

linhas_sem_dados <- df_rgf_A02_dcl_consolidado %>%
  group_by(ordem, nome) %>%
  summarise(
    valor_total = sum(valor, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  filter(valor_total == 0 | is.na(valor_total)) %>%
  arrange(ordem)

# ===============================================================================
# 18. EXIBIR RESULTADOS
# ===============================================================================

datatable(valores_linhas) %>% 
  formatRound(c("valor_total", "valor_absoluto"), 2, mark = ".", dec.mark = ",")
```

# üìã Anexo 3 (Garantias e Contragarantias)

```{r}
#| code-fold: true
#| eval: false
criterios_rgf_A03_garantias <- list(
  
  # ===========================================================================
  # CONTRAGARANTIAS RECEBIDAS (CG)
  # ===========================================================================
  
  `01 - CONTRAGARANTIAS (CG) - TOTAL GERAL` = list(
    criterio = "
    conta_contabil_numero %in% c('811110304', '811110404')
    "
  ),
  
  `02 - CG DOS ESTADOS - TOTAL` = list(
    criterio = "
    conta_contabil_numero %in% c('811110304', '811110404') &
    conta_corrente %in% c('CG0000064', 'CG0000069')
    "
  ),
  
  `02.1 - CG DOS ESTADOS - OPERA√á√ïES INTERNAS` = list(
    criterio = "
    conta_contabil_numero == '811110304' &
    conta_corrente == 'CG0000064'
    "
  ),
  
  `02.2 - CG DOS ESTADOS - OPERA√á√ïES EXTERNAS` = list(
    criterio = "
    conta_contabil_numero == '811110404' &
    conta_corrente == 'CG0000069'
    "
  ),
  
  `03 - CG DOS MUNIC√çPIOS - TOTAL` = list(
    criterio = "
    conta_contabil_numero %in% c('811110304', '811110404') &
    conta_corrente %in% c('CG0000065', 'CG0000070')
    "
  ),
  
  `03.1 - CG DOS MUNIC√çPIOS - OPERA√á√ïES INTERNAS` = list(
    criterio = "
    conta_contabil_numero == '811110304' &
    conta_corrente == 'CG0000065'
    "
  ),
  
  `03.2 - CG DOS MUNIC√çPIOS - OPERA√á√ïES EXTERNAS` = list(
    criterio = "
    conta_contabil_numero == '811110404' &
    conta_corrente == 'CG0000070'
    "
  ),
  
  `04 - CG DAS ENTIDADES CONTROLADAS - TOTAL` = list(
    criterio = "
    conta_contabil_numero %in% c('811110304', '811110404') &
    conta_corrente %in% c('CG0000067', 'CG0000071', 'CG0000072')
    "
  ),
  
  `04.1 - CG DAS ENTIDADES - OPERA√á√ïES INTERNAS` = list(
    criterio = "
    conta_contabil_numero == '811110304' &
    conta_corrente == 'CG0000067'
    "
  ),
  
  `04.2 - CG DAS ENTIDADES - OPERA√á√ïES EXTERNAS` = list(
    criterio = "
    conta_contabil_numero == '811110404' &
    conta_corrente %in% c('CG0000071', 'CG0000072')
    "
  ),
  
  # ===========================================================================
  # GARANTIAS CONCEDIDAS (G)
  # ===========================================================================
  
  `05 - GARANTIAS (G) - TOTAL GERAL` = list(
    criterio = "
    conta_contabil_numero %in% c('812110104', '812110110', '812110204', '899913301', '899913302')
    "
  ),
  
  `06 - G AOS ESTADOS - TOTAL` = list(
    criterio = "
    conta_contabil_numero %in% c('812110104', '812110204', '899913301', '899913302') &
    conta_corrente %in% c('CG0000064', 'CG0000069')
    "
  ),
  
  `06.1 - G AOS ESTADOS - OPERA√á√ïES INTERNAS (Fian√ßas)` = list(
    criterio = "
    conta_contabil_numero == '812110104' &
    conta_corrente == 'CG0000064'
    "
  ),
  
  `06.2 - G AOS ESTADOS - OPERA√á√ïES INTERNAS (Garantias OP)` = list(
    criterio = "
    conta_contabil_numero == '899913301' &
    conta_corrente == 'CG0000064'
    "
  ),
  
  `06.3 - G AOS ESTADOS - OPERA√á√ïES EXTERNAS (Fian√ßas)` = list(
    criterio = "
    conta_contabil_numero == '812110204' &
    conta_corrente == 'CG0000069'
    "
  ),
  
  `06.4 - G AOS ESTADOS - OPERA√á√ïES EXTERNAS (Garantias OP)` = list(
    criterio = "
    conta_contabil_numero == '899913302' &
    conta_corrente == 'CG0000069'
    "
  ),
  
  `07 - G AOS MUNIC√çPIOS - TOTAL` = list(
    criterio = "
    conta_contabil_numero %in% c('812110104', '812110204') &
    conta_corrente %in% c('CG0000065', 'CG0000070')
    "
  ),
  
  `07.1 - G AOS MUNIC√çPIOS - OPERA√á√ïES INTERNAS` = list(
    criterio = "
    conta_contabil_numero == '812110104' &
    conta_corrente == 'CG0000065'
    "
  ),
  
  `07.2 - G AOS MUNIC√çPIOS - OPERA√á√ïES EXTERNAS` = list(
    criterio = "
    conta_contabil_numero == '812110204' &
    conta_corrente == 'CG0000070'
    "
  ),
  
  `08 - G √ÄS ENTIDADES CONTROLADAS - TOTAL` = list(
    criterio = "
    conta_contabil_numero %in% c('812110104', '812110204') &
    conta_corrente %in% c('CG0000067', 'CG0000071', 'CG0000072')
    "
  ),
  
  `08.1 - G √ÄS ENTIDADES - OPERA√á√ïES INTERNAS` = list(
    criterio = "
    conta_contabil_numero == '812110104' &
    conta_corrente == 'CG0000067'
    "
  ),
  
  `08.2 - G √ÄS ENTIDADES - OPERA√á√ïES EXTERNAS` = list(
    criterio = "
    conta_contabil_numero == '812110204' &
    conta_corrente %in% c('CG0000071', 'CG0000072')
    "
  ),
  
  `09 - G POR FUNDOS E PROGRAMAS - TOTAL` = list(
    criterio = "
    (conta_contabil_numero == '812110104' & 
     (conta_corrente %in% c('CGASCA001', 'CGLEI8036') | 
      startsWith(conta_corrente, 'CGFSCEIRB') |
      startsWith(conta_corrente, 'CGPPRONAF') |
      startsWith(conta_corrente, 'CGPRCACAU') |
      startsWith(conta_corrente, 'CGASCAD'))) |
    conta_contabil_numero == '812110110'
    "
  ),
  
  `09.1 - G FUNDOS - SEGUROS-GARANTIA` = list(
    criterio = "
    conta_contabil_numero == '812110110' &
    (conta_corrente == '999' | is.na(conta_corrente))
    "
  ),
  
  `09.2 - G FUNDOS - ASCA` = list(
    criterio = "
    conta_contabil_numero == '812110104' &
    conta_corrente == 'CGASCA001'
    "
  ),
  
  `09.3 - G FUNDOS - LEI 8036 (FGTS)` = list(
    criterio = "
    conta_contabil_numero == '812110104' &
    conta_corrente == 'CGLEI8036'
    "
  )
)

datatable(aplicar_criterios(rgf_a03, criterios_rgf_A03_garantias) %>% group_by(ordem,nome) %>% summarise(valor = sum(valor)))%>% 
  formatRound(c("valor"), 2, mark = ".", dec.mark = ",")
```

# üìã Anexo 4 (Opera√ß√µes de Cr√©dito)

```{r}
#| code-fold: true
#| eval: true


criterios_rgf_A04_receitas <- list(
  
  # ===========================================================================
  # 1. MOBILI√ÅRIA INTERNA - REFINANCIAMENTO (CORRIGIDO)
  # ===========================================================================
  `01_mob_interna_refinanciamento` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621340000', '621390000') &
    (startsWith(natureza_receita_codigo_completo, '2111002') |
     startsWith(natureza_receita_codigo_completo, '8111002') |
     natureza_receita_codigo_completo %in% c('21110200', '21110201', 
                                             '81110200', '81110201'))
    "
  ),
  
  # ===========================================================================
  # 2. MOBILI√ÅRIA INTERNA - OUTRAS OR√áAMENT√ÅRIAS (CORRIGIDO)
  # ===========================================================================
  `02_mob_interna_outras_orcamentarias` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621340000', '621390000') &
    (startsWith(natureza_receita_codigo_completo, '2111003') |
     startsWith(natureza_receita_codigo_completo, '8111001') |
     natureza_receita_codigo_completo %in% c('21110300', '21110301', 
                                             '21110100', '21110101'))
    "
  ),
  
  # ===========================================================================
  # 3. MOBILI√ÅRIA EXTERNA - REFINANCIAMENTO
  # ===========================================================================
  `03_mob_externa_refinanciamento` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621340000', '621390000') &
    natureza_receita_codigo_completo %in% c('21210201', '21210202', 
                                            '21210021', '21210022')
    "
  ),
  
  # ===========================================================================
  # 4. MOBILI√ÅRIA EXTERNA - DEMAIS EXTERNAS
  # ===========================================================================
  `04_mob_externa_demais_orcamentaria` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621340000', '621390000') &
    natureza_receita_codigo_completo %in% c('21210101', '21210102', 
                                            '21210011', '21210012')
    "
  ),
  
  # ===========================================================================
  # 5. CONTRATUAL INTERNA - ABERTURA DE CR√âDITO
  # ===========================================================================
  `05_contratual_interna_abertura` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621340000', '621390000') &
    startsWith(natureza_receita_codigo_completo, '2112001')
    "
  ),
  
  # ===========================================================================
  # 6. CONTRATUAL EXTERNA - ABERTURA DE CR√âDITO - OR√áAMENT√ÅRIAS
  # ===========================================================================
  `06_contratual_externa_orcamentaria` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621340000', '621390000') &
    (startsWith(natureza_receita_codigo_completo, '2122001') |
     natureza_receita_codigo_completo %in% c('21220100', '21220101', '21220102'))
    "
  ),
  
  # ===========================================================================
  # 7. OUTRAS OPERA√á√ïES OR√áAMENT√ÅRIAS
  # ===========================================================================
  `07_outras_operacoes_orcamentarias` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621340000', '621390000') &
    (startsWith(natureza_receita_codigo_completo, '2119001') |
     startsWith(natureza_receita_codigo_completo, '2129001'))
    "
  )
)


# ===============================================================================
# PARTE 2: CRIT√âRIOS PARA DESPESAS
# Utiliza: conta_contabil_numero + grupo_despesa_codigo_grupo
# ===============================================================================

criterios_rgf_A04_despesas <- list(
  
  # ===========================================================================
  # 1. AMORTIZA√á√ÉO E REFINANCIAMENTO DA D√çVIDA
  # ===========================================================================
  `01_amortizacao_refinanciamento` = list(
    criterio = "
    conta_contabil_numero %in% c('622130400', '622130600', '622130700') &
    grupo_despesa_codigo_grupo == '6'
    "
  ),
  
  # ===========================================================================
  # 2. OUTRAS DESPESAS CORRENTES (Grupo 3)
  # ===========================================================================
  `02_outras_despesas_correntes` = list(
    criterio = "
    conta_contabil_numero %in% c('622130400', '622130600', '622130700') &
    grupo_despesa_codigo_grupo == '3'
    "
  ),
  
  # ===========================================================================
  # 3. PESSOAL E ENCARGOS SOCIAIS (Grupo 1)
  # ===========================================================================
  `03_pessoal_encargos_sociais` = list(
    criterio = "
    conta_contabil_numero %in% c('622130400', '622130600', '622130700') &
    grupo_despesa_codigo_grupo == '1'
    "
  ),
  
  # ===========================================================================
  # 4. JUROS E ENCARGOS DA D√çVIDA (Grupo 2)
  # ===========================================================================
  `04_juros_encargos_divida` = list(
    criterio = "
    conta_contabil_numero %in% c('622130400', '622130600', '622130700') &
    grupo_despesa_codigo_grupo == '2'
    "
  ),
  
  # ===========================================================================
  # 5. INVESTIMENTOS (Grupo 4)
  # ===========================================================================
  `05_investimentos` = list(
    criterio = "
    conta_contabil_numero %in% c('622130400', '622130600', '622130700') &
    grupo_despesa_codigo_grupo == '4'
    "
  ),
  
  # ===========================================================================
  # 6. INVERS√ïES FINANCEIRAS (Grupo 5)
  # ===========================================================================
  `06_inversoes_financeiras` = list(
    criterio = "
    conta_contabil_numero %in% c('622130400', '622130600', '622130700') &
    grupo_despesa_codigo_grupo == '5'
    "
  )
)

# ===============================================================================
# PARTE 3: CRIT√âRIOS PARA EXTRA-OR√áAMENT√ÅRIAS (Contas 896 e 212)
# Nota: Estes crit√©rios usam apenas conta_contabil_numero
# ===============================================================================

criterios_rgf_A04_extra_orcamentarias <- list(
  
  # ===========================================================================
  # 1. MOBILI√ÅRIA INTERNA - ASSUN√á√ÉO E RECONHECIMENTO (NOVO)
  # ===========================================================================
  `01_mob_interna_assuncao` = list(
    criterio = "
    conta_contabil_numero %in% c('896110309', '896110310')
    "
  ),
  
  # ===========================================================================
  # 2. MOBILI√ÅRIA INTERNA - APORTE BACEN (CORRIGIDO)
  # ===========================================================================
  `02_mob_interna_extra_aporte_bacen` = list(
    criterio = "
    conta_contabil_numero %in% c('896110303', '896110304')
    "
  ),
  
  # ===========================================================================
  # 3. MOBILI√ÅRIA INTERNA - APORTE EMPRESAS
  # ===========================================================================
  `03_mob_interna_extra_aporte_empresas` = list(
    criterio = "
    conta_contabil_numero %in% c('896110311', '896110312')
    "
  ),
  
  # ===========================================================================
  # 4. MOBILI√ÅRIA INTERNA - DEMAIS (CORRIGIDO)
  # ===========================================================================
  `04_mob_interna_extra_demais` = list(
    criterio = "
    conta_contabil_numero %in% c('896110301', '896110302', '896110305', '896110306')
    "
  ),
  
  # ===========================================================================
  # 5. MOBILI√ÅRIA EXTERNA - EXTERNAS
  # ===========================================================================
  `05_mob_externa_externas` = list(
    criterio = "
    conta_contabil_numero %in% c('896110307', '896110308')
    "
  ),
  
  # ===========================================================================
  # 6. CONTRATUAL INTERNA - DEMAIS INTERNAS
  # ===========================================================================
  `06_contratual_interna_demais` = list(
    criterio = "
    conta_contabil_numero == '212110398'
    "
  )
)

datatable(aplicar_criterios(rgf_a04_receitas, criterios_rgf_A04_receitas) %>% group_by(ordem,nome) %>% summarise(valor = sum(valor)))%>%   formatRound(c("valor"), 2, mark = ".", dec.mark = ",")



datatable(aplicar_criterios(rgf_a04_despesas, criterios_rgf_A04_despesas) %>% group_by(ordem,nome) %>% summarise(valor = sum(valor)))%>%   formatRound(c("valor"), 2, mark = ".", dec.mark = ",")



datatable(aplicar_criterios(rgf_a02_balancete, criterios_rgf_A04_extra_orcamentarias) %>% group_by(ordem,nome) %>% summarise(valor = sum(valor)))%>%   formatRound(c("valor"), 2, mark = ".", dec.mark = ",")
```

# üìã Anexo 5 (Disponibilidades)

```{r}



dados_rgf_a05 <- dados_rgf_a05 %>% mutate(orgao_fonte = str_c(detalhe_orgao_central_codigo_detalhe_oc,"_" ,detalhe_orgao_central_id_fonte , "_", fonte_recursos_codigo ))

dados_rgf_a05 <- dados_rgf_a05 %>% mutate(tg_orgao_fonte = str_c(detalhe_orgao_central_codigo_detalhe_oc,"_" ,detalhe_orgao_central_id_fonte  ))

# =============================================================================
# APLICAR CLASSIFICA√á√ÉO DE LINHAS (FONTES) SE NECESS√ÅRIO
# =============================================================================

if(!"linhas" %in% names(dados_rgf_a05)) {
  dados_rgf_a05 <- dados_rgf_a05 %>%
    mutate(
      linhas = case_when(
        fonte_recursos_codigo %in% c("000") ~ "0_nao_vinculados",
        fonte_recursos_codigo %in% c("008", "012", "130", "133", "134") ~ "1_educacao",
        fonte_recursos_codigo %in% c("001", "002", "004", "005", "006", "010", "017", "023", "024", 
                                     "035", "040", "048", "049", "094", "126", "155", "156", "179", "184") ~  "2_seguridade_exceto_previdencia",
        fonte_recursos_codigo %in% c("122", "123") & tg_orgao_fonte %notin% c("000278_153","000278_154")  ~  "2_seguridade_exceto_previdencia",
        fonte_recursos_codigo %in% c("055", "056", "125") ~ "3_rpps",
        fonte_recursos_codigo %in% c("054") ~ "4_rgps",
        fonte_recursos_codigo %in% c("400", "401", "443", "444", "448") ~ "5_divida",
        fonte_recursos_codigo %in% c("034", "121", "122", "123") & tg_orgao_fonte %in% c("000278_133","000278_152","000278_153","000278_154") ~ "5_divida",
        fonte_recursos_codigo %in% c("201", "202", "203", "206", "207", "208", "209", "210", "211", "213",
                                     "219", "229", "234", "235", "241", "242", "251", 
                                     "286", "287", "288", "289") ~ "6_transferencias",
        fonte_recursos_codigo %in% c("003", "007", "009", "011", "013", "014", "015", "016", "018", "019",
                                     "020", "021", "022", "025", "026", "027", "028", "029", "030", "031",
                                     "032", "033", "034", "037", "038", "039", "041", "042", "043", "044",
                                     "045", "046", "047", "050", "051", "052", "053", "057", "058", "059",
                                     "060", "061", "062", "063", "064", "065", "066", "067", "068", "069",
                                     "070", "071", "072", "073", "074", "075", "076", "077", "078", "079",
                                     "080", "081", "082", "083", "084", "085", "086", "087", "088", "089",
                                     "090", "091", "092", "093", "095", "096", "097", "098", "099", "100",
                                     "101", "102", "103", "104", "105", "106", "107", "108", "109", "110",
                                     "111", "112", "113", "114", "115", "116", "118", "119", "120", "121",
                                     "124", "127", "128", "129", "131", "132" ,"135", "136", "137", "138", "139",
                                     "140", "141", "144", "145", "177", "178", "180", "181", "182", "183", "449") ~ "7_fundos_orgaos_programa",
        (fonte_recursos_codigo %in% c("034", "121") & tg_orgao_fonte %notin% c("000278_133","000278_152")) ~ "7_fundos_orgaos_programa",
        fonte_recursos_codigo %in% c("491") ~ "8_extraorcamentario",
        fonte_recursos_codigo %in% c("490", "'-9", "'-7") ~ "9_nao_classificados",
        TRUE ~ "outros"
      )
    )
}

# ===============================================================================
# CRIT√âRIOS RGF TABELA 04 - DISPONIBILIDADE DE CAIXA E RESTOS A PAGAR
# ===============================================================================

criterios_rgf_a05_disponibilidade <- list(
  
  # ===========================================================================
  # 1. RECEITAS
  # ===========================================================================
  `01_receitas` = list(
    criterio = "
    conta_contabil_numero %in% c('621200000', '621310000', '621320000', 
                                  '621330000', '621390000')
    "
  ),
  
  # ===========================================================================
  # 2. DESPESAS
  # ===========================================================================
  `02_despesas` = list(
    criterio = "
    conta_contabil_numero %in% c('622920104', '631400000', '632200000')
    "
  ),
  
  # ===========================================================================
  # 3. DISPONIBILIDADE DE CAIXA BRUTA (111 F menos 111110205)
  # ===========================================================================
  `03_disponibilidade_caixa_bruta` = list(
    criterio = "
    startsWith(conta_contabil_numero, '111') &
    isf_lancamento == 'F' &
    conta_contabil_numero != '111110205'
    "
  ),
  
  # ===========================================================================
  # 4. DEDU√á√ÉO: RECEITAS A CLASSIFICAR
  # ===========================================================================
  `04_deducao_receitas_classificar` = list(
    criterio = "
    conta_contabil_numero %in% c('111113001', '491110101', '491110102', '491110103', 
                                  '491110108', '491010101', '491010102', '491010103', 
                                  '491019701', '491019702', '491019703')
    "
  ),
  
  # ===========================================================================
  # 5. RESTOS A PAGAR LIQUIDADOS E N√ÉO PAGOS (EXERC√çCIOS ANTERIORES)
  # ===========================================================================
  `05_rp_liquidados_nao_pagos_exercicios_anteriores` = list(
    criterio = "
    conta_contabil_numero %in% c('632100000', '631300000')
    "
  ),
  
  # ===========================================================================
  # 6. RESTOS A PAGAR LIQUIDADOS E N√ÉO PAGOS (DO EXERC√çCIO)
  # ===========================================================================
  `06_rp_liquidados_nao_pagos_exercicio` = list(
    criterio = "
    conta_contabil_numero %in% c('632710000', '632720000', '632700000')
    "
  ),
  
  # ===========================================================================
  # 7. RESTOS A PAGAR EMPENHADOS E N√ÉO LIQUIDADOS (EXERC√çCIOS ANTERIORES)
  # ===========================================================================
  `07_rp_empenhados_nao_liquidados_exercicios_anteriores` = list(
    criterio = "
    conta_contabil_numero %in% c('631100000', '631200000', '631510000', '631520000', 
                                  '631530000', '631810000', '631820000', '631830000', 
                                  '631840000', '631540000')
    "
  ),
  
  # ===========================================================================
  # 8. DEMAIS OBRIGA√á√ïES I (2 F menos 21892 3901, 3902, 3903, 4001 e 218914001)
  # ===========================================================================
  `08_demais_obrigacoes_i` = list(
    criterio = "
    startsWith(conta_contabil_numero, '2') &
    isf_lancamento == 'F' &
    !conta_contabil_numero %in% c('218923901', '218923902', '218923903', '218914001')
    "
  ),
  
  # ===========================================================================
  # 9. DEMAIS OBRIGA√á√ïES II (2 F da CODIV - UG 170600)
  # ===========================================================================
  `09_demais_obrigacoes_ii_2f_da_codiv` = list(
    criterio = "
    startsWith(conta_contabil_numero, '2') &
    isf_lancamento == 'F' &
    ug_executora_codigo == '170600'
    "
  ),
  
  # ===========================================================================
  # 10. DEDU√á√ÉO: DEMAIS OBRIGA√á√ïES I
  # ===========================================================================
  `10_deducao_demais_obrigacoes_i` = list(
    criterio = "
    conta_contabil_numero %in% c('631570000', '631590000', '631540000', '632100000', 
                                  '632720000', '531710200', '531720100', '218923901')
    "
  ),
  
  # ===========================================================================
  # 11. RESTOS A PAGAR EMPENHADOS E N√ÉO LIQUIDADOS (DO EXERC√çCIO)
  # ===========================================================================
  `11_rp_empenhados_nao_liquidados_exercicio` = list(
    criterio = "
    conta_contabil_numero %in% c('531710100', '531710200', '531720100')
    "
  ),
  
  # ===========================================================================
  # 12. EMPENHOS N√ÉO LIQUIDADOS CANCELADOS (POR INSUFICI√äNCIA FINANCEIRA)
  # ===========================================================================
  `12_empenhos_nao_liquidados_cancelados` = list(
    criterio = "
    conta_contabil_numero == '631910000'
    "
  ),
  
  # ===========================================================================
  # 13. CONTA: 822240101 - RECEBIMENTO DE RP AUTORIZADO
  # ===========================================================================
  `13_conta_822240101_recebimento_rp_autorizado` = list(
    criterio = "
    conta_contabil_numero == '822240101'
    "
  ),
  
  # ===========================================================================
  # 14. CONTA: 822140101 - LIBERA√á√ÉO DE RP AUTORIZADO
  # ===========================================================================
  `14_conta_822140101_liberacao_rp_autorizado` = list(
    criterio = "
    conta_contabil_numero == '822140101'
    "
  ),
  
  # ===========================================================================
  # 15. CONTA: 894310000 - DISPONIBILIDADE DE RECURSOS POR TED A LIBERAR
  # ===========================================================================
  `15_conta_894310000_disp_recursos_ted_liberar` = list(
    criterio = "
    conta_contabil_numero == '894310000'
    "
  ),
  
  # ===========================================================================
  # 16. CONTA: 894320000 - DISPONIBILIDADE DE RECURSOS POR TED A RECEBER
  # ===========================================================================
  `16_conta_894320000_disp_recursos_ted_receber` = list(
    criterio = "
    conta_contabil_numero == '894320000'
    "
  ),
  
  # ===========================================================================
  # 17. DEDU√á√ÉO: LIMITE DE SAQUE I
  # ===========================================================================
  `17_deducao_limite_saque_i` = list(
    criterio = "
    conta_contabil_numero %in% c('218924001') &
    isf_lancamento == 'F'
    "
  ),
  
  # ===========================================================================
  # 18. DEDU√á√ÉO: LIMITE DE SAQUE II (PODER EXECUTIVO)
  # ===========================================================================
  `18_deducao_limite_saque_ii_poder_executivo` = list(
    criterio = "
    conta_contabil_numero %in% c('218924001', '218924002') &
    orgao_c_cor_codigo %in% c('01000', '02000', '02001', '11000', '12000', 
                              '13000', '14000', '15000', '17000', '34000', 
                              '51100', '53000') &
    isf_lancamento == 'F'
    "
  ),
  
  # ===========================================================================
  # 19. DEDU√á√ÉO: DA DISPONIBILIDADE L√çQUIDA (111110205)
  # ===========================================================================
  `19_deducao_disponibilidade_liquida_111110205` = list(
    criterio = "
    conta_contabil_numero == '111110205'
    "
  ),
  
  # ===========================================================================
  # 20. DEDU√á√ÉO: DEMAIS OBRIGA√á√ïES II
  # ===========================================================================
  `20_deducao_demais_obrigacoes_ii` = list(
    criterio = "
    conta_contabil_numero %in% c('218924001', '218914001') &
    isf_lancamento == 'F'
    "
  ),
  
  # ===========================================================================
  # 21. DEMAIS OBRIGA√á√ïES FINANCEIRAS (NEW)
  # ===========================================================================
  `21_demais_obrigacoes_new` = list(
    criterio = "
    startsWith(conta_contabil_numero, '2') &
    !conta_contabil_numero %in% c('218923901', '218923902', '218923903', 
                                   '218924001', '218914001') &
    isf_lancamento == 'F' &
    ug_executora_codigo != '170600'
    "
  ),
  
  # ===========================================================================
  # 22. DEMAIS OBRIGA√á√ïES - SUBTRA√á√ÉO
  # ===========================================================================
  `22_demais_obrigacoes_subtracao` = list(
    criterio = "
    conta_contabil_numero %in% c('631200000', '631300000', '631520000', '632100000', 
                                  '631540000', '218929031', '218929032', '218929033', 
                                  '531720100', '531710200', '632710000', '632720000')
    "
  )
)

# ===============================================================================
# EXEMPLO DE USO
# ===============================================================================

# ===============================================================================
# RGF TABELA 04 - DISPONIBILIDADE DE CAIXA E RESTOS A PAGAR
# Processamento Completo e Validado
# ===============================================================================

library(dplyr)
library(tidyr)
library(readxl)
library(stringr)

# ===============================================================================
# FUN√á√ÉO AUXILIAR
# ===============================================================================

get_col <- function(df, nome_coluna) {
  if (nome_coluna %in% names(df)) {
    return(df[[nome_coluna]])
  } else {
    return(0)
  }
}

# ===============================================================================
# ETAPA 1: APLICAR CRIT√âRIOS E PIVOTAR
# ===============================================================================

# Aplicar crit√©rios de filtro
resultado_rgf_a05 <- aplicar_criterios(
  df = dados_rgf_a05,
  criterios = criterios_rgf_a05_disponibilidade,
  group_vars = c("linhas")
)

# Pivotar para formato wide
rgf_a05_wide <- resultado_rgf_a05 %>%
  select(mes_lancamento, linhas, categoria, valor) %>%
  pivot_wider(names_from = categoria, values_from = valor, values_fill = 0)

# ===============================================================================
# ETAPA 2: RENOMEAR COLUNAS B√ÅSICAS
# ===============================================================================

rgf_a05_wide <- rgf_a05_wide %>%
  mutate(
    # Colunas de receitas e despesas
    receitas = get_col(., "01_receitas"),
    despesas = get_col(., "02_despesas"),
    
    # Disponibilidade de caixa
    disponibilidade_caixa_bruta = get_col(., "03_disponibilidade_caixa_bruta"),
    deducao_receitas_classificar = get_col(., "04_deducao_receitas_classificar"),
    
    # Restos a Pagar
    rp_liquidados_nao_pagos_exercicios_anteriores = 
      get_col(., "05_rp_liquidados_nao_pagos_exercicios_anteriores"),
    rp_liquidados_nao_pagos_exercicio = 
      get_col(., "06_rp_liquidados_nao_pagos_exercicio"),
    rp_empenhados_nao_liquidados_exercicios_anteriores = 
      get_col(., "07_rp_empenhados_nao_liquidados_exercicios_anteriores"),
    
    # Obriga√ß√µes
    demais_obrigacoes_new = get_col(., "21_demais_obrigacoes_new"),
    demais_obrigacoes_subtracao = get_col(., "22_demais_obrigacoes_subtracao"),
    
    # TEDs
    conta_894310000_disp_recursos_ted_liberar = 
      get_col(., "15_conta_894310000_disp_recursos_ted_liberar"),
    conta_894320000_disp_recursos_ted_receber = 
      get_col(., "16_conta_894320000_disp_recursos_ted_receber")
  )

# ===============================================================================
# ETAPA 3: CALCULAR DISPONIBILIDADE BRUTA CLEAN
# Regras diferentes por tipo de linha
# ===============================================================================

rgf_a05_clean <- rgf_a05_wide %>%
  mutate(
    disponibilidade_bruta_clean = case_when(
      # Fundos/√ìrg√£os/Programa: ajusta com TEDs
      linhas == "7_fundos_orgaos_programa" ~ 
        disponibilidade_caixa_bruta + 
        conta_894320000_disp_recursos_ted_receber - 
        conta_894310000_disp_recursos_ted_liberar,
      
      # N√£o Classificados: deduz receitas a classificar
      linhas == "9_nao_classificados" ~ 
        disponibilidade_caixa_bruta - deducao_receitas_classificar,
      
      # Demais linhas: valor direto
      TRUE ~ disponibilidade_caixa_bruta
    )
  )

# ===============================================================================
# ETAPA 4: CALCULAR DEMAIS OBRIGA√á√ïES FINANCEIRAS CLEAN
# Regras diferentes por tipo de linha
# ===============================================================================

rgf_a05_clean <- rgf_a05_clean %>%
  mutate(
    demais_obrigacoes_financeiras_clean = case_when(
      # Fundos/√ìrg√£os/Programa: c√°lculo simples
      linhas == "7_fundos_orgaos_programa" ~ 
        demais_obrigacoes_new - demais_obrigacoes_subtracao,
      
      # Demais linhas: ajusta com TEDs
      TRUE ~ 
        demais_obrigacoes_new - demais_obrigacoes_subtracao + 
        conta_894310000_disp_recursos_ted_liberar - 
        conta_894320000_disp_recursos_ted_receber
    )
  )

# ===============================================================================
# ETAPA 5: JOIN COM DISPONIBILIDADE INICIAL
# ===============================================================================

disponibilidade_inicial <- read_excel("disponibilidade_inicial.xlsx")

rgf_a05_clean <- rgf_a05_clean %>%
  left_join(disponibilidade_inicial, by = "linhas")

# ===============================================================================
# ETAPA 6: CALCULAR DEMAIS FLUXOS CLEAN
# F√≥rmula: Disp. Inicial + Receitas - Despesas - Disp. Bruta Clean
# ===============================================================================

rgf_a05_clean <- rgf_a05_clean %>%
  mutate(
    demais_fluxos_clean = 
      disponibilidade_inicial + 
      receitas - 
      despesas - 
      disponibilidade_bruta_clean
  )

# ===============================================================================
# ETAPA 7: CALCULAR DISPONIBILIDADE ANTES DA INSCRI√á√ÉO DE RP
# ===============================================================================

rgf_a05_clean <- rgf_a05_clean %>%
  mutate(
    disponibilidade_antes_insc_rp_clean = 
      disponibilidade_bruta_clean - 
      rp_liquidados_nao_pagos_exercicios_anteriores - 
      rp_empenhados_nao_liquidados_exercicios_anteriores - 
      rp_liquidados_nao_pagos_exercicio - 
      demais_obrigacoes_financeiras_clean
  )

# ===============================================================================
# ETAPA 8: SELECIONAR E ORDENAR COLUNAS FINAIS
# ===============================================================================

rgf_a05_final <- rgf_a05_clean %>%
  select(
    mes_lancamento,
    linhas,
    disponibilidade_inicial,
    receitas,
    despesas,
    demais_fluxos_clean,
    disponibilidade_bruta_clean,
    rp_liquidados_nao_pagos_exercicios_anteriores,
    rp_liquidados_nao_pagos_exercicio,
    rp_empenhados_nao_liquidados_exercicios_anteriores,
    demais_obrigacoes_financeiras_clean,
    disponibilidade_antes_insc_rp_clean
  ) %>%
  arrange(linhas)



# Formatado em milh√µes
rgf_a05_formatada <- rgf_a05_final %>% filter(linhas != "outros") %>% adorn_totals("row") %>%
  mutate(
    across(
      where(is.numeric) & !matches("mes_lancamento"),
      ~ round(.x , 2)
    )
  )



# ===============================================================================
# ETAPA 10: EXPORTAR
# ===============================================================================

library(writexl)

write_xlsx(
  list(
    "rgf_a05_Final" = rgf_a05_final,
    "rgf_a05_Milhoes" = rgf_a05_formatada
  ),
  path = "rgf_a05_final.xlsx"
)


```

```{r}
datatable(rgf_a05_formatada)
```
