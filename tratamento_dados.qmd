---
title: "Tratamento do dados"
editor: visual
lang: "pt"
format:
  # docx: default
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
execute:
  warning: false
  message: false
---

```{r}
#| warning: false
#| message: false
#| error: false
library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(plotly)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(DT)
library(stringr)
library(scales)
library(ggthemes)


`%notin%` <- Negate(`%in%`)
myNumFmt <- as.fmt(digits=0, big.mark=".")
options(scipen = 999)

options(DT.options = list(pageLength = 10, fontSize = "70%", language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json')))
# https://rstudio.github.io/DT/004-i18n.html
# https://rstudio.github.io/DT/options.html
# %>% formatCurrency(c('A', 'C')) %>% formatPercentage('D', 2)%>% formatRound('E', 3)
```

## Importar metodologia

### Metodologia geral dos Anexos e Tabelas

```{r importar_metodologia_anexos_tabelas}
#| warning: false
#| message: false
#| error: false


filtros_gerais_anexos_tabelas  <- read_excel("filtros.xlsx", sheet = "filtros_gerais_anexos_tabelas")

filtros_gerais_anexos_tabelas %>% head() %>% kable()






```

### Metodologia geral das Linhas

```{r}
#| warning: false
#| message: false
#| error: false

filtros_linhas <- read_excel("filtros.xlsx", sheet = "filtros_linhas")

filtros_linhas %>% head()%>% kable()

itens_linhas <- cbind(filtros_linhas$item %>% unique(),filtros_linhas$item %>% unique()%>% make_clean_names())



```

## Importar dados consolidados da receita e da despesa

```{r importar_dados}
#| warning: false
#| message: false
#| error: false
dados_despesa <- read_excel("auto_despesa.xlsx", 
    col_types = c("text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "numeric", "numeric", "numeric", 
        "numeric", "numeric")) %>% clean_names()




dados_receita <- read_excel("auto_receita.xlsx") %>% clean_names()







```

## "Limpar" os nomes dos atributos do Tesouro Gerencial

```{r atributos_tg_clean}
#| warning: false
#| message: false
#| error: false

atributos_despesa_tg <- colnames(dados_despesa)


atributos_receita_tg <- colnames(dados_receita)


atributos_nomes_tg <- cbind(c(atributos_despesa_tg,atributos_receita_tg) %>% unique(),c(atributos_despesa_tg,atributos_receita_tg) %>% unique() %>% make_clean_names())





```

## Criar código com os filtros gerais dos Anexos e das Tabelas

### Tópico Receitas

```{r}
#| warning: false
#| message: false
#| error: false



filtros_gerais_anexos_tabelas <- filtros_gerais_anexos_tabelas %>%
   mutate(operador_logico_r = str_replace_na(operador_logico_r)  )

criar_codigo_filtros_gerais_anexos_tabelas_receitas <- filtros_gerais_anexos_tabelas %>% filter(topico == "receitas") %>%
  mutate(
    operador_logico_r = 
      str_replace_all(operador_logico_r, "NA", " "))  %>%
  mutate(filtro = 
           str_c(operador_logico_r,
                 " ",
                 atributo_r,
                 " " ,
                 operador_comparacao_r,
                 " " ,
                 valores)) %>% 
  group_by(anexo_tabela, topico,sequencial,filtro)  %>%
  summarise() %>%
  drop_na()





criar_codigo_filtros_gerais_anexos_tabelas_receitas %>% kable()
```

```{r}
criar_codigo_filtros_gerais_anexos_tabelas_receitas <- criar_codigo_filtros_gerais_anexos_tabelas_receitas  %>%
   pivot_wider(
     names_from = sequencial,
     values_from = filtro) %>%
   unite(
     col= filtrao,
     !c("anexo_tabela", "topico"), sep = ' ') %>%
   mutate (filtrao = str_remove(filtrao, " NA"))%>%
   mutate(
     filtrao = 
       str_c(
         anexo_tabela,
         " <- dados_receita %>%  filter( ",
         filtrao,
         " )" 
         ,
        " %>% mutate (anexo_tabela_topico = '",
        anexo_tabela,"_",topico,"')"
         )) %>%
   mutate (filtrao = str_remove(filtrao, " NA"))


criar_codigo_filtros_gerais_anexos_tabelas_receitas %>% kable()
```

### Tópico Despesas

```{r}
filtros_gerais_anexos_tabelas <- filtros_gerais_anexos_tabelas %>%
   mutate(operador_logico_r = str_replace_na(operador_logico_r)  )

criar_codigo_filtros_gerais_anexos_tabelas_despesas <- filtros_gerais_anexos_tabelas %>% filter(topico == "despesas") %>%
  mutate(
    operador_logico_r =
      str_replace_all(operador_logico_r, "NA", " "))  %>%
  mutate(filtro =
           str_c(operador_logico_r,
                 " ",
                 atributo_r,
                 " " ,
                 operador_comparacao_r,
                 " " ,
                 valores)) %>%
  group_by(anexo_tabela, topico,sequencial,filtro)  %>%
  summarise() %>%
  drop_na()





criar_codigo_filtros_gerais_anexos_tabelas_despesas %>% kable()
```

```{r}
criar_codigo_filtros_gerais_anexos_tabelas_despesas <- criar_codigo_filtros_gerais_anexos_tabelas_despesas  %>%
   pivot_wider(
     names_from = sequencial,
     values_from = filtro) %>%
   unite(
     col= filtrao,
     !c("anexo_tabela", "topico"), sep = ' ') %>%
   mutate (filtrao = str_remove(filtrao, " NA"))%>%
   mutate(
     filtrao = 
       str_c(
         anexo_tabela,
         " <- dados_despesa %>%  filter( ",
         filtrao,
         " )" 
         ,
        " %>% mutate (anexo_tabela_topico = '",
        anexo_tabela,"_",topico,"')"
         )) %>%
   mutate (filtrao = str_remove(filtrao, " NA"))


criar_codigo_filtros_gerais_anexos_tabelas_despesas %>% kable()
```

## Criar base de dados

### Base de dados das receitas

```{r}
eval_texto <- function(x){ eval(parse(text = x))}

lista_dados_anexos_tabelas_receitas <- map(criar_codigo_filtros_gerais_anexos_tabelas_receitas$filtrao, eval_texto)


names(lista_dados_anexos_tabelas_receitas) <- criar_codigo_filtros_gerais_anexos_tabelas_receitas$anexo_tabela



```

### Base de dados das despesas

```{r}
eval_texto <- function(x){ eval(parse(text = x))}

lista_dados_anexos_tabelas_despesas <- map(criar_codigo_filtros_gerais_anexos_tabelas_despesas$filtrao, eval_texto)


names(lista_dados_anexos_tabelas_despesas) <- criar_codigo_filtros_gerais_anexos_tabelas_despesas$anexo_tabela
```

## Criar código com os filtros para as linhas individuais dos Anexos e das Tabelas

### Linhas das receitas

```{r}
#| warning: false
#| message: false
#| error: false


 filtros_linhas <- filtros_linhas %>% mutate(operador_logico_r = str_replace_na(operador_logico_r)  )
 
 
 
 

criar_codigo_filtros_linhas_receitas <- filtros_linhas %>% filter(topico == "receitas") %>%mutate(operador_logico_r = str_replace_all(operador_logico_r, "NA", " "))  %>% mutate(filtro = str_c(operador_logico_r, " ",atributo_r," " ,operador_comparacao_r, " " ,valores)) %>% group_by(anexo_tabela, topico, item_clean, sequencial,filtro)  %>% summarise() %>% drop_na()  %>% mutate(nome_linha = str_c(anexo_tabela,"_",topico, "_", item_clean))

 criar_codigo_filtros_linhas_receitas %>% kable()

# names_linhas <- criar_codigo_filtros_linhas_receitas %>% mutate(nome_linha = str_c(anexo_tabela,"_",topico, "_", item)) %>%  group_by(nome_linha) %>% summarise() 




```

```{r}
#| warning: false
#| message: false
#| error: false
criar_codigo_filtros_linhas_receitas <- criar_codigo_filtros_linhas_receitas  %>%
   pivot_wider(
     names_from = sequencial,
     values_from = filtro) %>%
   unite(
     col= filtrao,
     !c("anexo_tabela","topico" ,"item_clean", "nome_linha"), sep = ' ') %>%
   mutate (filtrao = str_remove(filtrao, " NA"))%>%
   mutate(
     filtrao = 
       str_c(
         anexo_tabela,
         "_",
         topico,
         "_",
         item_clean,
        " <- lista_dados_anexos_tabelas_receitas$",
        anexo_tabela,
         "%>%  filter( ",
         filtrao,
         " )" ,
        " %>% mutate (anexo_tabela_topico_linha = '",
        anexo_tabela,"_",topico,"_",item_clean,"')"
           
         )) %>%
   mutate (filtrao = str_remove(filtrao, " NA"))


 criar_codigo_filtros_linhas_receitas%>% group_by(nome_linha, filtrao) %>% summarise() %>% kable()
```

### Linhas das despesas

```{r}
criar_codigo_filtros_linhas_despesas <- filtros_linhas %>% filter(topico == "despesas") %>%mutate(operador_logico_r = str_replace_all(operador_logico_r, "NA", " "))  %>% mutate(filtro = str_c(operador_logico_r, " ",atributo_r," " ,operador_comparacao_r, " " ,valores)) %>% group_by(anexo_tabela, topico, item_clean, sequencial,filtro)  %>% summarise() %>% drop_na()  %>% mutate(nome_linha = str_c(anexo_tabela,"_",topico, "_", item_clean))

 criar_codigo_filtros_linhas_despesas %>% kable()
```

```{r}
criar_codigo_filtros_linhas_despesas <- criar_codigo_filtros_linhas_despesas  %>%
   pivot_wider(
     names_from = sequencial,
     values_from = filtro) %>%
   unite(
     col= filtrao,
     !c("anexo_tabela","topico" ,"item_clean", "nome_linha"), sep = ' ') %>%
   mutate (filtrao = str_remove(filtrao, " NA"))%>%
   mutate(
     filtrao = 
       str_c(
         anexo_tabela,
         "_",
         topico,
         "_",
         item_clean,
        " <- lista_dados_anexos_tabelas_despesas$",
        anexo_tabela,
         "%>%  filter( ",
         filtrao,
         " )" ,
        " %>% mutate (anexo_tabela_topico_linha = '",
        anexo_tabela,"_",topico,"_",item_clean,"')"
           
         )) %>%
   mutate (filtrao = str_remove(filtrao, " NA"))


 criar_codigo_filtros_linhas_despesas %>% group_by(nome_linha, filtrao) %>% summarise() %>% kable()


```

```{r}
# eval_texto <- function(x){ eval(parse(text = x))}
# 
# lista_dados_anexos_tabelas_despesas <- map(criar_codigo_filtros_gerais_anexos_tabelas_despesas$filtrao, eval_texto)
# 
# 
# names(lista_dados_anexos_tabelas_despesas) <- criar_codigo_filtros_gerais_anexos_tabelas_despesas$anexo_tabela
```

## Criar base de dados com os saldos das linhas dos Anexos e Tabelas

### Base de dados com os saldos das linhas das receitas

```{r}
#| warning: false
#| message: false
#| error: false


lista_linhas_receitas <- map(criar_codigo_filtros_linhas_receitas$filtrao, eval_texto)




# names(lista_linhas) <- names_linhas$nome_linha


df_linhas_receitas <- map_df(lista_linhas_receitas, as.data.frame)

df_linhas_receitas%>% group_by(anexo_tabela_topico_linha) %>% summarise(previsao_atualizada_da_receita = sum(previsao_atualizada_da_receita, na.rm = TRUE))%>% kable( digits = 2, format.args = list(big.mark = ".", decimal.mark = ","))
```

### Base de dados com os saldos das linhas das despesas

```{r}
lista_linhas_despesas <- map(criar_codigo_filtros_linhas_despesas$filtrao, eval_texto)




# names(lista_linhas) <- names_linhas$nome_linha


df_linhas_despesas <- map_df(lista_linhas_despesas, as.data.frame)

df_linhas_despesas%>% group_by(anexo_tabela_topico_linha) %>% summarise( despesas_empenhadas_controle_empenho= sum(despesas_empenhadas_controle_empenho, na.rm = TRUE))%>% kable( digits = 2, format.args = list(big.mark = ".", decimal.mark = ","))
```

```{r}
#| warning: false
#| message: false
#| error: false
#| eval: false
receita_total <-  for (i in seq_along(lista_dados_anexos_tabelas_receitas)) {
  print( sum(lista_dados_anexos_tabelas_receitas[[i]][21], na.rm = TRUE)/1000000000  )
  
}

anexos <- for (i in seq_along(lista_dados_anexos_tabelas_receitas)) {
  names(lista_dados_anexos_tabelas_receitas)
}

df_anexos_tabelas <- map_df(lista_dados_anexos_tabelas_receitas, as.data.frame)

df_anexos_tabelas%>% group_by(anexo_tabela_topico) %>% summarise(previsao_atualizada_da_receita = sum(previsao_atualizada_da_receita, na.rm = TRUE)/1000000000)%>% kable( digits = 1, format.args = list(big.mark = ".", decimal.mark = ","))
```
