---
title: "Importar Planilhas"
editor: visual
lang: "pt"
format:
  # docx: default
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
execute:
  warning: false
  message: false
---

```{r}
library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(plotly)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(DT)
library(stringr)
library(scales)

# https://stackoverflow.com/questions/56997814/how-to-use-vector-of-column-names-as-input-into-dplyrgroup-by

# funcao para pivotar a tabela a partir dos itens de informacao

tabela_pivotada <- function(df, grupo){
  itens <- df$item_informacao_nome %>% unique() %>% na.omit()
  
  df <- df  %>% group_by(!!!syms(grupo))  %>% pivot_wider(names_from = item_informacao_nome, values_from = saldo_r_item_informacao) %>% summarise_at(itens, sum, na.rm = TRUE)
  
  return(df)
  
}


# funcao para formatar a tabela

dt_formatada <- function(df, grupo){
  datatable(df%>% adorn_totals("row"), rownames = FALSE,
            extensions = 'Buttons',
            options = list(
            dom = 'Bfrtip',
            buttons = list(
              'excel'
            )
          ))%>% formatRound(setdiff( df %>% colnames(), grupo), 2, mark = ".", dec.mark = "," )%>% 
    DT::formatStyle(columns = colnames(.$x$data), fontSize = '75%')
} 




# Função para desmembrar o código
desmembrar_codigo <- function(codigo) {
  # Validar o formato do código: MMM/AAAXXX[A|T]##[A-Za-z0-9]{0,10}
  if (!str_detect(codigo, "^[A-Z]{3}/\\d{4}[A-Za-z0-9]{3}[AT]\\d{2}[A-Za-z0-9]{0,10}$")) {
    stop("Código inválido. Deve seguir o formato: MMM/AAAXXX[A|T]##[A-Za-z0-9]{0,10} (mes_lancamento: 3 letras/mês e 4 dígitos/ano, demonstrativo: exatamente 3 caracteres alfanuméricos, anexo: A ou T + 2 dígitos, parte: até 10 caracteres alfanuméricos)")
  }
  
  # Extrair os componentes
  mes_lancamento <- str_sub(codigo, 1, 8)  # Ex.: "ABR/2025"
  demonstrativo <- str_sub(codigo, 9, 11)  # Ex.: "RGF" ou "REO"
  anexo <- str_sub(codigo, 12, 14)         # Ex.: "A08"
  parte <- str_sub(codigo, 15, -1)         # Ex.: "despesa" ou "" se não houver
  
  # Validar mes_lancamento (formato MMM/AAAA)
  if (!str_detect(mes_lancamento, "^[A-Z]{3}/\\d{4}$")) {
    stop("Formato de mes_lancamento inválido. Deve ser MMM/AAAA (ex.: ABR/2025)")
  }
  
  # Mapear meses para validação
  meses_validos <- c("JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ")
  mes_letras <- str_sub(mes_lancamento, 1, 3)
  if (!(mes_letras %in% meses_validos)) {
    stop("Mês inválido em mes_lancamento: ", mes_letras)
  }
  
  # Validar demonstrativo (exatamente 3 caracteres alfanuméricos)
  if (!str_detect(demonstrativo, "^[A-Za-z0-9]{3}$")) {
    stop("Formato de demonstrativo inválido. Deve ter exatamente 3 caracteres alfanuméricos (ex.: RGF, REO)")
  }
  
  # Validar anexo (deve começar com A ou T e ter 2 dígitos)
  if (!str_detect(anexo, "^[AT]\\d{2}$")) {
    stop("Formato de anexo inválido. Deve ser A ou T seguido por 2 dígitos (ex.: A08)")
  }
  
  # Definir parte como NA se vazio
  parte <- ifelse(parte == "", NA_character_, parte)
  
  # Retornar os parâmetros
  list(
    mes_lancamento = mes_lancamento,
    demonstrativo = demonstrativo,
    anexo = anexo,
    parte = parte
  )
}



# Função para agrupar, combinar e adicionar colunas com base no código
agrupar_e_combinar_dados <- function(df, criterios, codigo) {
  # Definir o operador notin
  `%notin%` <- Negate(`%in%`)
  
  # Desmembrar o código
  params <- desmembrar_codigo(codigo)
  
  # Filtrar o data frame de entrada com base em mes_lancamento, se a coluna existir
  if ("mes_lancamento" %in% colnames(df)) {
    df <- df %>% filter(mes_lancamento == params$mes_lancamento)
  } else {
    warning("Coluna 'mes_lancamento' não encontrada no data frame. Ignorando filtro por mes.")
  }
  
  # Função para processar cada categoria
  processar_categoria <- function(categoria, crit) {
    # Avaliar a string da condição usando eval(parse())
    condicao_expr <- eval(parse(text = crit$criterio), envir = df)
    
    df %>%
      filter(condicao_expr) %>%
      group_by(mes_lancamento, item_informacao_nome, item_informacao_codigo) %>%
      summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
      mutate(
        categoria = categoria,
        mes_lancamento = params$mes_lancamento,
        demonstrativo = params$demonstrativo,
        anexo = params$anexo,
        parte = params$parte
      ) %>%
      # Reordenar item_informacao_nome com base em item_informacao_codigo
      mutate(item_informacao_nome = fct_reorder(item_informacao_nome, item_informacao_codigo))
  }
  
  # Aplicar os critérios e combinar os resultados
  resultado <- map_df(names(criterios), ~ processar_categoria(.x, criterios[[.x]]))
  
  # Nomear o data frame com o código
  assign(codigo, resultado, envir = .GlobalEnv)
  
  return(resultado)
}

# opcoes globais

`%notin%` <- Negate(`%in%`)

myNumFmt <- as.fmt(digits=2, big.mark=".")

options(scipen = 999)

options(DT.options = 
          list(
            pageLength = 10,
            language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json')
            )
        )
# https://rstudio.github.io/DT/004-i18n.html
# https://rstudio.github.io/DT/options.html



```

```{r}
# selecionar e ler todos os arquivos com dados da despesa

arq_despesa <- list.files( pattern='despesa_parte')


dados_despesa <- map_df(arq_despesa,read_excel) %>% clean_names()

# criar as variaveis tipo de modalidade, refinanciamento e poder
dados_despesa <- dados_despesa %>%  
    mutate (
      tipo_modalidade =
        ifelse(modalidade_aplicacao_codigo == 91, "intra", "exceto intra"),
      refinanciamento =
        case_when(
        grupo_despesa_codigo_grupo == 6 &
          elemento_despesa_codigo %in% c(76,77) &
          subfuncao_governo_codigo %in% c(841, 842, 843, 844, 846) &
          fonte_recursos_codigo == "443"  ~ "sim",
        !(grupo_despesa_codigo_grupo == 6 &
          elemento_despesa_codigo %in% c(76,77) &
          subfuncao_governo_codigo %in% c(841, 842, 843, 844, 846) &
          fonte_recursos_codigo == "443" )  ~ "nao",
        TRUE ~ "escape"),
      poder = case_when(
        orgao_uge_orgao_maximo_codigo %in% c(59000)  ~ "MINISTÉRIO PÚBLICO DA UNIÃO",
        orgao_uge_orgao_maximo_codigo %in% c(29000) ~ "DEFENSORIA PÚBLICA",
        TRUE ~ orgao_uge_poder_nome
      )
        
      )



# importar dados da receita

arq_receita<- list.files( pattern='receita_parte')


dados_receita <- map_df(arq_receita,read_excel) %>% clean_names()

#dados_receita <- read_excel("dados_2024_receita.xlsx") %>% clean_names()


# criar as variaveis tipo de modalidade e refinanciamento

dados_receita <- dados_receita %>% 
  mutate(tipo_modalidade =
           ifelse(nre1_categoria_economica_codigo %in% c(7,8), "intra", "exceto intra"),
         refinanciamento = 
           ifelse(natureza_receita_codigo_completo %in% c(81110201,21110201,21210201), "sim", "nao")
    
  )




dados_rp_anexo_07 <- read_excel("dados_2024_rp_anexo_07.xlsx") %>% clean_names()


dados_rp_anexo_07 <- dados_rp_anexo_07 %>%  
    mutate (
      tipo_modalidade =
        ifelse(modalidade_aplicacao_codigo == 91, "intra", "exceto intra"),
      poder = case_when(
        orgao_uge_orgao_maximo_codigo %in% c(59000)  ~ "MINISTÉRIO PÚBLICO DA UNIÃO",
        orgao_uge_orgao_maximo_codigo %in% c(29000) ~ "DEFENSORIA PÚBLICA",
        TRUE ~ orgao_uge_poder_nome
      )
        
      )


# importar os dados de RP do anexo 12

dados_rp_anexo_12 <- read_excel("dados_2024_rp_anexo_12.xlsx") %>% clean_names()

# importar as contas contabeis para a tabela 04

dados_tabela_04 <- read_excel("dados_2024_conta_contabil_tabela_04.xlsx") %>% clean_names()

# importar as tabelas referentes a metodologia

filtros_metodologia  <- read_excel("filtros.xlsx", sheet = "metodologia") 

atributos_metodologia <- read_excel("filtros.xlsx", sheet = "metodologia")

dados_rp_anexo_08 <- read_excel("dados_2025_rp_anexo_08.xlsx") %>% clean_names()


dados_rp_anexo_08%>%
  filter(mes_lancamento == 'FEV/2025',  !elemento_despesa_codigo %in% c('01', '03') &
         ((fonte_recursos_codigo %in% c('000', '012', '00' , '12') & 
           (iduso_codigo == 8 | lei_calmon_s_n == 'SIM')) |
          (ne_c_cor_ano_emissao >= 2020 & 
           !fonte_recursos_codigo %in% c('133', '134', '213', '08', '13', '93') & 
           iduso_codigo == 8)) )%>% group_by(item_informacao_nome) %>% summarise(saldo = sum(saldo_r_item_informacao, na.rm =  TRUE)/1000)
```

\

```{r}
criterios_rli <- list(
  `II` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111101') & !natureza_receita_codigo_completo %in% c('11110102', '11110103', '11110107', '11110104', '11110108')"
  ),
  `II-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11110102'"
  ),
  `II-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11110103'"
  ),
  `II-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11110107', '11110104', '11110108')"
  ),
  `II-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111101')"
  ),
  `IE` = list(
    criterio = "natureza_receita_codigo_completo == '11110201'"
  ),
  `IE-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11110202'"
  ),
  `IE-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11110203'"
  ),
  `IE-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11110207', '11110208')"
  ),
  `IE-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111102')"
  ),
  `IR` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '1113') & !startsWith(natureza_receita_codigo_completo, '111303')"
  ),
  `IR-MULTAS` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111303') & !natureza_receita_codigo_completo %in% c('11130313', '11130323', '11130314', '11130324')"
  ),
  `IR-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11130313', '11130323')"
  ),
  `IR-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11130314', '11130324')"
  ),
  `IR-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '1113')"
  ),
  `ITR` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '11120') & !natureza_receita_codigo_completo %in% c('11200102', '11200422', '11200103', '11200423', '11200104', '11200424')"
  ),
  `ITR-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo %in% c('111200102', '11200422')"
  ),
  `ITR-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('111200103', '11200423')"
  ),
  `ITR-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('111200104', '11200424')"
  ),
  `ITR-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '11120')"
  ),
  `IPI` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '11140') & !natureza_receita_codigo_completo %in% c('11401102', '1140152', '11401103', '1140153', '11401104', '1140154')"
  ),
  `IPI-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11401102', '1140152')"
  ),
  `IPI-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11401103', '1140153')"
  ),
  `IPI-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11401104', '1140154')"
  ),
  `IPI-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '1140')"
  ),
  `IOF` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111502') & !natureza_receita_codigo_completo %in% c('11150202', '11150203', '11150204', '11150207')"
  ),
  `IOF-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11150202'"
  ),
  `IOF-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11150203'"
  ),
  `IOF-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11150204', '11150207')"
  ),
  `IOF-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111502')"
  ),
  `IOF-OURO` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111501') & !natureza_receita_codigo_completo %in% c('11150102', '11150103', '11150104')"
  ),
  `IOF-OURO-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11150102'"
  ),
  `IOF-OURO-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11150103'"
  ),
  `IOF-OURO-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11150104'"
  ),
  `IOF-OURO-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111501')"
  ),
  `OUTROS-IMPOSTOS` = list(
    criterio = "(startsWith(natureza_receita_codigo_completo, '111901') | startsWith(natureza_receita_codigo_completo, '111999') | startsWith(natureza_receita_codigo_completo, '1117') | startsWith(natureza_receita_codigo_completo, '1116')) & !natureza_receita_codigo_completo %in% c('11190112', '11199902', '11190113', '11199903', '11190114', '11199904')"
  ),
  `OUTROS-IMPOSTOS-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11190112', '11199902')"
  ),
  `OUTROS-IMPOSTOS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11190113', '11199903')"
  ),
  `OUTROS-IMPOSTOS-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11190114', '11199904')"
  ),
  `OUTROS-IMPOSTOS-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111901') | startsWith(natureza_receita_codigo_completo, '111999') | startsWith(natureza_receita_codigo_completo, '1117') | startsWith(natureza_receita_codigo_completo, '1116')"
  ),
  `CONFERENCIA-RECEITA` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111')"
  )
)

rli <- agrupar_e_combinar_dados(dados_receita, criterios_rli, "ABR/2025REOA08rli")

dados <- rli %>% 
  filter(mes_lancamento == "ABR/2025") %>%
  group_by(categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)

datatable(dados) %>%
  formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")
```

```{r}
library(dplyr)
library(purrr)
library(forcats)
library(stringr)



# Definir a lista de critérios
criterios_educacao <- list(
  `08 - COMPLEMENTAÇÃO DA UNIÃO - VAAT` = list(
    criterio = "acao_governo_codigo %in% c('00SB', '0E36') & fonte_recursos_codigo %notin% c('133', '134', '213', '008', '035', '212') & plano_orcamentario_codigo_po == '0001'"
  ),
  `09 - COMPLEMENTAÇÃO DA UNIÃO - VAAT` = list(
    criterio = "acao_governo_codigo %in% c('00SB', '0E36') & fonte_recursos_codigo %notin% c('133', '134', '213', '008', '035', '212') & plano_orcamentario_codigo_po %in% c('0002')"
  ),
  `01 - COMPLEMENTAÇÃO DA UNIÃO AO FUNDEB` = list(
    criterio = "acao_governo_codigo %in% c('00SB', '0E36')"
  ),
  `03 - EDUCAÇÃO BÁSICA` = list(
    criterio = "fonte_recursos_codigo %notin% c('008', '035', '133', '134', '213', '242') & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & subfuncao_governo_codigo == '368'"
  ),
  `04 - ENSINO SUPERIOR` = list(
    criterio = "fonte_recursos_codigo %notin% c(157, 175, 193, 109, 134, 181) & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & subfuncao_governo_codigo %in% c('364')"
  ),
  `05 - ENSINO PROFISSIONAL NÃO INTEGRADO AO ENSINO REGULAR` = list(
    criterio = "fonte_recursos_codigo %notin% c('008', '035', '133', '134') & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & subfuncao_governo_codigo == '363'"
  ),
  `06 - OUTRAS` = list(
    criterio = "fonte_recursos_codigo %notin% c('008', '035', '133', '134') & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & !subfuncao_governo_codigo %in% c('363', '364',  '368') & acao_governo_codigo %notin% c ('00SB', '0E36')"
  ),
  `11 - DESPESAS CUSTEADAS COM A CONTRIBUIÇÃO SOCIAL DO SALÁRIO-EDUCAÇÃO` = list(
    criterio = "fonte_recursos_codigo %in% c('133', '134', '213', '008', '035', '212') & iduso_codigo == 8 & acao_governo_codigo %notin% c('00SB', '0E36')"
  ),
  `12 - DESPESAS COM O FUNDO CONSTITUCIONAL DO DISTRITO FEDERAL - FCDF` = list(
    criterio = "acao_governo_codigo %in% c('0312') & fonte_recursos_codigo %notin% c('133', '134', '213', '008', '035', '212')"
  ),
  `13 - DESPESAS CUSTEADAS COM RECEITAS DE ROYALTIES DE EXPLORAÇÃO DO PRÉ-SAL` = list(
    criterio = "fonte_recursos_codigo %in% c('242') & iduso_codigo == 8 & elemento_despesa_codigo %in% c('01', '03', '59')"
  ),
  `14 - DEMAIS DESPESAS COM EDUCAÇÃO` = list(
    criterio = "iduso_codigo == 8 & fonte_recursos_codigo %in% c( '008', '035', '133', '134', '213', '050', '000' ) & elemento_despesa_codigo %in% c('01', '03', '59') & acao_governo_codigo %notin% c ('00SB', '0312', '0E36') "
  ),
  `09b - VAAT po 26298 12 847 5111 00SB 0003` = list(
    criterio = "plano_orcamentario_codigo_po %in% c( '0003') & funcao_governo_codigo == '12'& subfuncao_governo_codigo == '847'& programa_governo_codigo == 5111 & acao_governo_codigo == '00SB' & unidade_orcamentaria_codigo ==  '26298' "
  )
)

# 26298 12 847 5111 00SB 0003

# plano_orcamentario_codigo_po %in% c( '0003'), funcao_governo_codigo == '12'& subfuncao_governo_codigo == '847', programa_governo_codigo == 5111&  acao_governo_codigo == '00SB'& unidade_orcamentaria_codigo ==  '26298' 
```

```{r}


anexo_08 <- agrupar_e_combinar_dados(dados_despesa, criterios_educacao, "ABR/2025REOA08despesas")

dados <- anexo_08 %>% 
  filter(mes_lancamento == "ABR/2025") %>%
  group_by(categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)

datatable(dados) %>%
  formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")


```

```{r}
# dados <- resultado %>% 
#   filter(mes_lancamento == "ABR/2025") %>%
#   group_by(categoria, item_informacao_nome) %>% 
#   summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
#   complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
#   pivot_wider(names_from = item_informacao_nome, values_from = saldo)
# 
# datatable(dados) 
```

```{r}
anexo_08_mde <- agrupar_e_combinar_dados(
  df = dados_despesa,
  criterios = criterios_educacao,
  codigo = "ABR/2025REOA08despesa"
)


complementacao_fundeb <- anexo_08_mde %>% filter(startsWith(categoria, '01'), item_informacao_codigo == 25, mes_lancamento == 'ABR/2025') %>% summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao, na.rm = TRUE)*0.3)


dados_receita %>% filter(startsWith(natureza_receita_codigo_completo , '711')| startsWith(natureza_receita_codigo_completo , '111'), mes_lancamento == 'ABR/2025', item_informacao_codigo == 3) %>% summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao)/1000)

anexo_08_mde %>% filter(!startsWith(categoria, '01'), item_informacao_codigo == 25, mes_lancamento == 'ABR/2025') %>% summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao, na.rm = TRUE)/1000)


resultado <- agrupar_e_combinar_dados(
  df = dados_receita,
  criterios = criterios_rli,
  codigo = "ABR/2025REOA08rli"
)

```

```{r}

datatable( dados_receita %>% filter(item_informacao_codigo == "5", startsWith( natureza_receita_codigo_completo,"111")) %>% group_by(mes_lancamento) %>% summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao)))


rli_transf <- dados_despesa %>% filter( item_informacao_codigo == "56", mes_lancamento == "ABR/2025" ) %>% mutate(transferencia = case_when(
  acao_governo_codigo == "0044" ~ "FPE",
  acao_governo_codigo == "0045" ~ "FPM",
  acao_governo_codigo == "0046" ~ "IPI_repasse",
  acao_governo_codigo == "0C33" ~ "FUNDEB",
  acao_governo_codigo == "00H6" ~ "IOF_repasse",
  acao_governo_codigo == "006M" ~ "ITR_repasse",
  .default = "demais"
  
))%>% group_by(transferencia) %>%  summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao, na.rm = TRUE))


datatable(rli_transf) 
```

```{r}
rli_transf <- dados_despesa %>% filter( item_informacao_codigo == "56" ) %>% mutate(transf = case_when(
  acao_governo_codigo == "0044" ~ "FPE",
  acao_governo_codigo == "0045" ~ "FPM",
  acao_governo_codigo == "0046" ~ "IPI_repasse",
  acao_governo_codigo == "0C33" ~ "FUNDEB",
  acao_governo_codigo == "00H6" ~ "IOF_repasse",
  acao_governo_codigo == "006M" ~ "ITR_repasse",
  .default = "demais"
  
))%>% group_by(transf, mes_lancamento) %>%  summarise(transferencia = sum(saldo_r_item_informacao, na.rm = TRUE))


datatable(rli_transf) %>% 
  formatRound(columns = c( "transferencia"), 2, mark = ".", dec.mark = "," )
rli_mensal <- full_join(dados_receita%>% filter(item_informacao_codigo == "5", startsWith( natureza_receita_codigo_completo,"111")) %>% group_by(mes_lancamento) %>% summarise(receita = sum(saldo_r_item_informacao)) , rli_transf %>% filter(transf != "demais")%>% group_by(mes_lancamento) %>% summarise(transferencia = sum(transferencia)))

rli_mensal <- rli_mensal %>% mutate(rli = (receita - transferencia)*.18)
```

```{r}
criterios_saude <- list(
  
  # ===============================================================================
  # ANEXO 12 - SAÚDE 1 - 2025 - ESTRUTURA COMPLETA COM NÚMEROS DE ORDEM
  # ===============================================================================
  
  # ATENÇÃO BÁSICA - 301
  `01  ASPS - ATENÇÃO BÁSICA - 301` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6)"
  ),
  
  `02  EXCETO ASPS - ATENÇÃO BÁSICA - 301` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %notin% c(6)"
  ),
  
  # 301 - Despesas Correntes
  `03  ___ASPS - 301 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `04  ___EXCETO ASPS - 301 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `05  ______ASPS - 301 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `06  ______EXCETO ASPS - 301 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `07  ______ASPS - 301 - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `08  ______EXCETO ASPS - 301 - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 301 - Despesas de Capital
  `09  ___ASPS - 301 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `10  ___EXCETO ASPS - 301 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `11  ______ASPS - 301 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `12  ______ASPS - 301 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `13  ______EXCETO ASPS - 301 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46') & iduso_codigo %notin% c(6)"
  ),
  
  # ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302
  `14  ASPS - ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6)"
  ),
  
  # 302 - Despesas Correntes
  `15  ___ASPS - 302 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `16  ______ASPS - 302 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `17  ______ASPS - 302 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 302 - Despesas de Capital
  `18  ___ASPS - 302 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `19  ______ASPS - 302 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `20  ______ASPS - 302 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # SUPORTE PROFILÁTICO E TERAPÊUTICO - 303
  `21  ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6)"
  ),
  
  `22  EXCETO ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %notin% c(6)"
  ),
  
  # 303 - Despesas Correntes
  `23  ___ASPS - 303 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `24  ___EXCETO ASPS - 303 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `25  ______ASPS - 303 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `26  ______ASPS - 303 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `27  ______EXCETO ASPS - 303 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 303 - Despesas de Capital
  `28  ___ASPS - 303 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `29  ___EXCETO ASPS - 303 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `30  ______ASPS - 303 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `31  ______ASPS - 303 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `32  ______EXCETO ASPS - 303 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # VIGILÂNCIA SANITÁRIA - 304
  `33  ASPS - VIGILÂNCIA SANITÁRIA - 304` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6)"
  ),
  
  `34  EXCETO ASPS - VIGILÂNCIA SANITÁRIA - 304` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %notin% c(6)"
  ),
  
  # 304 - Despesas Correntes
  `35  ___ASPS - 304 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `36  ___EXCETO ASPS - 304 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `37  ______ASPS - 304 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `38  ______ASPS - 304 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `39  ______EXCETO ASPS - 304 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 304 - Despesas de Capital
  `40  ___ASPS - 304 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `41  ___EXCETO ASPS - 304 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `42  ______ASPS - 304 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `43  ______EXCETO ASPS - 304 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # VIGILÂNCIA EPIDEMIOLÓGICA - 305
  `44  ASPS - VIGILÂNCIA EPIDEMIOLÓGICA - 305` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6)"
  ),
  
  # 305 - Despesas Correntes
  `45  ___ASPS - 305 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `46  ______ASPS - 305 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `47  ______ASPS - 305 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 305 - Despesas de Capital
  `48  ___ASPS - 305 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `49  ______ASPS - 305 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `50  ______ASPS - 305 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # ALIMENTAÇÃO E NUTRIÇÃO - 306
  `51  ASPS - ALIMENTAÇÃO E NUTRIÇÃO - 306` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6)"
  ),
  
  # 306 - Despesas Correntes
  `52  ___ASPS - 306 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `53  ______ASPS - 306 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `54  ______ASPS - 306 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # OUTRAS SUBFUNÇÕES
  `55  ASPS - OUTRAS SUBFUNÇÕES` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6)"
  ),
  
  `56  EXCETO ASPS - OUTRAS SUBFUNÇÕES` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %notin% c(6)"
  ),
  
  # OUTRAS - Despesas Correntes
  `57  ___ASPS - OUTRAS - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `58  ___EXCETO ASPS - OUTRAS - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `59  ______ASPS - OUTRAS - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `60  ______ASPS - OUTRAS - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `61  ______EXCETO ASPS - OUTRAS - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # OUTRAS - Despesas de Capital
  `62  ___ASPS - OUTRAS - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `63  ___EXCETO ASPS - OUTRAS - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `64  ______ASPS - OUTRAS - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `65  ______EXCETO ASPS - OUTRAS - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `66  ______ASPS - OUTRAS - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `67  ______EXCETO ASPS - OUTRAS - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # RESERVA DE CONTINGÊNCIA - 999
  `68  ASPS - RESERVA DE CONTINGÊNCIA - 999` = list(
    criterio = "subfuncao_governo_codigo %in% c('999') & iduso_codigo %in% c(6)"
  ),
  
  `69  EXCETO ASPS - RESERVA DE CONTINGÊNCIA - 999` = list(
    criterio = "subfuncao_governo_codigo %in% c('999') & iduso_codigo %notin% c(6)"
  ),
  
  # OUTRAS LINHAS
  `70  Ações Não Computadas (Inativos e Pensionistas + Ñ Acesso Universal + Outras Ações)` = list(
    criterio = "fonte_recursos_codigo %notin% c('46', '47', '38', '42', '49', '999946') & fonte_recursos_codigo %in% c('490') & grupo_despesa_codigo_grupo %notin% c(2, 6) & acao_governo_codigo %notin% c('0181', '2004', '20YS') & modalidade_aplicacao_codigo %in% c('35', '45', '73', '75', '76', '95', '96') & iduso_codigo %notin% c(6)"
  ),
  
  `71  Conferência (Iduso 6)` = list(
    criterio = "iduso_codigo %in% c(6)"
  ),
  
  `72  Conferência (ASPS e demais despesas)` = list(
    criterio = "iduso_codigo %in% c(6) | iduso_codigo %notin% c(6)"
  ),
  
  `73  Conferência 2 (Iduso 6 sem 42)` = list(
    criterio = "iduso_codigo %in% c(6) & fonte_recursos_codigo %notin% c('42', '008', '035')"
  )
  
)
```

```{r}
anexo_12 <- agrupar_e_combinar_dados(
  df = dados_despesa %>% filter(uo_orgao_superior_codigo == "36000", unidade_orcamentaria_codigo != "74202"  ),
  criterios = criterios_saude,
  codigo = "ABR/2025REOA12saude"
)

anexo_12 <- anexo_12 %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)

DT_anexo_12 <- anexo_12 %>% 
  filter(mes_lancamento == "ABR/2025") %>%
  group_by(ordem, nome, categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)



datatable(DT_anexo_12)%>% 
  formatRound(columns = c( 3:8), 2, mark = ".", dec.mark = "," )

DT_anexo_12 %>% filter(ordem %in% c('02', 22, 34, 56, 69)) %>% group_by(ordem, nome) %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))

DT_anexo_12 %>% filter(ordem %in% c('02', 22, 34, 56, 69))  %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))

DT_anexo_12 %>% filter(nome %in% c('ASPS - ATENÇÃO BÁSICA - 301','ASPS - ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302', 'ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303', 'ASPS - VIGILÂNCIA SANITÁRIA - 304', 'ASPS - VIGILÂNCIA EPIDEMIOLÓGICA - 305', 'ASPS - ALIMENTAÇÃO E NUTRIÇÃO - 306', 'ASPS - OUTRAS SUBFUNÇÕES','ASPS - RESERVA DE CONTINGÊNCIA - 999' )) %>% group_by(ordem, nome) %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))


DT_anexo_12 %>% filter(str_detect (nome,  'ASPS - ATENÇÃO BÁSICA - 301|ASPS - ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302|ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303|ASPS - VIGILÂNCIA SANITÁRIA - 304|ASPS - VIGILÂNCIA EPIDEMIOLÓGICA - 305|ASPS - ALIMENTAÇÃO E NUTRIÇÃO - 306|ASPS - OUTRAS SUBFUNÇÕES|ASPS - RESERVA DE CONTINGÊNCIA - 999' )) %>% group_by(ordem, nome) %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))
```
