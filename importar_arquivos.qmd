---
title: "Importar Planilhas"
editor: visual
lang: "pt"
format:
  # docx: default
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
execute:
  warning: false
  message: false
---

```{r funcoes}
#| warning: false
#| message: false
#| error: true
#| include: false


library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(plotly)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(DT)
library(stringr)
library(scales)

# https://stackoverflow.com/questions/56997814/how-to-use-vector-of-column-names-as-input-into-dplyrgroup-by

# funcao para pivotar a tabela a partir dos itens de informacao

tabela_pivotada <- function(df, grupo){
  itens <- df$item_informacao_nome %>% unique() %>% na.omit()
  
  df <- df  %>% group_by(!!!syms(grupo))  %>% pivot_wider(names_from = item_informacao_nome, values_from = saldo_r_item_informacao) %>% summarise_at(itens, sum, na.rm = TRUE)
  
  return(df)
  
}


# funcao para formatar a tabela

dt_formatada <- function(df, grupo){
  datatable(df%>% adorn_totals("row"), rownames = FALSE,
            extensions = 'Buttons',
            options = list(
            lengthMenu = c(5, 10, 25, 50, 100),
            dom = 'Bfrtip',
            buttons = list(
              'excel'
            )
          ))%>% formatRound(setdiff( df %>% colnames(), grupo), 2, mark = ".", dec.mark = "," )%>% 
    DT::formatStyle(columns = colnames(.$x$data), fontSize = '75%')
} 




# Função para desmembrar o código
desmembrar_codigo <- function(codigo) {
  # Validar o formato do código: MMM/AAAXXX[A|T]##[A-Za-z0-9]{0,10}
  if (!str_detect(codigo, "^[A-Z]{3}/\\d{4}[A-Za-z0-9]{3}[AT]\\d{2}[A-Za-z0-9]{0,10}$")) {
    stop("Código inválido. Deve seguir o formato: MMM/AAAXXX[A|T]##[A-Za-z0-9]{0,10} (mes_lancamento: 3 letras/mês e 4 dígitos/ano, demonstrativo: exatamente 3 caracteres alfanuméricos, anexo: A ou T + 2 dígitos, parte: até 10 caracteres alfanuméricos)")
  }
  
  # Extrair os componentes
  mes_lancamento <- str_sub(codigo, 1, 8)  # Ex.: "MAI/2025"
  demonstrativo <- str_sub(codigo, 9, 11)  # Ex.: "RGF" ou "REO"
  anexo <- str_sub(codigo, 12, 14)         # Ex.: "A08"
  parte <- str_sub(codigo, 15, -1)         # Ex.: "despesa" ou "" se não houver
  
  # Validar mes_lancamento (formato MMM/AAAA)
  if (!str_detect(mes_lancamento, "^[A-Z]{3}/\\d{4}$")) {
    stop("Formato de mes_lancamento inválido. Deve ser MMM/AAAA (ex.: MAI/2025)")
  }
  
  # Mapear meses para validação
  meses_validos <- c("JAN", "FEV", "MAR", "MAI", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ")
  mes_letras <- str_sub(mes_lancamento, 1, 3)
  if (!(mes_letras %in% meses_validos)) {
    stop("Mês inválido em mes_lancamento: ", mes_letras)
  }
  
  # Validar demonstrativo (exatamente 3 caracteres alfanuméricos)
  if (!str_detect(demonstrativo, "^[A-Za-z0-9]{3}$")) {
    stop("Formato de demonstrativo inválido. Deve ter exatamente 3 caracteres alfanuméricos (ex.: RGF, REO)")
  }
  
  # Validar anexo (deve começar com A ou T e ter 2 dígitos)
  if (!str_detect(anexo, "^[AT]\\d{2}$")) {
    stop("Formato de anexo inválido. Deve ser A ou T seguido por 2 dígitos (ex.: A08)")
  }
  
  # Definir parte como NA se vazio
  parte <- ifelse(parte == "", NA_character_, parte)
  
  # Retornar os parâmetros
  list(
    mes_lancamento = mes_lancamento,
    demonstrativo = demonstrativo,
    anexo = anexo,
    parte = parte
  )
}



# Função para agrupar, combinar e adicionar colunas com base no código
agrupar_e_combinar_dados <- function(df, criterios, codigo) {
  # Definir o operador notin
  `%notin%` <- Negate(`%in%`)
  
  # Desmembrar o código
  params <- desmembrar_codigo(codigo)
  
  # Filtrar o data frame de entrada com base em mes_lancamento, se a coluna existir
  if ("mes_lancamento" %in% colnames(df)) {
    df <- df %>% filter(mes_lancamento == params$mes_lancamento)
  } else {
    warning("Coluna 'mes_lancamento' não encontrada no data frame. Ignorando filtro por mes.")
  }
  
  # Função para processar cada categoria
  processar_categoria <- function(categoria, crit) {
    # Avaliar a string da condição usando eval(parse())
    condicao_expr <- eval(parse(text = crit$criterio), envir = df)
    
    df %>%
      filter(condicao_expr) %>%
      group_by(mes_lancamento, item_informacao_nome, item_informacao_codigo) %>%
      summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
      mutate(
        categoria = categoria,
        mes_lancamento = params$mes_lancamento,
        demonstrativo = params$demonstrativo,
        anexo = params$anexo,
        parte = params$parte
      ) %>%
      # Reordenar item_informacao_nome com base em item_informacao_codigo
      mutate(item_informacao_nome = fct_reorder(item_informacao_nome, item_informacao_codigo))
  }
  
  # Aplicar os critérios e combinar os resultados
  resultado <- map_df(names(criterios), ~ processar_categoria(.x, criterios[[.x]]))
  
  # Nomear o data frame com o código
  assign(codigo, resultado, envir = .GlobalEnv)
  
  return(resultado)
}

# opcoes globais

`%notin%` <- Negate(`%in%`)

myNumFmt <- as.fmt(digits=2, big.mark=".")

options(scipen = 999)

options(DT.options = 
          list(
            pageLength = 20,
            lengthMenu = c(5, 10, 25, 50, 100),
            language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json')
            )
        )
# https://rstudio.github.io/DT/004-i18n.html
# https://rstudio.github.io/DT/options.html



```

```{r dados_despesa }
#| include: false
# selecionar e ler todos os arquivos com dados da despesa

arq_despesa <- list.files( pattern='fechado_despesa_parte')


dados_despesa <- map_df(arq_despesa,read_excel) %>% clean_names()

# criar as variaveis tipo de modalidade, refinanciamento e poder
dados_despesa <- dados_despesa %>%  
    mutate (
      tipo_modalidade =
        ifelse(modalidade_aplicacao_codigo == 91, "intra", "exceto intra"),
      refinanciamento =
        case_when(
        grupo_despesa_codigo_grupo == 6 &
          elemento_despesa_codigo %in% c(76,77) &
          subfuncao_governo_codigo %in% c(841, 842, 843, 844, 846) &
          fonte_recursos_codigo == "443"  ~ "sim",
        !(grupo_despesa_codigo_grupo == 6 &
          elemento_despesa_codigo %in% c(76,77) &
          subfuncao_governo_codigo %in% c(841, 842, 843, 844, 846) &
          fonte_recursos_codigo == "443" )  ~ "nao",
        TRUE ~ "escape"),
      poder = case_when(
        orgao_uge_orgao_maximo_codigo %in% c(59000)  ~ "MINISTÉRIO PÚBLICO DA UNIÃO",
        orgao_uge_orgao_maximo_codigo %in% c(29000) ~ "DEFENSORIA PÚBLICA",
        TRUE ~ orgao_uge_poder_nome
      )
        
      )





```

\

```{r  demais_dados}
# importar dados da receita

arq_receita<- list.files( pattern='receita_parte')


dados_receita <- map_df(arq_receita,read_excel) %>% clean_names()

#dados_receita <- read_excel("dados_2024_receita.xlsx") %>% clean_names()


# criar as variaveis tipo de modalidade e refinanciamento

dados_receita <- dados_receita %>% 
  mutate(tipo_modalidade =
           ifelse(nre1_categoria_economica_codigo %in% c(7,8), "intra", "exceto intra"),
         refinanciamento = 
           ifelse(natureza_receita_codigo_completo %in% c(81110201,21110201,21210201), "sim", "nao")
    
  )




dados_rp_anexo_07 <- read_excel("dados_2024_rp_anexo_07.xlsx") %>% clean_names()


dados_rp_anexo_07 <- dados_rp_anexo_07 %>%  
    mutate (
      tipo_modalidade =
        ifelse(modalidade_aplicacao_codigo == 91, "intra", "exceto intra"),
      poder = case_when(
        orgao_uge_orgao_maximo_codigo %in% c(59000)  ~ "MINISTÉRIO PÚBLICO DA UNIÃO",
        orgao_uge_orgao_maximo_codigo %in% c(29000) ~ "DEFENSORIA PÚBLICA",
        TRUE ~ orgao_uge_poder_nome
      )
        
      )


# importar os dados de RP do anexo 12

dados_rp_anexo_12 <- read_excel("dados_2024_rp_anexo_12.xlsx") %>% clean_names()

# importar as contas contabeis para a tabela 04

dados_tabela_04 <- read_excel("dados_2024_conta_contabil_tabela_04.xlsx") %>% clean_names()

# importar as tabelas referentes a metodologia

filtros_metodologia  <- read_excel("filtros.xlsx", sheet = "metodologia") 

atributos_metodologia <- read_excel("filtros.xlsx", sheet = "metodologia")

dados_rp_anexo_08 <- read_excel("dados_2025_rp_anexo_08.xlsx") %>% clean_names()


```

```{r rli_linhas}
#| warning: false
#| message: false
#| error: true
#| eval: false
criterios_rli <- list(
  `II` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111101') & !natureza_receita_codigo_completo %in% c('11110102', '11110103', '11110107', '11110104', '11110108')"
  ),
  `II-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11110102'"
  ),
  `II-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11110103'"
  ),
  `II-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11110107', '11110104', '11110108')"
  ),
  `II-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111101')"
  ),
  `IE` = list(
    criterio = "natureza_receita_codigo_completo == '11110201'"
  ),
  `IE-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11110202'"
  ),
  `IE-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11110203'"
  ),
  `IE-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11110207', '11110208')"
  ),
  `IE-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111102')"
  ),
  `IR` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '1113') & !startsWith(natureza_receita_codigo_completo, '111303')"
  ),
  `IR-MULTAS` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111303') & !natureza_receita_codigo_completo %in% c('11130313', '11130323', '11130314', '11130324')"
  ),
  `IR-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11130313', '11130323')"
  ),
  `IR-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11130314', '11130324')"
  ),
  `IR-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '1113')"
  ),
  `ITR` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '11120') & !natureza_receita_codigo_completo %in% c('11200102', '11200422', '11200103', '11200423', '11200104', '11200424')"
  ),
  `ITR-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo %in% c('111200102', '11200422')"
  ),
  `ITR-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('111200103', '11200423')"
  ),
  `ITR-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('111200104', '11200424')"
  ),
  `ITR-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '11120')"
  ),
  `IPI` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '11140') & !natureza_receita_codigo_completo %in% c('11401102', '1140152', '11401103', '1140153', '11401104', '1140154')"
  ),
  `IPI-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11401102', '1140152')"
  ),
  `IPI-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11401103', '1140153')"
  ),
  `IPI-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11401104', '1140154')"
  ),
  `IPI-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '1140')"
  ),
  `IOF` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111502') & !natureza_receita_codigo_completo %in% c('11150202', '11150203', '11150204', '11150207')"
  ),
  `IOF-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11150202'"
  ),
  `IOF-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11150203'"
  ),
  `IOF-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11150204', '11150207')"
  ),
  `IOF-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111502')"
  ),
  `IOF-OURO` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111501') & !natureza_receita_codigo_completo %in% c('11150102', '11150103', '11150104')"
  ),
  `IOF-OURO-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo == '11150102'"
  ),
  `IOF-OURO-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11150103'"
  ),
  `IOF-OURO-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo == '11150104'"
  ),
  `IOF-OURO-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111501')"
  ),
  `OUTROS-IMPOSTOS` = list(
    criterio = "(startsWith(natureza_receita_codigo_completo, '111901') | startsWith(natureza_receita_codigo_completo, '111999') | startsWith(natureza_receita_codigo_completo, '1117') | startsWith(natureza_receita_codigo_completo, '1116')) & !natureza_receita_codigo_completo %in% c('11190112', '11199902', '11190113', '11199903', '11190114', '11199904')"
  ),
  `OUTROS-IMPOSTOS-MULTAS` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11190112', '11199902')"
  ),
  `OUTROS-IMPOSTOS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11190113', '11199903')"
  ),
  `OUTROS-IMPOSTOS-MULTAS-DIVIDA` = list(
    criterio = "natureza_receita_codigo_completo %in% c('11190114', '11199904')"
  ),
  `OUTROS-IMPOSTOS-DEDUCOES` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111901') | startsWith(natureza_receita_codigo_completo, '111999') | startsWith(natureza_receita_codigo_completo, '1117') | startsWith(natureza_receita_codigo_completo, '1116')"
  ),
  `CONFERENCIA-RECEITA` = list(
    criterio = "startsWith(natureza_receita_codigo_completo, '111')"
  )
)

rli <- agrupar_e_combinar_dados(dados_receita, criterios_rli, "MAI/2025REOA08rli")

dados <- rli %>% 
  filter(mes_lancamento == "MAI/2025") %>%
  group_by(categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)

datatable(dados) %>%
  formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")
```

```{r despesas_mde}
#| warning: false
#| message: false
#| error: true
#| include: false
library(dplyr)
library(purrr)
library(forcats)
library(stringr)



# Definir a lista de critérios
criterios_educacao <- list(
  `08 - COMPLEMENTAÇÃO DA UNIÃO - VAAT` = list(
    criterio = "acao_governo_codigo %in% c('00SB', '0E36') & fonte_recursos_codigo %notin% c('133', '134', '213', '008', '035', '212') & plano_orcamentario_codigo_po == '0001'"
  ),
  `09 - COMPLEMENTAÇÃO DA UNIÃO - VAAT` = list(
    criterio = "acao_governo_codigo %in% c('00SB', '0E36') & fonte_recursos_codigo %notin% c('133', '134', '213', '008', '035', '212') & plano_orcamentario_codigo_po %in% c('0002')"
  ),
  `01 - COMPLEMENTAÇÃO DA UNIÃO AO FUNDEB` = list(
    criterio = "acao_governo_codigo %in% c('00SB', '0E36')"
  ),
  `03 - EDUCAÇÃO BÁSICA` = list(
    criterio = "fonte_recursos_codigo %notin% c('008', '035', '133', '134', '213', '242') & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & subfuncao_governo_codigo == '368'"
  ),
  `04 - ENSINO SUPERIOR` = list(
    criterio = "fonte_recursos_codigo %notin% c(157, 175, 193, 109, 134, 181) & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & subfuncao_governo_codigo %in% c('364')"
  ),
  `05 - ENSINO PROFISSIONAL NÃO INTEGRADO AO ENSINO REGULAR` = list(
    criterio = "fonte_recursos_codigo %notin% c('008', '035', '133', '134') & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & subfuncao_governo_codigo == '363'"
  ),
  `06 - OUTRAS` = list(
    criterio = "fonte_recursos_codigo %notin% c('008', '035', '133', '134') & iduso_codigo == 8 & elemento_despesa_codigo %notin% c('01', '03', '59') & !subfuncao_governo_codigo %in% c('363', '364',  '368') & acao_governo_codigo %notin% c ('00SB', '0E36')"
  ),
  `11 - DESPESAS CUSTEADAS COM A CONTRIBUIÇÃO SOCIAL DO SALÁRIO-EDUCAÇÃO` = list(
    criterio = "fonte_recursos_codigo %in% c('133', '134', '213', '008', '035', '212') & iduso_codigo == 8 & acao_governo_codigo %notin% c('00SB', '0E36')"
  ),
  `12 - DESPESAS COM O FUNDO CONSTITUCIONAL DO DISTRITO FEDERAL - FCDF` = list(
    criterio = "acao_governo_codigo %in% c('0312') & fonte_recursos_codigo %notin% c('133', '134', '213', '008', '035', '212')"
  ),
  `13 - DESPESAS CUSTEADAS COM RECEITAS DE ROYALTIES DE EXPLORAÇÃO DO PRÉ-SAL` = list(
    criterio = "fonte_recursos_codigo %in% c('242') & iduso_codigo == 8 & elemento_despesa_codigo %in% c('01', '03', '59')"
  ),
  `14 - DEMAIS DESPESAS COM EDUCAÇÃO` = list(
    criterio = "iduso_codigo == 8 & fonte_recursos_codigo %in% c( '008', '035', '133', '134', '213', '050', '000' ) & elemento_despesa_codigo %in% c('01', '03', '59') & acao_governo_codigo %notin% c ('00SB', '0312', '0E36') "
  ),
  `09b - VAAT po 26298 12 847 5111 00SB 0003` = list(
    criterio = "plano_orcamentario_codigo_po %in% c( '0003') & funcao_governo_codigo == '12'& subfuncao_governo_codigo == '847'& programa_governo_codigo == 5111 & acao_governo_codigo == '00SB' & unidade_orcamentaria_codigo ==  '26298' "
  )
)

# 26298 12 847 5111 00SB 0003

# plano_orcamentario_codigo_po %in% c( '0003'), funcao_governo_codigo == '12'& subfuncao_governo_codigo == '847', programa_governo_codigo == 5111&  acao_governo_codigo == '00SB'& unidade_orcamentaria_codigo ==  '26298' 
```

```{r dt_mde}


anexo_08 <- agrupar_e_combinar_dados(dados_despesa, criterios_educacao, "MAI/2025REOA08despesas")

anexo_08 <- anexo_08 %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)

dados <- anexo_08 %>% 
  filter(mes_lancamento == "MAI/2025") %>%
  group_by(categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)

datatable(dados) %>%
  formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")


datatable (dados_rp_anexo_08%>%
  filter(mes_lancamento == 'MAI/2025',  !elemento_despesa_codigo %in% c('01', '03') &
         ((fonte_recursos_codigo %in% c('000', '012', '00' , '12') & 
           (iduso_codigo == 8 | lei_calmon_s_n == 'SIM')) |
          (ne_c_cor_ano_emissao >= 2020 & 
           !fonte_recursos_codigo %in% c('133', '134', '213', '08', '13', '93') & 
           iduso_codigo == 8)) )%>% group_by(item_informacao_nome) %>% summarise(saldo = sum(saldo_r_item_informacao, na.rm =  TRUE)))

despesa_mde_rp <- dados_rp_anexo_08%>%
  filter(mes_lancamento == 'MAI/2025',  !elemento_despesa_codigo %in% c('01', '03') &
         ((fonte_recursos_codigo %in% c('000', '012', '00' , '12') & 
           (iduso_codigo == 8 | lei_calmon_s_n == 'SIM')) |
          (ne_c_cor_ano_emissao >= 2020 & 
           !fonte_recursos_codigo %in% c('133', '134', '213', '08', '13', '93') & 
           iduso_codigo == 8)) )%>%  summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao, na.rm =  TRUE))

```

```{r minimo_mde }
#| warning: false
#| message: false
#| error: true

dados_receita %>% filter(startsWith(natureza_receita_codigo_completo , '711')| startsWith(natureza_receita_codigo_completo , '111'), mes_lancamento == 'MAI/2025', item_informacao_codigo == 3) %>% summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao))

datatable( dados_receita %>% filter(item_informacao_codigo == "5",startsWith(natureza_receita_codigo_completo , '711')| startsWith( natureza_receita_codigo_completo,"111")|startsWith(natureza_receita_codigo_completo , '711')) %>% group_by(mes_lancamento) %>% summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao)))


rli_transf <- dados_despesa %>% filter( item_informacao_codigo == "56", mes_lancamento == "MAI/2025" ) %>% mutate(transferencia = case_when(
  acao_governo_codigo == "0044" ~ "FPE",
  acao_governo_codigo == "0045" ~ "FPM",
  acao_governo_codigo == "0046" ~ "IPI_repasse",
  acao_governo_codigo == "0C33" ~ "FUNDEB",
  acao_governo_codigo == "00H6" ~ "IOF_repasse",
  acao_governo_codigo == "006M" ~ "ITR_repasse",
  .default = "demais"
  
))%>% group_by(transferencia) %>%  summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao, na.rm = TRUE))


datatable(rli_transf) 


rli_transf <- dados_despesa %>% filter( item_informacao_codigo == "56" ) %>% mutate(transf = case_when(
  acao_governo_codigo == "0044" ~ "FPE",
  acao_governo_codigo == "0045" ~ "FPM",
  acao_governo_codigo == "0046" ~ "IPI_repasse",
  acao_governo_codigo == "0C33" ~ "FUNDEB",
  acao_governo_codigo == "00H6" ~ "IOF_repasse",
  acao_governo_codigo == "006M" ~ "ITR_repasse",
  .default = "demais"
  
))%>% group_by(transf, mes_lancamento) %>%  summarise(transferencia = sum(saldo_r_item_informacao, na.rm = TRUE))


datatable(rli_transf) %>% 
  formatRound(columns = c( "transferencia"), 2, mark = ".", dec.mark = "," )
rli_mensal <- full_join(dados_receita%>% filter(item_informacao_codigo == "5",startsWith(natureza_receita_codigo_completo , '711')| startsWith( natureza_receita_codigo_completo,"111")) %>% group_by(mes_lancamento) %>% summarise(receita = sum(saldo_r_item_informacao)) , rli_transf %>% filter(transf != "demais")%>% group_by(mes_lancamento) %>% summarise(transferencia = sum(transferencia)))

rli_mensal <- rli_mensal  %>% mutate(rli = (receita - transferencia)*.18)

rli_maio <- rli_mensal %>% filter(mes_lancamento == "MAI/2025")  %>% summarise(minimo = sum(rli))


despesa_mde <- anexo_08 %>% filter(item_informacao_codigo == 25, ordem %in% c("02", "03", "04", "05", "06")) %>% summarise(saldo_r_item_informacao= sum(saldo_r_item_informacao))



complementacao_fundeb <- dados_despesa %>% filter(item_informacao_codigo == 25, mes_lancamento == "MAI/2025", fonte_recursos_codigo %in% c('000', '008' ,'014', '130'), acao_governo_codigo %in% c ('0E36', '00SB' ) )  %>% summarise(saldo_r_item_informacao = sum(saldo_r_item_informacao)*0.3)


((complementacao_fundeb$saldo_r_item_informacao + despesa_mde$saldo_r_item_informacao)/rli_maio$minimo*100)

```

```{r saude_despesas}
#| warning: false
#| message: false
#| error: true
#| include: false

criterios_saude <- list(
  
  # ===============================================================================
  # ANEXO 12 - SAÚDE 1 - 2025 - ESTRUTURA COMPLETA COM NÚMEROS DE ORDEM
  # ===============================================================================
  
  # ATENÇÃO BÁSICA - 301
  `01  ASPS - ATENÇÃO BÁSICA - 301` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6)"
  ),
  
  `02  EXCETO ASPS - ATENÇÃO BÁSICA - 301` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %notin% c(6)"
  ),
  
  # 301 - Despesas Correntes
  `03  ___ASPS - 301 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `04  ___EXCETO ASPS - 301 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `05  ______ASPS - 301 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `06  ______EXCETO ASPS - 301 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `07  ______ASPS - 301 - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `08  ______EXCETO ASPS - 301 - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 301 - Despesas de Capital
  `09  ___ASPS - 301 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `10  ___EXCETO ASPS - 301 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `11  ______ASPS - 301 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `12  ______ASPS - 301 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `13  ______EXCETO ASPS - 301 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('301') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46') & iduso_codigo %notin% c(6)"
  ),
  
  # ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302
  `14  ASPS - ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6)"
  ),
  
  # 302 - Despesas Correntes
  `15  ___ASPS - 302 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `16  ______ASPS - 302 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `17  ______ASPS - 302 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 302 - Despesas de Capital
  `18  ___ASPS - 302 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `19  ______ASPS - 302 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `20  ______ASPS - 302 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('302') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # SUPORTE PROFILÁTICO E TERAPÊUTICO - 303
  `21  ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6)"
  ),
  
  `22  EXCETO ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %notin% c(6)"
  ),
  
  # 303 - Despesas Correntes
  `23  ___ASPS - 303 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `24  ___EXCETO ASPS - 303 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `25  ______ASPS - 303 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `26  ______ASPS - 303 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `27  ______EXCETO ASPS - 303 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 303 - Despesas de Capital
  `28  ___ASPS - 303 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `29  ___EXCETO ASPS - 303 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `30  ______ASPS - 303 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `31  ______ASPS - 303 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `32  ______EXCETO ASPS - 303 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('303') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # VIGILÂNCIA SANITÁRIA - 304
  `33  ASPS - VIGILÂNCIA SANITÁRIA - 304` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6)"
  ),
  
  `34  EXCETO ASPS - VIGILÂNCIA SANITÁRIA - 304` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %notin% c(6)"
  ),
  
  # 304 - Despesas Correntes
  `35  ___ASPS - 304 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `36  ___EXCETO ASPS - 304 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `37  ______ASPS - 304 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `38  ______ASPS - 304 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `39  ______EXCETO ASPS - 304 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 304 - Despesas de Capital
  `40  ___ASPS - 304 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `41  ___EXCETO ASPS - 304 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `42  ______ASPS - 304 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `43  ______EXCETO ASPS - 304 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('304') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # VIGILÂNCIA EPIDEMIOLÓGICA - 305
  `44  ASPS - VIGILÂNCIA EPIDEMIOLÓGICA - 305` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6)"
  ),
  
  # 305 - Despesas Correntes
  `45  ___ASPS - 305 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `46  ______ASPS - 305 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `47  ______ASPS - 305 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # 305 - Despesas de Capital
  `48  ___ASPS - 305 - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `49  ______ASPS - 305 - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `50  ______ASPS - 305 - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('305') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # ALIMENTAÇÃO E NUTRIÇÃO - 306
  `51  ASPS - ALIMENTAÇÃO E NUTRIÇÃO - 306` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6)"
  ),
  
  # 306 - Despesas Correntes
  `52  ___ASPS - 306 - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `53  ______ASPS - 306 - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `54  ______ASPS - 306 - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %in% c('306') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # OUTRAS SUBFUNÇÕES
  `55  ASPS - OUTRAS SUBFUNÇÕES` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6)"
  ),
  
  `56  EXCETO ASPS - OUTRAS SUBFUNÇÕES` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %notin% c(6)"
  ),
  
  # OUTRAS - Despesas Correntes
  `57  ___ASPS - OUTRAS - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3)"
  ),
  
  `58  ___EXCETO ASPS - OUTRAS - Despesas Correntes` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6)"
  ),
  
  `59  ______ASPS - OUTRAS - Despesas Correntes - Transferências` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `60  ______ASPS - OUTRAS - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `61  ______EXCETO ASPS - OUTRAS - Despesas Correntes - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(1, 2, 3) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # OUTRAS - Despesas de Capital
  `62  ___ASPS - OUTRAS - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6)"
  ),
  
  `63  ___EXCETO ASPS - OUTRAS - Despesas de Capital` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6)"
  ),
  
  `64  ______ASPS - OUTRAS - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `65  ______EXCETO ASPS - OUTRAS - Despesas de Capital - Transferências` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %in% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `66  ______ASPS - OUTRAS - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & iduso_codigo %in% c(6) & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  `67  ______EXCETO ASPS - OUTRAS - Despesas de Capital - Demais Despesas` = list(
    criterio = "subfuncao_governo_codigo %notin% c('306', '305', '304', '303', '302', '301', '999') & grupo_despesa_codigo_grupo %in% c(4, 5, 6) & iduso_codigo %notin% c(6) & modalidade_aplicacao_codigo %notin% c('30', '31', '32', '35', '36', '40', '41', '42', '45', '46')"
  ),
  
  # RESERVA DE CONTINGÊNCIA - 999
  `68  ASPS - RESERVA DE CONTINGÊNCIA - 999` = list(
    criterio = "subfuncao_governo_codigo %in% c('999') & iduso_codigo %in% c(6)"
  ),
  
  `69  EXCETO ASPS - RESERVA DE CONTINGÊNCIA - 999` = list(
    criterio = "subfuncao_governo_codigo %in% c('999') & iduso_codigo %notin% c(6)"
  ),
  
  # OUTRAS LINHAS
  `70  Ações Não Computadas (Inativos e Pensionistas + Ñ Acesso Universal + Outras Ações)` = list(
    criterio = "fonte_recursos_codigo %notin% c('46', '47', '38', '42', '49', '999946') & fonte_recursos_codigo %in% c('490') & grupo_despesa_codigo_grupo %notin% c(2, 6) & acao_governo_codigo %notin% c('0181', '2004', '20YS') & modalidade_aplicacao_codigo %in% c('35', '45', '73', '75', '76', '95', '96') & iduso_codigo %notin% c(6)"
  ),
  
  `71  Conferência (Iduso 6)` = list(
    criterio = "iduso_codigo %in% c(6)"
  ),
  
  `72  Conferência (ASPS e demais despesas)` = list(
    criterio = "iduso_codigo %in% c(6) | iduso_codigo %notin% c(6)"
  ),
  
  `73  Conferência 2 (Iduso 6 sem 42)` = list(
    criterio = "iduso_codigo %in% c(6) & fonte_recursos_codigo %notin% c('42', '008', '035')"
  )
  
)
```

```{r anexo_12}
#| warning: false
#| message: false
#| error: true
anexo_12 <- agrupar_e_combinar_dados(
  df = dados_despesa %>% filter(uo_orgao_superior_codigo == "36000", unidade_orcamentaria_codigo != "74202"  ),
  criterios = criterios_saude,
  codigo = "MAI/2025REOA12saude"
)

anexo_12 <- anexo_12 %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)

DT_anexo_12 <- anexo_12 %>% 
  filter(mes_lancamento == "MAI/2025") %>%
  group_by(ordem, nome, categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)



datatable(DT_anexo_12)%>% 
  formatRound(columns = c( 3:8), 2, mark = ".", dec.mark = "," )

DT_anexo_12 %>% filter(ordem %in% c('02', 22, 34, 56, 69)) %>% group_by(ordem, nome) %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))

DT_anexo_12 %>% filter(ordem %in% c('02', 22, 34, 56, 69))  %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))

DT_anexo_12 %>% filter(nome %in% c('ASPS - ATENÇÃO BÁSICA - 301','ASPS - ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302', 'ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303', 'ASPS - VIGILÂNCIA SANITÁRIA - 304', 'ASPS - VIGILÂNCIA EPIDEMIOLÓGICA - 305', 'ASPS - ALIMENTAÇÃO E NUTRIÇÃO - 306', 'ASPS - OUTRAS SUBFUNÇÕES','ASPS - RESERVA DE CONTINGÊNCIA - 999' )) %>% group_by(ordem, nome) %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))


DT_anexo_12 %>% filter(str_detect (nome,  'ASPS - ATENÇÃO BÁSICA - 301|ASPS - ASSISTÊNCIA HOSPITALAR E AMBULATORIAL - 302|ASPS - SUPORTE PROFILÁTICO E TERAPÊUTICO - 303|ASPS - VIGILÂNCIA SANITÁRIA - 304|ASPS - VIGILÂNCIA EPIDEMIOLÓGICA - 305|ASPS - ALIMENTAÇÃO E NUTRIÇÃO - 306|ASPS - OUTRAS SUBFUNÇÕES|ASPS - RESERVA DE CONTINGÊNCIA - 999' )) %>% group_by(ordem, nome) %>% summarise(`DOTACAO ATUALIZADA` = sum(`DOTACAO ATUALIZADA`, na.rm = TRUE))
```

```{r tabela_01}
#| warning: false
#| message: false
#| error: true
#| include: false
#| include: false


# ===============================================================================
# OBSERVAÇÕES IMPORTANTES SOBRE TABELA 1A COLUNAS
# ===============================================================================

# ITEM INFORMAÇÃO:
# - "PREVISAO ATUALIZADA DA RECEITA": Para previsões orçamentárias
# - "RECEITA ORCAMENTARIA (LIQUIDA)": Para receitas realizadas

# FONTES DE RECURSOS:
# - 000: RECURSOS ORDINÁRIOS
# - 023: RECURSOS LIVRES DA UNIÃO

# FONTES DETALHAMENTO:
# - 980001: Fonte detalhada específica
# - 739010: Fonte detalhada específica

# ESFERA ORÇAMENTÁRIA:
# - 1: ORÇAMENTO FISCAL

# NATUREZAS DE RECEITA ESPECÍFICAS:
# As naturezas listadas incluem diferentes tipos de receitas:
# - 1210xxx: Receitas correntes específicas
# - 7210xxx: Receitas intra-orçamentárias

# PERÍODOS DE ANÁLISE:
# - "no mês": Apenas o mês atual de lançamento
# - "até o mês": Acumulado desde o início do exercício até o mês atual
# - Filtro temporal: mes_lancamento para controle do período

# MOVIMENTAÇÃO LÍQUIDA:
# - O critério considera apenas valores líquidos (após deduções)
# - Importante para análise de arrecadação efetiva

criterios_receitas_tabela1a <- list(
  
  # PREVISÃO ATUALIZADA (a)
  `01  PREVISÃO ATUALIZADA (a)` = list(
    criterio = "item_informacao_nome %in% c('PREVISAO ATUALIZADA DA RECEITA') & natureza_receita_codigo_completo %in% c('1210011', '1210112', '1210113', '1210211', '1210212', '1210213', '1210511', '1210661', '1210711', '1210721', '1210741', '1210761', '1210911', '1210912', '1210913', '1210161', '1210131', '1210141', '1210143', '1210161', '1210163', '1210181', '1210183', '1210421', '1210431', '1210511', '1210621', '1210751', '1210811', '1210171', '7210411', '7210911') & fonte_recursos_codigo %in% c('000', '023') & esfera_orcamentaria_codigo %in% c(1)"
  ),
  
  # RECEITAS REALIZADAS no mês
  `02  RECEITAS REALIZADAS no mês` = list(
    criterio = "item_informacao_nome %in% c('RECEITA ORCAMENTARIA (LIQUIDA)') & fonte_recursos_codigo %in% c('000', '023') & endsWith(fonte_recursos_detalhada_codigo,  c('980001', '739010')) & mes_lancamento == format(Sys.Date(), '%b/%Y')"
  ),
  
  # RECEITAS REALIZADAS até o mês
  `03  RECEITAS REALIZADAS até o mês` = list(
    criterio = "item_informacao_nome %in% c('RECEITA ORCAMENTARIA (LIQUIDA)') & endsWith(fonte_recursos_detalhada_codigo,  c('980001', '739010')) & fonte_recursos_codigo %in% c('000', '023') & mes_lancamento <= format(Sys.Date(), '%b/%Y')"
  )
)
```

```{r}
#| warning: false
#| message: false
#| error: true
#| include: false
#| include: false

# ===============================================================================
# OBSERVAÇÕES IMPORTANTES SOBRE SEGURIDADE SOCIAL
# ===============================================================================

# ESFERAS ORÇAMENTÁRIAS:
# - 2: ORÇAMENTO DE SEGURIDADE SOCIAL

# FUNÇÕES GOVERNO ESPECÍFICAS:
# - 08: ASSISTÊNCIA SOCIAL

# UNIDADES ORÇAMENTÁRIAS RGPS:
# - 33904: FUNDO DO REGIME GERAL DA PREVIDÊNCIA SOCIAL
# - 40904: FUNDO DO REGIME GERAL DA PREVIDÊNCIA SOCIAL- FRGPS
# - 55902: FUNDO DO REGIME GERAL DA PREVIDÊNCIA SOCIAL-FRGPS  
# - 25917: FUNDO DO REGIME GERAL DE PREVIDÊNCIA SOCIAL

# AÇÕES GOVERNO ESPECÍFICAS:
# - 0581: ABONO SALARIAL
# - 00H4: SEGURO DESEMPREGO
# - 0583: PAGAMENTO DO SEGURO-DESEMPREGO
# - 0585: PAGAMENTO DO SEGURO-DESEMPREGO AO PESCADOR ARTESANAL
# - 0653: PAGAMENTO DO SEGURO-DESEMPREGO AO TRABALHADOR DOMÉSTICO
# - 0686: PAGAMENTO DO SEGURO-DESEMPREGO AO TRABALHADOR RESGATADO DE CONDIÇÃO ANÁLOGA À DE ESCRAVO

# NATUREZAS DE RECEITA SEGURIDADE:
# - 79900200: APORTES PERIÓDICOS PARA COMPENSAÇÕES AO RGPS
# - 79900210: APORTES PERIÓDICOS PARA COMPENSAÇÕES AO RGPS-PRINCIPAL
# - 79900211: APORTES PERIÓDICOS/COMPENSAÇÕES AO RGPS-PRINCIPAL

# IDENTIFICADOR DE USO (IDUSO):
# - 6: RECURSOS DESTINADOS À CONTRAPARTIDA PARA IDENTIFICAR APLICAÇÃO MÍNIMA EM AÇÕES DE SAÚDE


criterios_despesas_seguridade <- list(
  
  # SAÚDE
  `01  Saúde` = list(
    criterio = "iduso_codigo %in% c(6) & funcao_governo_codigo %in% c('08')"
  ),
  
  # RGPS
  `02  RGPS` = list(
    criterio = "unidade_orcamentaria_codigo %in% c('33904', '40904', '55902', '25917')"
  ),
  
  # ASSISTÊNCIA SOCIAL
  `03  Assistência Social` = list(
    criterio = "funcao_governo_codigo %in% c('08') & acao_governo_codigo %in% c('0581', '00H4', '0583', '0585', '0653', '0686')"
  ),
  
  # ABONO SALARIAL
  `04  Abono Salarial` = list(
    criterio = "acao_governo_codigo %in% c('0581')"
  ),
  
  # SEGURO DESEMPREGO
  `05  Seguro Desemprego` = list(
    criterio = "acao_governo_codigo %in% c('00H4', '0686', '0653', '0585', '0583')"
  )
)

# ===============================================================================
# CRITÉRIOS DE RECEITAS SEGURIDADE (aplicados à df dados_receita)
# ===============================================================================

criterios_receitas_seguridade <- list(
  
  # TOTAL SEGURIDADE
  `01  Total Seguridade` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & natureza_receita_codigo_completo %in% c('79900200', '79900210', '79900211')"
  )
)

```

```{r rpps_fcdf_receitas_despesas}
#| warning: false
#| message: false
#| error: true
#| include: false

# ===============================================================================
# CRITÉRIOS ANEXO 4 - RPPS - LINHAS - FCDF - 2023
# ===============================================================================

# ===============================================================================
# CRITÉRIOS DE RECEITAS FCDF (aplicados à df dados_receita)
# ===============================================================================

criterios_receitas_fcdf <- list(
  
  # FCDF - RECEITA SEGURADOS - Ativo
  `01  FCDF - RECEITA SEGURADOS - Ativo` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210043', '1210421', '1210422', '1210423', '1210441', '1210442', '1210443', '1210461', '1210462', '1210463', '1219111', '1219132', '1219141') & (natureza_receita_codigo_completo %like% '%121503%' | natureza_receita_codigo_completo %like% '%1215011%' | natureza_receita_codigo_completo %like% '%1215014%')"
  ),
  
  # FCDF - RECEITA SEGURADOS - Inativos
  `02  FCDF - RECEITA SEGURADOS - Inativos` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210431', '1210432', '1210433', '1210434', '1210471') & (natureza_receita_codigo_completo %like% '%1215012%' | natureza_receita_codigo_completo %like% '%1215015%')"
  ),
  
  # FCDF - RECEITAS SEGURADOS - Pensionistas
  `03  FCDF - RECEITAS SEGURADOS - Pensionistas` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210481', '1210441', '1210442', '1210443', '1210444', '1210512', '1210513') & (natureza_receita_codigo_completo %like% '%1215013%' | natureza_receita_codigo_completo %like% '%1215016%')"
  ),
  
  # FCDF - RECEITA PATRONAL - Ativo
  `04  FCDF - RECEITA PATRONAL - Ativo` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210411', '1210413', '1210412', '1210414', '7210411', '7210412', '7210413', '7210414', '7210451', '7210452', '7210453', '7210454') & (natureza_receita_codigo_completo %like% '%121502%' | natureza_receita_codigo_completo %like% '%721502%')"
  ),
  
  # FCDF - RECEITA PATRONAL - Inativos e Pensionistas - vinculada
  `05  FCDF - RECEITA PATRONAL - Inativos e Pensionistas - vinculada` = list(
    criterio = "natureza_receita_codigo_completo %in% c('72100441', '1215021') & fonte_recursos_codigo %notin% c('00', '000')"
  ),
  
  # DRU - FCDF
  `06  DRU - FCDF` = list(
    criterio = "fonte_recursos_codigo %in% c('00', '000') & natureza_receita_codigo_completo %in% c('1210481', '1210441', '1210442', '1210443', '1210444', '1210511', '1210421', '1210422', '1210423', '1210431', '1210432', '1210433', '1210434', '1210452', '1210453', '1210462', '1210463', '1210472', '1210473', '1210474', '1210483', '1210484') & (natureza_receita_codigo_completo %like% '%1215%' | natureza_receita_codigo_completo %like% '%7215%')"
  ),
  
  # Total de Receitas RPPS FCDF
  `07  Total de Receitas RPPS FCDF` = list(
    criterio = "unidade_orcamentaria_codigo %notin% c('55902', '33904') & fonte_recursos_codigo %notin% c('54', '054') & fonte_recursos_detalhada_codigo %notin% c('010073910') & (natureza_receita_nome %like% '%PENSI%' | natureza_receita_nome %like% '%PENSO%' | natureza_receita_nome %like% '%RPPS%' | natureza_receita_nome %like% '%CPSS%') & fonte_recursos_codigo %in% c('23', '56', '023', '056', '024', '069')"
  ),
  
  # Receitas detalhadas FCDF (critério ampliado)
  `08  Receitas detalhadas FCDF` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210411', '1210413', '1210412', '1210414', '7210411', '7210412', '7210413', '7210414', '1210451', '1210453', '1210454', '1215021') & (natureza_receita_codigo_completo %like% '%1215502%' | natureza_receita_codigo_completo %like% '%721502%')"
  )
)

# ===============================================================================
# CRITÉRIOS DE DESPESAS FCDF (aplicados à df dados_despesa)
# ===============================================================================

criterios_despesas_fcdf <- list(
  
  # FCDF - DESPESAS - A detalhar
  `01  FCDF - DESPESAS - A detalhar` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(1, 2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('00') & acao_governo_codigo %in% c('00Q2', '00QN', '00NS')"
  ),
  
  # FCDF - DESPESAS - Aposentadorias
  `02  FCDF - DESPESAS - Aposentadorias` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(1, 2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('01') & acao_governo_codigo %in% c('00Q2', '00QN', '00NS', '0312', '00NR')"
  ),
  
  # FCDF - DESPESAS - Pensões
  `03  FCDF - DESPESAS - Pensões` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(1, 2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('03') & acao_governo_codigo %in% c('00Q2', '00QN', '00NS', '0312', '00NR')"
  ),
  
  # FCDF - DESPESAS - Outros Benefícios Previdenciários
  `04  FCDF - DESPESAS - Outros Benefícios Previdenciários` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(1, 2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %notin% c('00', '01', '03') & acao_governo_codigo %in% c('00Q2', '00QN', '0005', '0625') & funcao_governo_codigo %notin% c(10, 8)"
  ),
  
  # Critérios Gerais de Despesas e Verificação FCDF
  `05  Critérios Gerais de Despesas e Verificação FCDF` = list(
    criterio = "grupo_despesa_codigo_grupo %in% c(1) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & acao_governo_codigo %in% c('00Q2', '00NS', '00QN', '0005', '0625') & funcao_governo_codigo %notin% c(8, 10) | grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('01', '03') & fonte_recursos_codigo %notin% c('000', '023')"
  )
)

# ===============================================================================
# OBSERVAÇÕES IMPORTANTES SOBRE FCDF
# ===============================================================================

# CARACTERÍSTICAS ESPECÍFICAS DO FCDF:
# - Fundo Constitucional do Distrito Federal
# - Atende servidores do DF (civis e militares)
# - Esferas Orçamentárias: 1 (Fiscal) e 2 (Seguridade Social)

# UNIDADES ORÇAMENTÁRIAS ESPECÍFICAS:
# - 55902: FUNDO DO REGIME GERAL DA PREVIDÊNCIA SOCIAL - FRGPS
# - 33904: FUNDO DO REGIME GERAL DA PREVIDÊNCIA SOCIAL - FRGPS

# FONTES DE RECURSOS ESPECÍFICAS FCDF:
# - 23: CONTRIBUIÇÃO PARA O CUSTEIO DAS PENSÕES MILITARES
# - 56: CONTRIBUIÇÃO DO SERVIDOR PARA O PLANO DE SEGURIDADE SOCIAL DO DF
# - 023: PENSÕES MILITARES DA UNIÃO E EX-TERRITÓRIOS
# - 056: CONTRIBUIÇÃO ESPECÍFICA DO RPPS DA UNIÃO
# - 024: PENSÕES MILITARES E REMUNERAÇÃO MILITAR DO FCDF
# - 069: RECURSOS ESPECÍFICOS FUNDOS

# FONTES DETALHADAS:
# - 010073910: DRU-CONTRIBUIÇÃO SERVIDOR CIVIL ATIVO/PATRONAL-FCDF

# AÇÕES GOVERNO ESPECÍFICAS FCDF:
# - 00Q2: PENSIONISTAS DAS POLÍCIAS CIVIL E MILITAR E DO CORPO DE BOMBEIROS
# - 00QN: INATIVOS E PENSIONISTAS DA POLÍCIA CIVIL DO DISTRITO FEDERAL  
# - 00NS: INATIVOS DA POLÍCIA MILITAR E DO CORPO DE BOMBEIROS DO DF
# - 0312: SERVIÇOS PÚBLICOS DE EDUCAÇÃO DO DISTRITO FEDERAL
# - 00NR: MANUTENÇÃO DAS POLÍCIAS CIVIL E MILITAR E DO CORPO DE BOMBEIROS

# NATUREZAS DE RECEITA ESPECÍFICAS FCDF:
# - 1210xxx: CONTRIBUIÇÕES PREVIDENCIÁRIAS CIVIS
# - 1219xxx: CONTRIBUIÇÕES PREVIDENCIÁRIAS MILITARES ESPECÍFICAS
# - 1215xxx: CÓDIGOS ESPECÍFICOS RPPS
# - 7210xxx: RECEITAS INTRA-ORÇAMENTÁRIAS PATRONAIS

# SUBFUNÇÕES GOVERNO:
# - 272: PREVIDÊNCIA DO REGIME ESTATUTÁRIO
# - 273: PREVIDÊNCIA COMPLEMENTAR  
# - 274: PREVIDÊNCIA ESPECIAL
# - 845: OUTRAS TRANSFERÊNCIAS

# GRUPOS DE DESPESA:
# - 1: PESSOAL E ENCARGOS SOCIAIS

# ELEMENTOS DE DESPESA:
# - 00: A DETALHAR
# - 01: APOSENTAÇÕES, RESERVA REMUNERADA E REFORMA MILITAR
# - 03: PENSÕES DO RPPS E DO MILITAR

# FUNÇÕES GOVERNO EXCLUÍDAS:
# - 8: ASSISTÊNCIA SOCIAL
# - 10: SAÚDE
```

```{r rpps_receitas_despesas}
#| warning: false
#| message: false
#| error: true
#| include: false

# ===============================================================================
# CRITÉRIOS ANEXO 4 - RPPS - LINHAS - 2023
# ===============================================================================

# ===============================================================================
# CRITÉRIOS DE RECEITAS RPPS (aplicados à df dados_receita)
# ===============================================================================

criterios_receitas_rpps <- list(
  
  # CIVIS - RECEITA SEGURADOS - Ativo
  `01  CIVIS - RECEITA SEGURADOS - Ativo` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210043', '1210421', '1210422', '1210423', '1210441', '1210442', '1210443', '1210461', '1210462', '1210463') & natureza_receita_codigo_completo %like% '%1215011%' | natureza_receita_codigo_completo %like% '%1215014%' | natureza_receita_codigo_completo %like% '%121503%'"
  ),
  
  # CIVIS - RECEITA SEGURADOS - Inativos
  `02  CIVIS - RECEITA SEGURADOS - Inativos` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210431', '1210432', '1210433', '1210434', '1210471') & natureza_receita_codigo_completo %like% '%1215012%' | natureza_receita_codigo_completo %like% '%1215015%'"
  ),
  
  # CIVIS - RECEITAS SEGURADOS - Pensionistas
  `03  CIVIS - RECEITAS SEGURADOS - Pensionistas` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210481', '1210441', '1210442', '1210443', '1210444') & natureza_receita_codigo_completo %like% '%1215013%' | natureza_receita_codigo_completo %like% '%1215016%'"
  ),
  
  # CIVIS - RECEITA PATRONAL - Ativo
  `04  CIVIS - RECEITA PATRONAL - Ativo` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210411', '1210413', '1210412', '1210414', '7210411', '7210412', '7210413', '7210414', '7210451', '7210452', '7210453', '7210454') & natureza_receita_codigo_completo %like% '%121502%' | natureza_receita_codigo_completo %like% '%721502%'"
  ),
  
  # CIVIS - RECEITA PATRONAL - Inativos e Pensionistas - vinculada
  `05  CIVIS - RECEITA PATRONAL - Inativos e Pensionistas - vinculada` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('72100441')"
  ),
  
  # DRU - FCDF
  `06  DRU - FCDF` = list(
    criterio = "fonte_recursos_codigo %in% c('000', '00') & endsWith(fonte_recursos_detalhada_codigo,  c('980001')) & natureza_receita_codigo_completo %in% '%12151%'"
  ),
  
  # MILITARES - RECEITAS - Segurados
  `07  MILITARES - RECEITAS - Segurados` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210511', '1210512', '1210513', '1210514', '1210410', '1210412', '1210414') & natureza_receita_codigo_completo %like% '%121911%'"
  ),
  
  # Total das Receitas RPPS
  `08  Total das Receitas RPPS` = list(
    criterio = "unidade_orcamentaria_codigo %notin% c('33904', '40904') & fonte_recursos_codigo %notin% c('54', '00', '000', '054') & (natureza_receita_nome %like% '%PENSOES MILIT%' | natureza_receita_nome %like% '%PENS.MIL%' | natureza_receita_nome %like% '%RPPS%' | natureza_receita_nome %like% '%CPSS%' | natureza_receita_codigo_completo %like% '%1215%' | natureza_receita_codigo_completo %like% '%7215%' | natureza_receita_nome %like% '%CIV%')"
  ),
  
  # Total das Receitas RPPS (*)
  `09  Total das Receitas RPPS (*)` = list(
    criterio = "natureza_receita_codigo_completo %in% c('12100400', '19125600', '13210401', '32210400', '13210400', '19125615', '12100440', '12100464', '12100474', '12100473', '12100476', '12100463', '12100451', '12100452', '12100460', '12100456', '12100461', '12100433', '12100432', '12100433', '12100412', '12100413', '12100441', '12100410', '12100414') | natureza_receita_codigo_completo %like% '%19151900%' | natureza_receita_codigo_completo %like% '%19221001%' | natureza_receita_codigo_completo %like% '%19325500%' | natureza_receita_codigo_completo %like% '%19990101%' | natureza_receita_codigo_completo %like% '%72100400%'"
  )
)

# ===============================================================================
# CRITÉRIOS DE DESPESAS RPPS (aplicados à df dados_despesa)
# ===============================================================================

criterios_despesas_rpps <- list(
  
  # CIVIS - DESPESAS - A detalhar
  `01  CIVIS - DESPESAS - A detalhar` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('00') & acao_governo_codigo %in% c('0053', '0181') & funcao_governo_codigo %notin% c(10, 8)"
  ),
  
  # CIVIS - DESPESAS - Aposentadorias
  `02  CIVIS - DESPESAS - Aposentadorias` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('01') & acao_governo_codigo %in% c('0053', '0181')"
  ),
  
  # CIVIS - DESPESAS - Pensões
  `03  CIVIS - DESPESAS - Pensões` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('03') & acao_governo_codigo %in% c('0053', '0181')"
  ),
  
  # CIVIS - DESPESAS - Outros Benefícios Previdenciários
  `04  CIVIS - DESPESAS - Outros Benefícios Previdenciários` = list(
    criterio = "subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %notin% c('00', '01', '03') & acao_governo_codigo %in% c('0053', '0181', '0005', '0625') & funcao_governo_codigo %notin% c(10, 8) | acao_governo_codigo %in% c('0397')"
  ),
  
  # CIVIS - Extinto Instituto de Previdência da Câmara
  `05  CIVIS - Extinto Instituto de Previdência da Câmara` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & acao_governo_codigo %in% c('0397')"
  ),
  
  # CIVIS - Demais Benefícios
  `06  CIVIS - Demais Benefícios` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %notin% c('00', '01', '03') & acao_governo_codigo %in% c('0053', '0181', '0005', '0625') & funcao_governo_codigo %notin% c(10, 8)"
  ),
  
  # MILITARES - RECEITAS - Segurados
  `07  MILITARES - RECEITAS - Segurados` = list(
    criterio = "fonte_recursos_codigo %notin% c('00', '000') & natureza_receita_codigo_completo %in% c('1210511', '1210512', '1210513', '1210514', '1210410', '1210412', '1210414') & natureza_receita_codigo_completo %like% '%121911%'"
  ),
  
  # MILITARES - DESPESAS - A Detalhar Pensões
  `08  MILITARES - DESPESAS - A Detalhar Pensões` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & acao_governo_codigo %in% c('0179', '000Q') & elemento_despesa_codigo %in% c('00')"
  ),
  
  # MILITARES - DESPESAS - Pensões
  `09  MILITARES - DESPESAS - Pensões` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & grupo_despesa_codigo_grupo %in% c(1) & acao_governo_codigo %in% c('0179', '000Q') & elemento_despesa_codigo %in% c('03')"
  ),
  
  # MILITARES - DESPESAS - Outros Benefícios Pensionistas
  `10  MILITARES - DESPESAS - Outros Benefícios Pensionistas` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %notin% c('03', '00') & acao_governo_codigo %in% c('0179', '000Q') & subfuncao_governo_codigo %in% c('272', '273', '274', '845')"
  ),
  
  # MILITARES - DESPESAS - A Detalhar Inativos
  `11  MILITARES - DESPESAS - A Detalhar Inativos` = list(
    criterio = "grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('00') & acao_governo_codigo %in% c('214H', '218K')"
  ),
  
  # MILITARES - DESPESAS - Inativos
  `12  MILITARES - DESPESAS - Inativos` = list(
    criterio = "grupo_despesa_codigo_grupo %in% c(1) & elemento_despesa_codigo %in% c('01') & acao_governo_codigo %in% c('214H', '218K')"
  ),
  
  # MILITARES - DESPESAS - Outros Benefícios Inativos
  `13  MILITARES - DESPESAS - Outros Benefícios Inativos` = list(
    criterio = "acao_governo_codigo %in% c('214H', '218K') & elemento_despesa_codigo %notin% c('00', '01')"
  ),
  
  # MILITARES - DESPESAS - Compensação financeira entre RPPSU e os demais RPPS
  `14  MILITARES - DESPESAS - Compensação financeira entre RPPSU e os demais RPPS` = list(
    criterio = "acao_governo_codigo %in% c('00XJ')"
  ),
  
  # DRU - MILITARES
  `15  DRU - MILITARES` = list(
    criterio = "fonte_recursos_codigo %in% c('00', '000') & endsWith(fonte_recursos_detalhada_codigo,  c('980001')) & natureza_receita_codigo_completo %in% c('1210511', '1210512', '1210513', '1210514') & natureza_receita_codigo_completo %like% '%121911%'"
  ),
  
  # Critérios Gerais de Despesas e Verificação
  `16  Critérios Gerais de Despesas e Verificação` = list(
    criterio = "esfera_orcamentaria_codigo %in% c(2) & grupo_despesa_codigo_grupo %in% c(1) & subfuncao_governo_codigo %in% c('272', '273', '274', '845') & acao_governo_codigo %in% c('0005', '0625') & funcao_governo_codigo %in% c(8, 10) | acao_governo_codigo %in% c('214H', '218K') | grupo_despesa_codigo_grupo %in% c(1) & acao_governo_codigo_codigo != '21BW' & elemento_despesa_codigo %in% c('01', '03')"
  )
)

# ===============================================================================
# OBSERVAÇÕES IMPORTANTES SOBRE RPPS
# ===============================================================================

# ESFERAS ORÇAMENTÁRIAS:
# - 2: ORÇAMENTO DE SEGURIDADE SOCIAL

# SUBFUNÇÕES GOVERNO ESPECÍFICAS RPPS:
# - 272: PREVIDÊNCIA DO REGIME ESTATUTÁRIO
# - 273: PREVIDÊNCIA COMPLEMENTAR  
# - 274: PREVIDÊNCIA ESPECIAL
# - 845: OUTRAS TRANSFERÊNCIAS

# GRUPOS DE DESPESA:
# - 1: PESSOAL E ENCARGOS SOCIAIS

# ELEMENTOS DE DESPESA ESPECÍFICOS:
# - 00: A DETALHAR
# - 01: APOSENTAÇÕES, RESERVA REMUNERADA E REFORMA MILITAR
# - 03: PENSÕES DO RPPS E DO MILITAR

# AÇÕES GOVERNO ESPECÍFICAS:
# - 0053: PESSOAL INATIVO E PENSIONISTAS DOS EXTINTOS ESTADOS E TERRITÓRIOS
# - 0181: APOSENTADORIAS E PENSÕES - SERVIDORES CIVIS
# - 0179: PENSÕES MILITARES DAS FORÇAS ARMADAS  
# - 000Q: PENSÕES MILITARES DOS EX-TERRITÓRIOS E DO ANTIGO ESTADO DA GUANABARA
# - 214H: INATIVOS MILITARES DAS FORÇAS ARMADAS
# - 218K: INATIVOS MILITARES DOS EX-TERRITÓRIOS E DO ANTIGO ESTADO DA GUANABARA
# - 0397: APOSENTADORIAS E PENSÕES DO EXTINTO INSTITUTO DE PREVIDÊNCIA
# - 00XJ: COMPENSAÇÃO FINANCEIRA ENTRE O RPPSU E OS DEMAIS RPPS DOS ENTES

# FUNÇÕES GOVERNO:
# - 8: ASSISTÊNCIA SOCIAL
# - 10: SAÚDE

# NATUREZAS DE RECEITA PRINCIPAIS:
# - 12100xx: CONTRIBUIÇÕES PREVIDENCIÁRIAS CIVIS
# - 12105xx: CONTRIBUIÇÕES PREVIDENCIÁRIAS MILITARES  
# - 1215xxx: CÓDIGO COMPLETO ESPECÍFICO
# - 7215xxx: RECEITAS INTRA-ORÇAMENTÁRIAS

```

```{r rgps_receitas_despesas}
#| warning: false
#| message: false
#| error: true
#| include: false

# ===============================================================================
# CRITÉRIOS ANEXO 4 - RREO - RGPS (LINHAS) - 2023
# ===============================================================================

# ===============================================================================
# CRITÉRIOS DE RECEITAS (aplicados à df dados_receita)
# ===============================================================================

criterios_receitas_rgps <- list(
  
  # RECEITAS CORRENTES - DOS EMPREGADORES, TRABALHADORES E DEMAIS SEGURADOS
  `01  Receitas Correntes - Dos Empregadores, Trabalhadores e Demais Segurados` = list(
    criterio = "natureza_receita_codigo_completo %in% c('12100311', '12100312', '12100313', '12100311') & nre2_origem_receita_codigo_origem %in% c(2)"
  ),
  
  # RECEITAS CORRENTES - DEMAIS CONTRIBUIÇÕES  
  `02  Receitas Correntes - Demais Contribuições` = list(
    criterio = "nre2_origem_receita_codigo_origem %in% c(2) & natureza_receita_codigo_completo %notin% c('12100311', '12100312', '12100313')"
  ),
  
  # OUTRAS RECEITAS CORRENTES - COMPENSAÇÃO PREVIDENCIÁRIA RPPS/RGPS
  `03  Outras Receitas Correntes - Compensação Previdenciária RPPS/RGPS` = list(
    criterio = "nre2_origem_receita_codigo_origem %in% c(9) "
  ),
  
  # DEMAIS RECEITAS CORRENTES
  `04  Demais Receitas Correntes` = list(
    criterio = "nre1_categoria_economica_codigo %in% c(1) & nre2_origem_receita_codigo_origem %notin% c(2) "
  ),
  
  # RECEITAS DE CAPITAL - ALIENAÇÕES
  `05  Receitas de Capital - Alienações` = list(
    criterio = "nre2_origem_receita_codigo_origem %in% c(2) & nre1_categoria_economica_codigo %in% c(2)"
  ),
  
  # DEMAIS RECEITAS DE CAPITAL
  `06  Demais Receitas de Capital` = list(
    criterio = "nre1_categoria_economica_codigo %in% c(2) & nre2_origem_receita_codigo_origem %notin% c(2)"
  ),
  
  # RECEITAS INTRA-ORÇAMENTÁRIAS
  `07  Receitas INTRA-ORÇAMENTÁRIAS` = list(
    criterio = "nre1_categoria_economica_codigo %in% c(7, 8)"
  )
)

# ===============================================================================
# CRITÉRIOS DE DESPESAS (aplicados à df dados_despesa)
# ===============================================================================

criterios_despesas_rgps <- list(
  
  # APOSENTADORIAS
  `01  Aposentadorias` = list(
    criterio = "elemento_despesa_codigo %in% c('53', '54') & grupo_despesa_codigo_grupo %in% c(3) & modalidade_aplicacao_codigo %notin% c('91')"
  ),
  
  # PENSÕES
  `02  Pensões` = list(
    criterio = "elemento_despesa_codigo %in% c('55', '56') & grupo_despesa_codigo_grupo %in% c(3) & modalidade_aplicacao_codigo %notin% c('91')"
  ),
  
  # OUTROS BENEFÍCIOS
  `03  Outros Benefícios` = list(
    criterio = "elemento_despesa_codigo %in% c('57', '58') & grupo_despesa_codigo_grupo %in% c(3) & modalidade_aplicacao_codigo %notin% c('91')"
  ),
  
  # COMPENSAÇÃO PREVIDENCIÁRIA DO RGPS PARA O RPPS
  `04  Compensação Previdenciária do RGPS para o RPPS` = list(
    criterio = "elemento_despesa_codigo %notin% c('57', '58', '53', '54', '55', '56') & acao_governo_codigo %in% c('009W', '0531') & grupo_despesa_codigo_grupo %in% c(3) & modalidade_aplicacao_codigo %notin% c('91')"
  ),
  
  # DEMAIS DESPESAS
  `05  Demais Despesas` = list(
    criterio = "elemento_despesa_codigo %notin% c('57', '58', '53', '54', '55', '56') & acao_governo_codigo %notin% c('009W', '0531') & grupo_despesa_codigo_grupo %in% c(3) & modalidade_aplicacao_codigo %notin% c('91')"
  ),
  
  # A DETALHAR
  `06  A detalhar` = list(
    criterio = "elemento_despesa_codigo %in% c('00') & grupo_despesa_codigo_grupo %in% c(3) & modalidade_aplicacao_codigo %notin% c('91')"
  ),
  
  # DESPESAS PREVIDENCIÁRIAS (INTRA)
  `07  Despesas Previdenciárias (INTRA)` = list(
    criterio = "grupo_despesa_codigo_grupo %in% c(3) & modalidade_aplicacao_codigo %in% c('91') & elemento_despesa_codigo %notin% c('01', '03', '05')"
  )
  
  
)

# ===============================================================================
# OBSERVAÇÕES SOBRE OS CAMPOS DA dados_receita
# ===============================================================================

# Campos disponíveis em dados_receita:
# - natureza_receita_codigo_completo: código completo da natureza (ex: "13210101")
# - nre1_categoria_economica_codigo: 1=Correntes, 2=Capital, 7=Intra-Correntes, 8=Intra-Capital
# - nre2_origem_receita_codigo_origem: origem da receita (2=Contribuições, 9=Outras, etc.)
# - nre3_especie_receita_codigo_especie: espécie da receita
# - fonte_recursos_codigo: código da fonte de recursos
# - refinanciamento: "nao" ou "sim"
# - tipo_modalidade: "exceto intra" ou outras
```

```{r}
#| warning: false
#| message: false
#| error: true
# teste <- agrupar_e_combinar_dados(
#   df = dados_despesa ,
#   criterios = criterios_despesas_rpps,
#   codigo = "MAI/2025REOA12saude"
# )
# 
# teste <- teste %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)
# 
# DT_teste <- teste %>% 
#   filter(mes_lancamento == "MAI/2025") %>%
#   group_by(ordem, nome, categoria, item_informacao_nome) %>% 
#   summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
#   complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
#   pivot_wider(names_from = item_informacao_nome, values_from = saldo)
# 
# datatable(DT_teste)%>%
#   formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")




teste <- agrupar_e_combinar_dados(
  df = dados_receita %>% filter(unidade_orcamentaria_codigo %in% c(33904, 40904, 55902, 25917) | natureza_receita_codigo_completo == 79900211 ) ,
  criterios = criterios_receitas_rgps,
  codigo = "MAI/2025REOA12saude"
)

teste <- teste %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)

DT_teste <- teste %>% 
  filter(mes_lancamento == "MAI/2025") %>%
  group_by(ordem, nome, categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)

datatable(DT_teste)%>%
  formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")

```

```{r rcl}
#| include: false


# ===============================================================================
# ANEXO 3 - RCL (RECEITA CORRENTE LÍQUIDA) - RREO
# LISTA PARA FILTRAR DADOS_RECEITA
# BASEADA NOS PRINTS FORNECIDOS
# ===============================================================================

criterios_receitas_anexo3_rcl <- list(
  
  # === RECEITAS CORRENTES ===
  
  # IMPOSTOS, TAXAS E CONTRIBUIÇÕES DE MELHORIA
  `01  Impostos, Taxas e Contribuições de Melhoria` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(1)"
  ),
  
  # RECEITA DE CONTRIBUIÇÕES
  `02  Receita de Contribuições` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(2)"
  ),
  
  # RECEITA PATRIMONIAL
  `03  Receita Patrimonial` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(3)"
  ),
  
  # RECEITA AGROPECUÁRIA
  `04  Receita Agropecuária` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(4)"
  ),
  
  # RECEITA INDUSTRIAL
  `05  Receita Industrial` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(5)"
  ),
  
  # RECEITA DE SERVIÇOS
  `06  Receita de Serviços` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(6)"
  ),
  
  # TRANSFERÊNCIAS CORRENTES
  `07  Transferências Correntes` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(7)"
  ),
  
  # RECEITAS CORRENTES A CLASSIFICAR
  `08  Receitas Correntes a Classificar` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(8)"
  ),
  
  # OUTRAS RECEITAS CORRENTES
  `09  Outras Receitas Correntes` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & nre2_origem_receita_codigo_origem %in% c(9)"
  ),
  
  # CONTRIBUIÇÕES PARA PIS/PASEP
  `10  Contribuições para PIS/PASEP` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & 
      fonte_recursos_codigo %notin% c('055', '056') & 
      (!grepl('^1210091', natureza_receita_codigo_completo) | !grepl('^1212', natureza_receita_codigo_completo)) & 
      ((fonte_recursos_codigo %in% c('040', '041') | grepl('^1210091', natureza_receita_codigo_completo)) | grepl('^1212', natureza_receita_codigo_completo))"
  ),
  
  # DEDUÇÕES
  `11  Deduções` = list(
    criterio = "nre1_categoria_economica_codigo == 1 & (
      grepl('^1212', natureza_receita_codigo_completo) |
      grepl('^1210091', natureza_receita_codigo_completo) |
      grepl('^1210051', natureza_receita_codigo_completo) |
      grepl('^121911', natureza_receita_codigo_completo) |
      grepl('^1990031', natureza_receita_codigo_completo) |
      grepl('^1215041', natureza_receita_codigo_completo) |
      fonte_recursos_codigo %in% c('054', '055', '056', '040', '041')
    )"
  )
)

# ===============================================================================
# OBSERVAÇÕES SOBRE OS DADOS EXTRAÍDOS DOS PRINTS
# ===============================================================================
# 
# RECEITAS CORRENTES:
# - NRE2 Origem Receita: 1, 2, 3, 4, 5, 6, 7, 8, 9
# - Cada origem corresponde a uma categoria específica de receita corrente
#
# CONTRIBUIÇÕES PARA PIS/PASEP:
# - Critério complexo baseado no filtro detalhado do relatório
# - Fontes: 040, 041 (incluir) e 055, 056 (excluir)
# - Naturezas: 1210091, 1212
#
# DEDUÇÕES:
# - Baseado no SQL fornecido + dados dos prints
# - Naturezas: 1212, 1210091, 1210051, 121911, 1990031, 1215041
# - Fontes: 054, 055, 056, 040, 041
#
# ===============================================================================
# EXEMPLO DE USO:
# ===============================================================================
# 
# # Para aplicar os filtros:
# receitas_filtradas <- dados_receita %>%
#   filter(eval(parse(text = criterios_receitas_anexo3_rcl[["01  Impostos, Taxas e Contribuições de Melhoria"]]$criterio)))
#
# ===============================================================================
```

```{r}
#| warning: false
#| message: false
#| error: true
teste <- agrupar_e_combinar_dados(
  df = dados_receita,
  criterios = criterios_receitas_anexo3_rcl,
  codigo = "MAI/2025REOA12saude"
)

teste <- teste %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)

DT_teste <- teste %>% 
  filter(mes_lancamento == "MAI/2025", item_informacao_codigo == 5) %>%
  group_by(ordem, nome, categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)
# 
# datatable(DT_teste  %>% select("categoria", "RECEITA ORCAMENTARIA (LIQUIDA)"))%>%
#   formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")
```

```{r rcl_deducoes}
#| warning: false
#| message: false
#| error: true
#| include: false


# ===============================================================================
# ANEXO 3 - RCL (RECEITA CORRENTE LÍQUIDA) - RREO
# LISTA PARA FILTRAR DADOS_DESPESA (DEDUÇÕES)
# BASEADA EXCLUSIVAMENTE NOS PRINTS FORNECIDOS
# ===============================================================================

criterios_despesas_anexo3_rcl <- list(
  
  # === DEDUÇÕES DA RECEITA CORRENTE LÍQUIDA ===
  
  # TRANSFERÊNCIAS CONSTITUCIONAIS E LEGAIS
  `01  Transferências Constitucionais e Legais` = list(
    criterio = "acao_governo_codigo %in% c('0E36', '00SB') | grepl('^28846090900RX', programa_governo_codigo) | (programa_governo_codigo %in% c('0903', '2030', '2080') & modalidade_aplicacao_codigo %in% c(30, 31, 32, 35, 36, 40, 41, 42, 45, 46) & acao_governo_codigo %in% c('0044', '0045', '0046', '0050', '0051', '00H6', '006M', '00G6', '0169', '0223', '0369', '0546', '0547', '0999', '099B', '0A53', '0C03', '0C33', '0E25', '0E36', '00PX', '00QR', '00S3', '00S7', '00S8', '00SE', '00RX', '00UH'))"
  ),
  
  # DEDUÇÕES  
  `02  Deduções` = list(
    criterio = "acao_governo_codigo %in% c('0E36', '00SB') | grepl('^28846090900RX', programa_governo_codigo) | (programa_governo_codigo %in% c('0903', '2030', '2080') & modalidade_aplicacao_codigo %in% c(30, 31, 32, 35, 36, 40, 41, 42, 45, 46) & acao_governo_codigo %in% c('0044', '0045', '0046', '0050', '0051', '00H6', '006M', '00G6', '0169', '0223', '0369', '0546', '0547', '0999', '099B', '0A53', '0C03', '0C33', '0E25', '0E36', '00PX', '00QR', '00S3', '00S7', '00S8', '00SE', '00RX', '00UH'))"
  )
)

# ===============================================================================
# OBSERVAÇÕES SOBRE OS DADOS EXTRAÍDOS DOS PRINTS
# ===============================================================================
# 
# CAMPOS EXATOS DOS PRINTS (AJUSTADOS):
# - Ação Governo → acao_governo_codigo
# - Modalidade Aplicação → modalidade_aplicacao_codigo  
# - Programa Governo → programa_governo_codigo
# - PT Código → programa_governo_codigo
#
# TRANSFERÊNCIAS CONSTITUCIONAIS E LEGAIS (Print 1 e 2):
# - Ação Governo: 004H, 0045, 0051, 046H, 055T, 0169, 023T, 0369, 054F, 0547, 0627, 0032, 033F, 0333, 0023, 0025, 007P, 00RX
# - Modalidade Aplicação: 30, 31, 32, 35, 36, 40, 41, 42, 45, 46
# - Programa Governo: 0903 (OPERAÇÕES ESPECIAIS: TRANSFERÊNCIAS CONSTITUCIONAIS E AS DEC)
# - Ação Governo específica: 0E36, 00SB (COMPLEMENTAÇÃO DA UNIÃO AO FUNDO DE MANUTENÇÃO E DESENVOLVIM)
# - PT Código começa com: 28846090900RX
#
# DEDUÇÕES (Print 3 e 4):
# - Programa Governo: 0903, 2030 (EDUCAÇÃO BÁSICA), 2080 (QUALIDADE PARA TODOS)
# - Modalidade Aplicação: 30, 31, 32, 35, 36, 40, 41, 42, 45, 46
# - Todas as ações listadas em Transferências Constitucionais
# - PT Código começa com: 28846090900RX
#
# ===============================================================================
# EXEMPLO DE USO:
# ===============================================================================
# 
# # Para aplicar os filtros:
# transferencias_filtradas <- dados_despesa %>%
#   filter(eval(parse(text = criterios_despesas_anexo3_rcl[["01  Transferências Constitucionais e Legais"]]$criterio)))
#
# deducoes_filtradas <- dados_despesa %>%
#   filter(eval(parse(text = criterios_despesas_anexo3_rcl[["02  Deduções"]]$criterio)))
#
# ===============================================================================
```

```{r}
teste <- agrupar_e_combinar_dados(
  df = dados_despesa %>% unique() ,
  criterios = criterios_despesas_anexo3_rcl,
  codigo = "MAI/2025REOA12saude"
)

teste <- teste %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)

DT_teste <- teste %>% 
  filter(mes_lancamento == "MAI/2025") %>%
  group_by(ordem, nome, categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)
# 
datatable(DT_teste )%>%
  formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")
```

```{r}

```

```{r}
teste <- agrupar_e_combinar_dados(
  df = dados_receita %>% unique() ,
  criterios = criterios_receitas_rpps,
  codigo = "MAI/2025REOA12saude"
)

teste <- teste %>%   separate(categoria, into = c("ordem", "nome"), sep = 2, remove = FALSE)

DT_teste <- teste %>% 
  filter(mes_lancamento == "MAI/2025") %>%
  group_by(ordem, nome, categoria, item_informacao_nome) %>% 
  summarise(saldo = sum(saldo_r_item_informacao, na.rm = TRUE), .groups = "drop") %>%
  complete(categoria, item_informacao_nome, fill = list(saldo = 0)) %>%
  pivot_wider(names_from = item_informacao_nome, values_from = saldo)
# 
datatable(DT_teste )%>%
  formatRound(which(sapply(dados, is.numeric)), 2, mark = ".", dec.mark = ",")
```
