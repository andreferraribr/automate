---
title: "Importar Planilhas"
editor: visual
lang: "pt"
format:
  # docx: default
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
execute:
  warning: false
  message: false
---

```{r}
library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(plotly)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(DT)
library(stringr)
library(scales)



arq_despesa <- list.files( pattern='despesa_parte')


dados_despesa <- map_df(arq_despesa,read_excel) %>% clean_names()

tabela <- function(d, n) {(datatable(d %>%
   adorn_totals("row"),
 rownames = FALSE
 ) %>%
  formatRound (
    n,
    2,
    mark = ".",
    dec.mark = "," )%>% 
  DT::formatStyle(columns = colnames(.$x$data), fontSize = '75%'))}

# https://stackoverflow.com/questions/56997814/how-to-use-vector-of-column-names-as-input-into-dplyrgroup-by

# https://forum.posit.co/t/how-can-i-use-dplyr-group-by-in-a-function/45681

# https://dplyr.tidyverse.org/articles/programming.html

tabela_pivotada <- function(df, grupo,mes){
  itens <- df$item_informacao %>% unique() %>% na.omit()
  
  df <- df %>% filter(mes_lancamento == mes) %>% group_by(!!!syms(grupo))  %>% pivot_wider(names_from = item_informacao, values_from = saldo_r_item_informacao) %>% summarise_at(itens, sum, na.rm = TRUE)
  
  return(df)
  
}


dt_formatada <- function(df, grupo){
  datatable(df%>% adorn_totals("row"), rownames = FALSE)%>% formatRound(setdiff( df %>% colnames(), grupo), 2, mark = ".", dec.mark = "," )%>% 
    DT::formatStyle(columns = colnames(.$x$data), fontSize = '75%')
} 


dt_formatada( tabela_pivotada(dados_despesa %>% filter(refinanciamento == "sim"), teste_grupo, "DEZ/2024"), teste_grupo)

tabela_pivotada_01 <- function(df, grupo,mes){
  itens <- df$item_informacao %>% unique() %>% na.omit()
  
  df <- df %>% filter(mes_lancamento == mes) %>% group_by({grupo})  %>% pivot_wider(names_from = item_informacao, values_from = saldo_r_item_informacao) %>% summarise_at(itens, sum, na.rm = TRUE)
  
  return(df)
  
}




`%notin%` <- Negate(`%in%`)
myNumFmt <- as.fmt(digits=2, big.mark=".")
options(scipen = 999)

options(DT.options = 
          list(
            pageLength = 30,
            language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json')
            )
        )
# https://rstudio.github.io/DT/004-i18n.html
# https://rstudio.github.io/DT/options.html
# %>% formatCurrency(c('A', 'C')) %>% formatPercentage('D', 2)%>% formatRound('E', 3)

# dados_2024_despesa_parte_01 <- read_excel("dados_2024_despesa_parte_01.xlsx")
# 
# dados_2024_despesa_parte_02 <- read_excel("dados_2024_despesa_parte_02.xlsx")
# 
# dados_2024_despesa_parte_03 <- read_excel("dados_2024_despesa_parte_03.xlsx")
# 
# dados_2024_despesa_parte_04 <- read_excel("dados_2024_despesa_parte_04.xlsx")
# 
# dados_despesa <- full_join(dados_2024_despesa_parte_01, dados_2024_despesa_parte_02) 
# 
# dados_despesa <- full_join (dados_despesa,dados_2024_despesa_parte_03 )
# 
# dados_despesa <- full_join (dados_despesa,dados_2024_despesa_parte_04 ) %>% clean_names()
# 
# dados_despesa <- dados_despesa %>% relocate(dotacao_inicial, .before = dotacao_atualizada )

dados_despesa <- dados_despesa %>%  
    mutate (
      tipo_modalidade =
        ifelse(modalidade_aplicacao_codigo == 91, "intra", "exceto intra"),
      refinanciamento =
        case_when(
        grupo_despesa_codigo_grupo == 6 &
          elemento_despesa_codigo %in% c(76,77) &
          subfuncao_governo_codigo %in% c(841, 842, 843, 844, 846) &
          fonte_recursos_codigo == "443"  ~ "sim",
        !(grupo_despesa_codigo_grupo == 6 &
          elemento_despesa_codigo %in% c(76,77) &
          subfuncao_governo_codigo %in% c(841, 842, 843, 844, 846) &
          fonte_recursos_codigo == "443" )  ~ "nao",
        TRUE ~ "escape"),
      poder = case_when(
        orgao_uge_orgao_maximo_codigo %in% c(59000)  ~ "MINISTÉRIO PÚBLICO DA UNIÃO",
        orgao_uge_orgao_maximo_codigo %in% c(29000) ~ "DEFENSORIA PÚBLICA",
        TRUE ~ orgao_uge_poder_nome
      )
        
      )


itens_despesa <- dados_despesa$item_informacao %>% unique() %>% na.omit()

dados_receita <- read_excel("dados_2024_receita.xlsx") %>% clean_names()

dados_receita <- dados_receita %>% 
  mutate(tipo_modalidade =
           ifelse(nre1_categoria_economica_codigo %in% c(7,8), "intra", "exceto intra"),
         refinanciamento = 
           ifelse(natureza_receita_codigo_completo %in% c(81110201,21110201,21210201), "sim", "nao")
    
  )

itens_receita <- dados_receita$item_informacao %>% unique() %>% na.omit()

filtros_metodologia  <- read_excel("filtros.xlsx", sheet = "metodologia") 


dados_tabela_04 <- read_excel("dados_2024_conta_contabil_tabela_04.xlsx") %>% clean_names()

dados_anexo_12_rp <- read_excel("dados_2024_rp_anexo_12.xlsx") %>% clean_names()

itens_anexo_12_rp <- dados_anexo_12_rp$item_informacao %>% unique() %>% na.omit()

atributos_metodologia <- read_excel("filtros.xlsx", sheet = "metodologia")


dados_rp_anexo_07 <- read_excel("dados_2024_rp_anexo_07.xlsx") %>% clean_names()
itens_rp_anexo_07 <- dados_rp_anexo_07$item_informacao %>% unique() %>% na.omit()
```

```{r}

```

```{r}


# tipo_modalidade
# refinanciamento
# poder


```
