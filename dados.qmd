---
title: "Dados"
editor: visual
lang: "pt"
format:
  # docx: default
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
execute:
  warning: false
  message: false
---

Dados

```{r}
#| warning: false
#| message: false
#| error: false
library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(plotly)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(DT)
library(stringr)
library(scales)
library(ggthemes)


options(DT.options = list(pageLength = 10, fontSize = "70%", language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese.json')))
`%notin%` <- Negate(`%in%`)
myNumFmt <- as.fmt(digits=2, big.mark=".")
options(scipen = 999)
```

{{< include importar_arquivos.qmd >}}

## Despesa do exercício: atributos

```{r despesa_atributos}


funcao_atributos_dados <- function(x){
x <- head(x,-1) %>% select(-ends_with("nome"))  
pivot_longer( map_df( map(x,unique), length), cols = everything())
}


datatable(funcao_atributos_dados(dados_despesa))
```

## Receita do exercício: atributos

```{r receita_atributos}



datatable(funcao_atributos_dados(dados_receita))
```

## Restos a pagar: atributos

```{r rp_atributos}

# datatable(funcao_atributos_dados(dados_restos_a_pagar))
```

## Conta contábil: atributos

```{r conta_contabil_atributos}
# datatable(funcao_atributos_dados(dados_conta_contabil))
```

## Atributos ausentes (estão na metodologia, mas não estão nas bases de dados)

```{r atributos_ausentes}
atributos_metodologia <- read_excel("filtros.xlsx", sheet = "metodologia")

atributos_metodologia <- atributos_metodologia %>% unique()

atributos_dados <- (map_df(mget(ls(pattern = "dados_") ) ,funcao_atributos_dados))

colnames(atributos_dados )[1] ="atributo_clean"


ausentes <- setdiff(atributos_metodologia$atributo_clean,c(intersect(atributos_dados$atributo_clean, colnames(dados_despesa)),
intersect(atributos_dados$atributo_clean, colnames(dados_receita))))


# ausentes <- setdiff(atributos_metodologia$atributo_clean,c(intersect(atributos_dados$atributo_clean, colnames(dados_despesa)),
# intersect(atributos_dados$atributo_clean, colnames(dados_receita)),
# intersect(atributos_dados$atributo_clean, colnames(dados_restos_a_pagar)),
# intersect(atributos_dados$atributo_clean, colnames(dados_conta_contabil)))
# )


datatable(atributos_metodologia %>% filter(atributo_clean %in% ausentes) %>% group_by(demonstrativo, atributos) %>% summarise())
```

```{r}
`%notin%` <- Negate(`%in%`)



filtros_dados_despesa <- as.data.frame(colnames(dados_despesa %>% clean_names()))
names(filtros_dados_despesa)[1] ="atributo_clean"

filtros_dados_receita <- as.data.frame(colnames(dados_receita %>% clean_names()))
names(filtros_dados_receita)[1] ="atributo_clean"


filtros_dados <- rbind(filtros_dados_despesa, filtros_dados_receita)

datatable(filtros_metodologia %>% filter(atributo_clean %notin% filtros_dados$atributo_clean & !dimensao %in% c("despesa","despesa_recita" )& demonstrativo == "Tabela_04" ) )



verificar_filtros <- function(x) {
  filtros_metodologia %>% filter(atributo_clean %notin% filtros_dados$atributo_clean  & demonstrativo == x )
}


df_filtros_ausentes <- map_df(filtros_metodologia$demonstrativo %>% unique(), verificar_filtros)

datatable(df_filtros_ausentes)


```

![](images/ausente_anexo_06_ndd.png)
